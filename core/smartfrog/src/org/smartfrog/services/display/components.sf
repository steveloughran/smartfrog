/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/utils/logtofile/components.sf"
#include "/org/smartfrog/sfcore/workflow/conditional/conditional.sf"

  /**
    Display component.
    Redirect output to a window if graphics mode available.
  */
Display extends Prim {
      sfClass "org.smartfrog.services.display.SFDisplay"; //Wrapper for Display.java
      nameDisplay "output Display (Exit: alt+F4 )"; //Window Title
      positionDisplay "C"; //Default C. (also N, S, SE, ...)
      redirectStd true; //Redirect System.out,.in,.err
      textDisplay ""; //Intitial content
      //screenEditable true; //Editable?
      heightDisplay  400;
      widthDisplay   500;
      fontSize 12;
      //formatMsg     false; // Add date to every printed msg! Not to outputStreams. Ex. [21:44:10.934 16/12/01] msg
      autoClean false; // Should auto clean the screen?
      autoSave false; // Should save screen content before cleaning it?
      //maxDisplayLines 1000; // Max number of lines held in display text area, defaults to unlimited (-1)
      //cleanEveryNumSec  //Clean every 15 minutes by default. (15*60)
      //cleanEveryNumSec 15; //every 15 secs!
      //directoryAutoSave "."; //Default= "."
      //showIP false; // shows IP address in title;
      //showSfProcess false; // shows sfProcessName in title;
      //externalPrinter ; //Component implementing PrintMsfInf
      // terminateSFProcessOnExit true;// Terminates SF process when window is closed
      askSaveChanges false; //Ask to save changes?
}
// end Display

  /**
    Headless test. 
    When used as a condition, this component evaluates to true if the system 
    is headless.
    
    when used as a component, a LAZY reference to java.awt.headless will
    resolve to the current value of the JVM property, while setting that value
    will change the JVM property.
    
    It is up to the JVM itself what happens when that property is set on a running
    system. Most likely the property needs to be set on the command line, rather
    than midway through the life of an sfDaemon.
  */
Headless extends Condition {
  sfClass "org.smartfrog.services.display.HeadlessImpl";
}

