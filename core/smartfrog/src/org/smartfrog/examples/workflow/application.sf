/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/examples/workflow/base.sf"

/**
 * Define an application to be a sequence of:
 * copy file; run command for a period of time; remove file
 * Running a command for a period involves wrapping in "during" to limit the 
 * time of the run.
 * An application is parameterized by the file URL, filename and the 
 * commandline, plus the length of time to run the daemon
 */

Application extends Sequence {
    message "echo default command";
    filename "/tmp/default";
    fileURL "http://defaultHost/defaultfile";
    time 10000;                                  // default time in millisecs
    sfSyncTerminate true;

    actions extends LAZY {
    a extends Copyfile {
        toFile ATTRIB filename;
        fromURL ATTRIB fileURL;
    }
    b extends During {
    sfSyncTerminate true;
        time PARENT:ATTRIB time;               //avoid a loop..!
        action extends LAZY RunDaemon {
            message PARENT:ATTRIB message; //avoid a loop..!
        }
    }
    c extends Removefile {
        file ATTRIB filename;
    }
    }
}

/**
 * Some specific examples of applications: 
 * a web server and an application server
 */

WebServer extends Application {
    file "webServerCode";
    fileURL "http://codeserver/webServerCode";
    message "httpd";
}

AppServer extends Application {
    file "appServerCode";
    fileURL "http://codeserver/appServerCode";
    message "blustone";
}
