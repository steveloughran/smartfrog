/** (C) Copyright 1998-2006 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "org/smartfrog/sfcore/workflow/eventbus/eventbus.sf"


/**
 * Sequence is a modified compound which differs in that the sub-components
 * operate sequentially. They do not share the same lifecycle. A Sequence
 * combinator creates no subcomponents until it's sfStart phase at which point
 * the first mentioned sub-components is created in the normal way. The
 * Sequence combinator waits for each of its sub-components to terminate at
 * which point it starts the next. When the last child terminates normally it too
 * terminates normally. If an error occurs at any point, or a sub-component
 * terminates abnormally, the Sequence combinator does too.
 */
Sequence extends ActionsCompound {
    sfClass "org.smartfrog.sfcore.workflow.combinators.Sequence";
    //control action on an empty deployment
    sfShouldTerminate true;
}
