

/*
 * Created on Fri May 30 10:30:10 IST 2008
 *
 * Generated by GEMS 
 */
 
package org.smartfrog.authoringtool;

import java.util.Hashtable;
import org.eclipse.swt.graphics.Color;
import org.gems.designer.model.ConnectionDecoration;
import org.eclipse.draw2d.ColorConstants;
import org.gems.designer.model.ConnectionAppearance;
import org.gems.designer.figures.Hints;
import org.gems.designer.Aspect;
import org.gems.designer.ModelProvider;
import org.gems.designer.model.ModelObject;
import org.eclipse.swt.widgets.Display;

public class GraphicsProviderImpl extends org.gems.designer.model.GraphicsProviderImpl {
   
    public String getModelID() {
        return SmartfrogProvider.MODEL_ID;
    }
   
    protected void createAspects() {
     super.createAspects();
    }
   
    protected void createConnectionAppearances() {
        	ConnectionAppearance SimpleDependencyattr = new ConnectionAppearance(
                ConnectionAppearance.NONE,
                ConnectionAppearance.ARROW,
                Hints.getColor("(0,0,0)"),
                0,
                1
              );
        	connectionAppearances_.put(SimpleDependencyConnectionType.INSTANCE,SimpleDependencyattr);
             
        	ConnectionAppearance InputDependencyattr = new ConnectionAppearance(
                ConnectionAppearance.NONE,
                ConnectionAppearance.ARROW,
                Hints.getColor("(0,0,0)"),
                0,
                1
              );
        	connectionAppearances_.put(InputDependencyConnectionType.INSTANCE,InputDependencyattr);
             
        	ConnectionAppearance OutputDependencyattr = new ConnectionAppearance(
                ConnectionAppearance.NONE,
                ConnectionAppearance.ARROW,
                Hints.getColor("(0,0,0)"),
                0,
                1
              );
        	connectionAppearances_.put(OutputDependencyConnectionType.INSTANCE,OutputDependencyattr);
             
        super.createConnectionAppearances();
    }
    protected void createConnectionDecorations() {
        
        super.createConnectionDecorations();
    }
    
    protected void createDrawingHints() {
    	
    	Hashtable Component_hints = new Hashtable(7);
    	
		
		Component_hints.put("background-color", "(255,255,255)");
		
		
		Component_hints.put("draw-name", "true");
		
		
		Component_hints.put("draw-type", "true");
		
		
		Component_hints.put("label-font", "default");
		
		
		Component_hints.put("label-fontsize", "10");
		
		
		Component_hints.put("label-fontstyle", "normal");
		
		
		Component_hints.put("label-foreground", "(0,0,0)");
		
		
		Component_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(Component.class, Component_hints);
		
    	Hashtable Composit_hints = new Hashtable(7);
    	
		
		Composit_hints.put("background-color", "(255,255,255)");
		
		
		Composit_hints.put("draw-name", "true");
		
		
		Composit_hints.put("draw-type", "true");
		
		
		Composit_hints.put("label-font", "default");
		
		
		Composit_hints.put("label-fontsize", "10");
		
		
		Composit_hints.put("label-fontstyle", "normal");
		
		
		Composit_hints.put("label-foreground", "(0,0,0)");
		
		
		Composit_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(Composit.class, Composit_hints);
		
    	Hashtable DependencyModel_hints = new Hashtable(7);
    	
		
		DependencyModel_hints.put("background-color", "(255,255,255)");
		
		
		DependencyModel_hints.put("draw-name", "true");
		
		
		DependencyModel_hints.put("draw-type", "true");
		
		
		DependencyModel_hints.put("label-font", "default");
		
		
		DependencyModel_hints.put("label-fontsize", "10");
		
		
		DependencyModel_hints.put("label-fontstyle", "normal");
		
		
		DependencyModel_hints.put("label-foreground", "(0,0,0)");
		
		
		DependencyModel_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(DependencyModel.class, DependencyModel_hints);
		
    	Hashtable Attribute_hints = new Hashtable(7);
    	
		
		Attribute_hints.put("background-color", "(255,255,255)");
		
		
		Attribute_hints.put("draw-name", "true");
		
		
		Attribute_hints.put("draw-type", "true");
		
		
		Attribute_hints.put("label-font", "default");
		
		
		Attribute_hints.put("label-fontsize", "10");
		
		
		Attribute_hints.put("label-fontstyle", "normal");
		
		
		Attribute_hints.put("label-foreground", "(0,0,0)");
		
		
		Attribute_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(Attribute.class, Attribute_hints);
		
    	Hashtable And_hints = new Hashtable(7);
    	
		
		And_hints.put("background-color", "(255,255,255)");
		
		
		And_hints.put("draw-name", "true");
		
		
		And_hints.put("draw-type", "true");
		
		
		And_hints.put("label-font", "default");
		
		
		And_hints.put("label-fontsize", "10");
		
		
		And_hints.put("label-fontstyle", "normal");
		
		
		And_hints.put("label-foreground", "(0,0,0)");
		
		
		And_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(And.class, And_hints);
		
    	Hashtable Connectors_hints = new Hashtable(7);
    	
		
		Connectors_hints.put("background-color", "(255,255,255)");
		
		
		Connectors_hints.put("draw-name", "true");
		
		
		Connectors_hints.put("draw-type", "true");
		
		
		Connectors_hints.put("label-font", "default");
		
		
		Connectors_hints.put("label-fontsize", "10");
		
		
		Connectors_hints.put("label-fontstyle", "normal");
		
		
		Connectors_hints.put("label-foreground", "(0,0,0)");
		
		
		Connectors_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(Connectors.class, Connectors_hints);
		
    	Hashtable Or_hints = new Hashtable(7);
    	
		
		Or_hints.put("background-color", "(255,255,255)");
		
		
		Or_hints.put("draw-name", "true");
		
		
		Or_hints.put("draw-type", "true");
		
		
		Or_hints.put("label-font", "default");
		
		
		Or_hints.put("label-fontsize", "10");
		
		
		Or_hints.put("label-fontstyle", "normal");
		
		
		Or_hints.put("label-foreground", "(0,0,0)");
		
		
		Or_hints.put("label-background", "(255,255,255)");
		
		drawingHints_.put(Or.class, Or_hints);
		
		super.createDrawingHints();
	}
    
    public ModelProvider getModelProvider() {
        return SmartfrogProvider.getInstance();
    }
}


