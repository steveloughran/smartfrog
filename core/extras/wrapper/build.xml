<?xml version="1.0"?>
<project name="wrapper" default="default">

  <!--
  /** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

  For more information: www.smartfrog.org

  */
  -->

  <description>
     Build file for Service wrapper binding
  </description>

  <!-- override point -->
  <property file="build.properties"/>


  <property name="root.dir" location="../.."/>
  <!-- Import common stuff -->
  <import file="${root.dir}/common.xml"/>

  <property name="wrapper.jar" location="lib/wrapper.jar"/>


  <!-- ========================================================== -->
  <!-- ========================================================== -->
  <target name="init" depends="init-standard-output-dirs,use-smartfrog-tasks">
    <property name="secondary.jar"
      location="${dist.lib.dir}/${project.name}-launched.jar"/>
    <echo>Building ${target.jar} and ${secondary.jar}</echo>
  </target>

  <target name="fetch-libraries"
    description="pull in the smartfrog/dist/lib jar files">
    <!-- grab everything from the smartfrog distribution, even though
         the daemon will only load a subset -->
    <copy todir="${dist.lib.dir}">
      <fileset refid="smartfrog.lib.fileset"/>
    </copy>
  </target>


  <target name="which-os">
    <echo>we are ${os.name}</echo>
  </target>

  <target name="all" depends="dist,fetch-libraries"/>

  <!-- run the batch file to start the console -->
  <target name="run-dos" depends="all">
    <exec dir="bin" executable="cmd.exe" os="windows"
      failonerror="true">
      <arg value="sfconsole.bat"/>
    </exec>
  </target>

  <!-- run the unix service wrapper on Linux -->
  <target name="run-linux" depends="all">
    <exec dir="bin" executable="sh" os="Linux" failonerror="true">
      <arg value="sfservice"/>
      <arg value="console"/>
    </exec>
  </target>

  <target name="run" depends="run-dos,run-linux"
    description="build and run the daemon"
    />

  <target name="declare-run.classpath"
    depends="declare-run.classpath-no-tests"/>

  <property name="main" value="org.smartfrog.extras.wrapper.ServiceWrapper"/>

  <target name="exec-java-only" depends="all,declare-run.classpath"
    description="build and run the java executable only"
    >
    <java
      classname="${main}"
      fork="true"
      failonerror="true"
      >
      <arg value="-debug"/>
      <classpath>
        <pathelement location="${wrapper.jar}"/>
        <pathelement location="${target.jar}"/>
      </classpath>
    </java>
  </target>

  <property name="root.dir" location="../.."/>




  <!-- ========================================================== -->
  <!-- this is an override point -->
  <!-- create the JAR ${target.jar}-->
  <!-- ========================================================== -->
  <target name="package" depends="compile"
    description="create the JAR files">
    <jar destfile="${target.jar}"
      basedir="${build.classes.dir}"
      includes="**/*"
      excludes="**/launcher/*"
      >
      <manifest>
        <attribute name="Main-Class" value="${main}"/>
        <attribute name="Sealed" value="true"/>
      </manifest>
    </jar>
    <echo>created package ${target.jar}</echo>
    <jar destfile="${secondary.jar}"
      basedir="${build.classes.dir}"
      includes="**/launcher/*"
      />
    <echo>created package ${secondary.jar}</echo>
  </target>

</project>