<?xml version="1.0" ?>
<project name="systemtest" 
  xmlns:core="http://smartfrog.org/build/core"
  xmlns:ac="antlib:net.sf.antcontrib"
  xmlns:sf="antlib:org.smartfrog.tools.ant"
  >
  
  <description>
  All the targets for system tests
  This overrides some stuff in unittest
  </description>
  
  <!-- import the core -->
  <import file="unittest.xml"/>

 
  <!-- ========================================================== -->
  <!-- this is an override point -->
  <!-- system tests : anything that is tested on a live daemon 
       not to be run on public machines for
       security reasons, unless security is active-->

   <target name="ready-to-system-test"
     depends="package-tests,ready-to-test,extended-smartfrog-tasks" />

   <target name="system-tests" depends="ready-to-system-test"
     if="system.tests.enabled"
     description="run the system tests if system.tests.enabled is set">
       <sf:functionaltest testTimeout="600" shutdownTime="10">
         <application>
           <sf:daemon-debug failonerror="false" spawn="false"
               classpathref="tests.run.classpath"/>
         </application>
         <probe>
           <socket port="${smartfrog.daemon.port}" server="localhost"/>
         </probe>
         <test>
           <core:junit
               errorProperty="test.failed"
               failureProperty="test.failed"
               includeAntRuntime="true"
               >
             <sysproperty key="test.classes.dir"
                          value="${test.classes.dir}"/>
             <!--all properties beginning with test-->
             <classpath>
               <path refid="tests.run.classpath"/>
             </classpath>
             <batchtest todir="${test.data.dir}">
               <!-- bulk test case -->
               <fileset dir="${test.classes.dir}">
                 <include name="org/smartfrog/**/system/**/*Test.class"/>
               </fileset>
             </batchtest>
           </core:junit>
           <fail if="failure">Junit failed</fail>
         </test>
         <teardown>
           <sf:stopdaemon failonerror="false"/>
         </teardown>
       </sf:functionaltest>
  </target>
  
</project>    
