SmartFrog 3.12.032
======================

This is a new release of SmartFrog, the Java-based, LPGL-licensed
distributed deployment framework developed by HP Laboratories. SmartFrog
enables applications to be deployed across multiple machines,
configuring different aspects of the system so that they are all
consistently configured, and managing the life-cycle of the application
as a whole. The project's home page is http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308

This release is 3.12.032; built from revision 6388
of the SVN repository. This release has an extended language
with the ability to tag attributes, and includes the following items:

* Core smartfrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.  
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault 
  tolerant systems.
* Database: components to issue database commands, and deploy HSLDB and MySQL.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* Scripting: support for BSF-hosted scripting languages
* Testing: Distributed JUnit and component testing with SFUnit.
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support it, and sample templates
  are provided to start and stop Tomcat and JBoss. The Jetty component can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files and application servers.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.

Packaging
=========

This release is available as:

* RPM files inside a .tar.gz file.
* a JAR installer.
* the original core smartfrog distribution as .zip and .tar.gz (deprecated)


The RPM installation is for RPM-based Linux systems. The archive contains the
following RPM files:

smartfrog:        the core SmartFrog distribution.
smartfrog-daemon: the shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   example code and documentation.
smartfrog-javadocs: javadocs for the project

smartfrog-ant:    Ant task and build file execution
smartfrog-anubis: Distributed partition-aware tuple space
smartfrog-database: Database access
smartfrog-jmx:    JMX integration though MX4J
smartfrog-junit:  Junit 3.8.2 test execution
smartfrog-logging: Logging through Log4J and commons-logging
smartfrog-networking: SSH, SCP, FTP and email
smartfrog-quartz:  Scheduled operations
smartfrog-scripting: Scripted components
smartfrog-www:      Web support: Deployment and liveness pages
smartfrog-xml:      XML Support
smartfrog-xmpp:     XMPP/Jabber communications
smartfrog-xunit:    Distributed testing and reporting

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or 
Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.


Security warning
================

Unless SmartFrog is configured with security, a running daemon will
listen on its configured port for incoming deployment requests, and
deploy the applications with the rights of the user running the daemon.
When the smartfrog-daemon RPM is installed, that means that a process
running as root will be listening on an open port for incoming
deployment requests. Do not deploy SmartFrog this way on any untrusted
network, not without turning security on and, ideally, recreating the
RPMs with signed JAR files.

Building SmartFrog
==================

SmartFrog requires Java 1.5 and Ant 1.7 to build. The izpack and source .zip and
.tar.gz distributions include a source tree adequate to build the
entire system. To build a later release, please follow the instructions at
  http://sourceforge.net/svn/?group_id=87384
to check out smartfrog/trunk/core from our repository.

This release was built with revision 6388 of the repository, which
is available under the SVN branch
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/release3.12.032

We strongly encourage anyone interested in building or extending
SmartFrog to get involved in the SmartFrog developer mailing list, which
can be found from the sourceforge project page
http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Thank you!

The SmartFrog Team        http://smartfrog.org/

Changes since SmartFrog 3.12.026
================================

** Bug
    * [SFOS-361] - Prim.sfAttributes() does not work over RMI, fails with a NotSerializableException
    * [SFOS-570] - Add Restlet Client support
    * [SFOS-627] - If a component throws an exception, that exception doesnt propagate to the junit reportts of the remote test runner
    * [SFOS-739] - An ssh component test failed
    * [SFOS-742] - Not enough TerminationRecord.abnormal() operations include the throwable that caused the problem
    * [SFOS-743] - Move up to commons-logging 1.1.1
    * [SFOS-750] - Regression: a change to core has broken the WWW tests
    * [SFOS-752] - TestCompound doesnt appear to handle exit types on actions correctly
    * [SFOS-755] - Cruise Control is breaking because the home-built typica.jar is java1.6+
    * [SFOS-756] - TransactionImpl is not be closing statements; we may leak JDBC connections
    * [SFOS-759] - WorkflowThread doesnt use sfShouldTerminate; it always terminates
    * [SFOS-760] - TestCompound can report a liveness failure when the action has terminated -even when the termination was expected
    * [SFOS-766] - WorkflowThread should always terminate when the TR is abnormal, even when sfShouldTerminate==false
    * [SFOS-784] - org.smartfrog.sfcore.logging.LogImpl.logLevel=7 defaults to LOG ALL instead of nothing.
    * [SFOS-785] - sfStopDaemon does not pass default.ini configuration.
    * [SFOS-796] - default.ini logs at debug
    * [SFOS-798] - scp-upload target in release build is failing as there are no longer *.tar to chmod
    * [SFOS-799] - The management console shows a component with the same name (sfCompleteName) when a child registers itself again in a component. It should show the given name in the parent context.
    * [SFOS-800] - Parent components get confused if a child links itself via an attribute reference
    * [SFOS-802] - EC2 testKillInstances failing
    * [SFOS-803] - The subprocess can try to start using the shell environment and use the wrong jdk when the main daemon has been started with a shell script that set the environment only for it.
    * [SFOS-805] - CC failing with obscure error about unzip failing
    * [SFOS-807] - minfileCount attribute of Files should be minFileCount, with the case changed

** Feature Request
    * [SFOS-765] - Add "removeLastElement" to Reference

** Improvement
    * [SFOS-102] - database binding component doesn't support custom properties
    * [SFOS-544] - Host REST components under jetty
    * [SFOS-729] - Make childminder interface use a typed <liveness> enumeration
    * [SFOS-741] - Move attribute read stage of SSH components from sfDeploy() to sfStart()
    * [SFOS-745] - move up to commons-codec 1.3
    * [SFOS-746] - Have a look at the net component classes, bring up to java5 and review the tests
    * [SFOS-747] - Move ProcessCompoundImpl to java5 collections
    * [SFOS-751] - Include stack trace in and codebase in parsing exceptions
    * [SFOS-753] - Improve FileExists to help diagnose more complex problems
    * [SFOS-757] - Allow way to turn the signal handler off
    * [SFOS-781] - review release notes and spec/build file
    * [SFOS-783] - Extended the  "sfProcessClassPath" to be able to take more complex data.

** New Feature
    * [SFOS-667] - Add presence checking for Xmpp components
    * [SFOS-737] - Ant tasks to take the -p parameter through a port attribute
    * [SFOS-749] - Add a PropertyPasswordProvider to read in a password for a property
    * [SFOS-762] - Add a way for the Assert component to check the min/max length of an array
    * [SFOS-779] - Extend Files component to generate fileSet and fileSetString attributes at runtime.
    * [SFOS-806] - Add FilesCompound compound to create a files list from multiple descriptons


** Task
    * [SFOS-728] - Review  org.smartfrog.sfcore.processcompound


  




