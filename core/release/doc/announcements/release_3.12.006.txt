SmartFrog 3.12.006
======================

This is a new release of SmartFrog, the Java-based, LPGL-licensed
distributed deployment framework developed by HP Laboratories. SmartFrog
enables applications to be deployed across multiple machines,
configuring different aspects of the system so that they are all
consistently configured, and managing the life-cycle of the application
as a whole. The project's home page is http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308

This release is 3.12.006; built from revision 5257
of the SVN repository. This release has an extended language
with the ability to tag attributes, and includes the following items:

* Core smartfrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.  
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault 
  tolerant systems.
* Database: components to issue database commands, and deploy HSLDB and MySQL.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* Scripting: support for BSF-hosted scripting languages
* Testing: Distributed JUnit and component testing with SFUnit.
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support it, and sample templates
  are provided to start and stop Tomcat and JBoss. The Jetty component can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files and application servers.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.

Packaging
=========

This release is available as:

* RPM files inside a .tar.gz file.
* a JAR installer.
* the original core smartfrog distribution as .zip and .tar.gz (deprecated)


The RPM installation is for RPM-based Linux systems. It comprises three RPM
files, smartfrog, smartfrog-daemon and smartfrog-demo:

smartfrog:        the core SmartFrog distribution.
smartfrog-daemon: the shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   example code and documentation.

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or 
Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.


Security warning
================

Unless SmartFrog is configured with security, a running daemon will
listen on its configured port for incoming deployment requests, and
deploy the applications with the rights of the user running the daemon.
When the smartfrog-daemon RPM is installed, that means that a process
running as root will be listening on an open port for incoming
deployment requests. Do not deploy SmartFrog this way on any untrusted
network, not without turning security on and, ideally, recreating the
RPMs with signed JAR files.

Building SmartFrog
==================

SmartFrog requires Java 1.5 and Ant 1.7 to build. The izpack and source .zip and
.tar.gz distributions include a source tree adequate to build the
entire system. To build a later release, please follow the instructions at
  http://sourceforge.net/svn/?group_id=87384
to check out smartfrog/trunk/core from our repository.

This release was built with revision 5257 of the repository, which
is available under the SVN branch
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/release3.12.006

We strongly encourage anyone interested in building or extending
SmartFrog to get involved in the SmartFrog developer mailing list, which
can be found from the sourceforge project page
http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Thank you!

The SmartFrog Team        http://smartfrog.org/

Changes since last release
==========================

SFOS-486: Add property to SF CLI to be able to load descriptions from the filesystem 
when security is on

If you set the environment variable SFSECURERESOURCES_OFF=ENABLED, then resources
can be loaded from unsigned JARs. In a daemon, this exposes in a security risk. 
In the client-side programs, this is a useful feature, as it means that even when 
SmartFrog is running in secure mode, it can parse and deploy SmartFrog descriptions
from the local filesystem. In this case the client node itself must be trusted, 
as malicious deployment descriptors could be instantiated. 

SFOS-357: Move Jetty support up to Jetty 6 (ongoing)

This release contains a preview of the Jetty-6 support in the Jetty component. This is not yet
stable; anyone using Jetty under SmartFrog should remain with a previous release of SmartFrog 3.12. 
Be advised that one change is not backwards compatible: the Jetty component is no longer a 
compound; you can no longer nest servlet and web application components under Jetty. Removing 
this feature makes the lifecyle of the server and its children more deterministic, and produces 
more stable deployments. 

However, it does mean that existing deployment descriptors will break. Plan for the change by 
moving all children of Jetty components into a Compound that deploys Jetty and its contents. 


Release Notes - SmartFrog - Version 3.12.006

** Bug
    * [SFOS-224] - headless mode isn't working
    * [SFOS-287] - org.smartfrog.services.ssh.FilePasswordProvider reads in a file without any current directory
    * [SFOS-470] - Clean up ThreadLocal instances during component termination, when appropriate
    * [SFOS-481] - TestCompound doesnt set its forcedTimeout attribute when the action or tests are terminated by a forced shutdown
    * [SFOS-485] - release build.xml isnt compatible with Ant1.7.0


** Improvement
    * [SFOS-133] - stop Cruise Control javadocs from complaining about various things in some components
    * [SFOS-428] - Eclipse whines about a lot of minor things
    * [SFOS-463] - adopt StringBuilder in common StringBuffer operations
    * [SFOS-469] - Hide ThreadLocal use in SFInputStream

** New Feature
    * [SFOS-486] - Add property to SF CLI to be able to load descriptions from the filesystem when security is on.


** Task
    * [SFOS-139] - Move up to Ivy 2.0.0 alpha/beta releases
    * [SFOS-421] - Run IDE code analysis over source to look for issues and Java5 upgrades

** Sub-task
    * [SFOS-41] - Make font bigger, in both gui and console (for demos etc)
    * [SFOS-426] - Move workflow components to Java5
    * [SFOS-477] - stop making jetty a compound, as it only confused the lifecycle of children


