SmartFrog 3.17.014
==================

This is a new release of SmartFrog, the Java-based, LPGL-licensed
distributed deployment framework developed by HP Laboratories. SmartFrog
enables applications to be deployed across multiple machines,
configuring different aspects of the system so that they are all
consistently configured, and managing the life-cycle of the application
as a whole. The project's home page is http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308

This release is 3.17.014; built from revision 7790
of the SVN repository.

It was compiled with the Java version set to Java 6 -it will not work
on Java1.5 JVMs.

This release includes the following items:

* The core SmartFrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault
  tolerant systems.
* Database: components to issue database commands, and deploy HSLDB and 
  MySQL databases.
* Hadoop: a version of Apache Hadoop with SmartFrog management, and
  support components to interact with Hadoop: filesystem operations and 
  Job submission. This is still experimental and must be considered 
  unstable.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J, and the 
  SLF4J framework.
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* RpmTools: components for working with or deploying with RPMs
* Scripting: support for BSF-hosted scripting languages
* Testing: Distributed JUnit and component testing with SFUnit.
* Velocity: generation/transformation of text files during deployment
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support it, and sample templates
  are provided to start and stop Tomcat and JBoss. 
* Jetty: The Jetty components can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files and application servers.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.


Packaging
=========

This release is available as:

* RPM files inside a .tar.gz file.
* A JAR installer.
* The original core smartfrog distribution as .zip and .tar.gz (deprecated).
* A .tar.gz file containing everything needed to create a private set of RPM files
  containing JAR files signed by a private Certification Authority.


The RPM installation is for RPM-based Linux systems. The archive contains the
following RPM files:

smartfrog:        The core SmartFrog distribution.
smartfrog-daemon: The shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   Example code and documentation.
smartfrog-javadocs: Javadocs for the project
smartfrog-ant:    Ant task and build file execution
smartfrog-anubis: Distributed partition-aware tuple space
smartfrog-csvfiles: Support for reading/writing CSV Files.
smartfrog-database: Database access
smartfrog-jetty:   Jetty support
smartfrog-jmx:    JMX integration though MX4J
smartfrog-junit:  Junit 3.8.2 test execution
smartfrog-hadoop: Hadoop support
smartfrog-logging: Logging through Log4J and commons-logging
smartfrog-networking: SSH, SCP, FTP and email
smartfrog-quartz:  Scheduled operations
smartfrog-rpmtools: RPM support tools  
smartfrog-scripting: Scripted components
smartfrog-velocity: Velocity template processing
smartfrog-www:      Web support: Deployment and liveness pages
smartfrog-xml:      XML Support
smartfrog-xmpp:     XMPP/Jabber communications
smartfrog-xunit:    Distributed testing and reporting

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or 
Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.


Security warning
================

Unless SmartFrog is configured with security, a running daemon will
listen on its configured port for incoming deployment requests, and
deploy the applications with the rights of the user running the daemon.
When the smartfrog-daemon RPM is installed, that means that a process
running as root will be listening on an open port for incoming
deployment requests. Do not deploy SmartFrog this way on any untrusted
network, not without turning security on.

There is a special distribution .tar.gz file that can be used to generate
a private set of secure RPM files.

Building SmartFrog
==================

SmartFrog requires Java 1.6+ and Ant 1.7+ to build. The izpack and source .zip and
.tar.gz distributions include a source tree adequate to build the
entire system. To build a later release, please follow the instructions at
  http://sourceforge.net/svn/?group_id=87384
to check out smartfrog/trunk/core from our repository.

This release was built with revision 7790 of the repository, which
is available under the SVN branch
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/release3.17.014

We strongly encourage anyone interested in building or extending
SmartFrog to get involved in the SmartFrog developer mailing list, which
can be found from the sourceforge project page
http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Thank you!

The SmartFrog Team        http://smartfrog.org/

Changes since last release
==========================



Release Notes - SmartFrog - Version 3.17.014

** Bug
    * [SFOS-1095] - getting broken pipe on attempt to push out a third deployment of hadoop components
    * [SFOS-1153] - security exception in Hadoop RPC
    * [SFOS-1163] - Hadoop datanode live address coming up with ipv6 address
    * [SFOS-1172] - Security stack trace when trying to run Hadoop's JSP pages on the RPM installation
    * [SFOS-1186] - JobSubmission test condition isnt working against a remote cluster
    * [SFOS-1211] - JobSubmissionTest failing with "Shuffle Error: Exceeded MAX_FAILED_UNIQUE_FETCHES"
    * [SFOS-1235] - DataProvider/Consumer Tests are failing in VM -race condition surfacing?
    * [SFOS-1237] - In the cluster, not everything is picking up/publishing its address
    * [SFOS-1246] - sfDaemon doesnt terminate from the dock bar
    * [SFOS-1247] - izpack failing to compile
    * [SFOS-1249] - JobSubmissionTest failing -destination dir not being created
    * [SFOS-1252] - IllegalStateException when trying to register servlet mappings in Jetty
    * [SFOS-1258] - Move the RPMs to RHEL 5
    * [SFOS-1271] - Sourceforge release process is broken as SF have changed it

** Improvement
    * [SFOS-1166] - Move the codebase to Java6
    * [SFOS-1248] - ant install target to pull in all of the runtime, not just third-party binaries
    * [SFOS-1254] - make hadoop components conditional on an "enabled" flag; support boolean values or
      Condition references
    * [SFOS-1255] - Get core/release to generate RPMs on OS/X 
    * [SFOS-1256] - all exceptions thrown when parsing an include file should include the filename
    * [SFOS-1257] - add way for ExpandFullyTask to take a memory setting
    * [SFOS-1262] - propagate the "use auto proxy settings" option down to forked JVMs
    * [SFOS-1263] - Make it possible to override ivysettings.xml

** New Feature
    * [SFOS-1196] - In org.smartfrog.services.display.Display, create a facility whereby additional menu
      items can be added to the management console
    * [SFOS-1230] - deploy a hadoop cluster to a remote machine/cluster by ssh
    * [SFOS-1234] - add an SF_OPTS environment variable that can set SF JVM arguments without editing any of the SF files
    * [SFOS-1243] - create targets in common.xml to match the commands, eg sfDaemon, sfPing etc
    * [SFOS-1241] - Add new HostnameIs Condition


  
