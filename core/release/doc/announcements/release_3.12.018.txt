SmartFrog 3.12.018
======================

This is a new release of SmartFrog, the Java-based, LPGL-licensed
distributed deployment framework developed by HP Laboratories. SmartFrog
enables applications to be deployed across multiple machines,
configuring different aspects of the system so that they are all
consistently configured, and managing the life-cycle of the application
as a whole. The project's home page is http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308

This release is 3.12.018; built from revision 5781
of the SVN repository. This release has an extended language
with the ability to tag attributes, and includes the following items:

* Core smartfrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.  
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault 
  tolerant systems.
* Database: components to issue database commands, and deploy HSLDB and MySQL.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* Scripting: support for BSF-hosted scripting languages
* Testing: Distributed JUnit and component testing with SFUnit.
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support it, and sample templates
  are provided to start and stop Tomcat and JBoss. The Jetty component can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files and application servers.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.

Packaging
=========

This release is available as:

* RPM files inside a .tar.gz file.
* a JAR installer.
* the original core smartfrog distribution as .zip and .tar.gz (deprecated)


The RPM installation is for RPM-based Linux systems. The archive contains the
following RPM files:

smartfrog:        the core SmartFrog distribution.
smartfrog-daemon: the shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   example code and documentation.
smartfrog-javadocs: javadocs for the project

smartfrog-ant:    Ant task and build file execution 
smartfrog-anubis: Distributed partition-aware tuple space
smartfrog-database: Database access 
smartfrog-jmx:    JMX integration though MX4J 
smartfrog-junit:  Junit 3.8.2 test execution
smartfrog-logging: Logging through Log4J and commons-logging
smartfrog-networking: SSH, SCP, FTP and email
smartfrog-quartz:  Scheduled operations
smartfrog-scripting: Scripted components
smartfrog-www:      Web support: Deployment and liveness pages
smartfrog-xml:      XML Support
smartfrog-xmpp:     XMPP/Jabber communications
smartfrog-xunit:    Distributed testing and reporting

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or 
Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.


Security warning
================

Unless SmartFrog is configured with security, a running daemon will
listen on its configured port for incoming deployment requests, and
deploy the applications with the rights of the user running the daemon.
When the smartfrog-daemon RPM is installed, that means that a process
running as root will be listening on an open port for incoming
deployment requests. Do not deploy SmartFrog this way on any untrusted
network, not without turning security on and, ideally, recreating the
RPMs with signed JAR files.

Building SmartFrog
==================

SmartFrog requires Java 1.5 and Ant 1.7 to build. The izpack and source .zip and
.tar.gz distributions include a source tree adequate to build the
entire system. To build a later release, please follow the instructions at
  http://sourceforge.net/svn/?group_id=87384
to check out smartfrog/trunk/core from our repository.

This release was built with revision 5781 of the repository, which
is available under the SVN branch
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/release3.12.018

We strongly encourage anyone interested in building or extending
SmartFrog toget on the mailing list, which can be found under
the sourceforge project page:
http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Thank you!

The SmartFrog Team        http://smartfrog.org/

Changes since last release
==========================
There was a release in late december, 3.12.016. Although published to the
central repository, it was considered an interim release before the next
stable version, namely 3.12.018.

We have included the 3.12.016 release notes alongside those of 3.12.018, 
as this release is the first time that the 3.12.016 changes are likely to be 
picked up.

As well as ongoing improvements in test handling and execution, there is now
support for locally-published Ivy artifacts from the library components,
components that can download versioned JAR files from private or public
repositories as part of a deployment.  The SSH/SCP components have been reworked
to extract password information from password providers; a number of such 
password providers have been implemented for use by all components that accept
passwords.

Release Notes - SmartFrog - Version 3.12.018

** Bug
    * [SFOS-152] - Cargo tests are failing, probably we are out of sync 
                   with cargo
    * [SFOS-482] - Jetty hangs if the number of socket acceptors is so 
                   great there are no threads left to handle the work
    * [SFOS-586] - string OOBE in netbeans 6 plugin
    * [SFOS-587] - sax parse exception parsing the smartfrog grammar in netbeans
    * [SFOS-596] - rpm .tar.gz bundle is created without .tar in the filename
    * [SFOS-599] - IvyLocalCachePolicy doesn't look for cached artifacts
                   in the right place
    * [SFOS-606] - Test compound messages could be improved
    * [SFOS-607] - ant-launcher is actually needed by ant.jar
    * [SFOS-610] - the original classname of ExtractedExceptions should
                   be compared in tests


** Improvement
    * [SFOS-602] - Move library unit tests into their own package

** New Feature
    * [SFOS-598] - add jarVersion attribute to Version
    * [SFOS-600] - Add a NoRemoteAccessPolicy that can be used to declare 
                  that remote access is not supported


** Task
    * [SFOS-138] - Move cargo components up to Cargo 0.9
    * [SFOS-145] - Add ivy policy to retrieve from locally published 
                    artifacts
    * [SFOS-533] - add exception list support to TestCompoundImpl
    * [SFOS-592] - Deployment Reporting for Avalanche.


  
Release Notes - SmartFrog - Version 3.12.016

** Bug
    * [SFOS-581] - test descriptions are not preserved in TestLifecycleEvents
    * [SFOS-585] - ClassNotFoundException in netbeans plugin in netbeans 6.0
    * [SFOS-593] - Multihost mode for Actions or Scripts, fail when using
                   sfPing and component is in second host while first host is also available.
    * [SFOS-594] - properties matching the test.* pattern are not set in the test daemon


** Improvement
    * [SFOS-262] - SSH Component: Brining common stuff for passwd and public
                   key authentication to a super class.
    * [SFOS-580] - improve netbeans support through relative import paths
    * [SFOS-583] - add ant's optional JARs to components/ant/ivy.xml
    * [SFOS-584] - drop ant-launcher from the sf-ant dependencies



** Task
    * [SFOS-579] - review the various warnings the IDE is giving about 
                   xml components


