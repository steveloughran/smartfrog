/** (C) Copyright 2005 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */

//#include "org/smartfrog/components.sf";
#include "org/smartfrog/sfcore/workflow/components.sf";
#include "org/smartfrog/services/utils/concat/components.sf"
#include "org/smartfrog/services/filesystem/components.sf"
//liveness and webserver
#include "/org/smartfrog/services/www/components.sf"
#include "/org/smartfrog/services/jetty/jetty-core.sf"
/**
* This defines a complete Jetty component
*/


/*==========================================
  declare extras
===========================================*/

/**
 * This component is a jetty http server, with
 * the http listener
 */

JettyHttpServer extends CoreJettyServer {

   //if logging is enabled, then it logs to jettyhome/logs.
   enableLogging false;
   port 8080;

  /**
   * this listens on a direct port
   */
  directPortListener extends JettyListener {
    server LAZY PARENT;
    listenerPort PARENT:port;
  }

}

/**
 * add the example contexts
 */
FullJettyServer extends JettyHttpServer {
   contexts extends Compound {
     server LAZY PARENT;
   }
}

/*==========================================
  declare jetty contexts
===========================================*/

/**
 * assume we always get deployed into a parent that is an app server
 */
JettySampleContexts extends Compound {
  server TBD;
  //rootWar extends RootWAR;

  jettyDemo extends JettyDemo;

  jettyExamples extends JettyExamples;

  jettyJavadoc extends JettyJavadoc{
   server LAZY PARENT:server;
  }
  jettyCGIBIN extends JettyCGIBIN{
   server LAZY PARENT:server;
  }
}

JettyExampleWar extends WebApplication {
 server LAZY PARENT:server;
}

RootWAR extends JettyExampleWar {
 contextPath "/";
 filename "demo/webapps/root";
}

JettyDemo extends JettyExampleWar {
 contextPath "/jetty";
 filename "demo/webapps/jetty";
}

JettyExamples extends JettyExampleWar {
 contextPath "/examples";
 filename "demo/webapps/examples";
 requestId true; //optional
}

JettyServletContexts extends ServletContext {
 contextPath "/demo";
 resourceBase "/demo/docroot";
 classpath "demo/servlets";
 handlers extends Handlers {
  context LAZY PARENT;
  }
 servlets extends BuiltInServlets {
  context LAZY PARENT;
  }
 server LAZY PARENT:server;
}

JettyJavadoc extends ServletContext {
 contextPath "/javadoc";
 resourceBase "javadoc";
}

JettyCGIBIN extends ServletContext {
 contextPath "/cgi-bin";
 resourceBase "cgi-bin";

 servlets extends CGIservlet {
   //server LAZY PARENT:server;
   context LAZY PARENT;
 }
}


/*==========================================
  declare handlers
===========================================*/

Handlers extends Compound {
 context TBD;
 Handler2 extends JettyHTAccessHandler {
  context LAZY PARENT:context;
 }
}


JettyHTAccessHandler extends JettyHandler {
 sfClass "org.smartfrog.services.jetty.contexts.handlers.HTAccess";
 accessFile ".htaccess";
}


/*==========================================
  declare servlets
===========================================*/

BuiltInServlets extends Compound {
 context TBD;

 invoker extends InvokerServlet {
  context LAZY PARENT:context;
 }
 dump extends DumpServlet{
  context LAZY PARENT:context;
 }
 session extends SessionServlet{
  context LAZY PARENT:context;
 }
 dispatch extends DispatchServlet{
  context LAZY PARENT:context;
 }
 jsp extends JSPServlet{
  context LAZY PARENT:context;
 }
 src extends SrcDefaultServlet{
  context LAZY PARENT:context;
 }
}

ThirdPartyServlets extends Compound {
 context TBD;

 jsp extends JSPServlet{
  context LAZY PARENT:context;
 }
}
InvokerServlet extends Servlet {
 name "Invoker";
 pathSpec "/servlet/*";
 className "org.mortbay.jetty.servlet.Invoker";
}

DumpServlet extends Servlet {
 name "Dump";
 pathSpec "/dump/*:*.DUMP";
 className "org.mortbay.servlet.Dump";
 initParams [["InitParam","Value"]];
}

SessionServlet extends Servlet {
 name "Session";
 pathSpec "/session/*";
 className "org.mortbay.servlet.SessionDump";
}

DispatchServlet extends Servlet {
 name "Dispatch";
 pathSpec "/dispatch/*";
 className "org.mortbay.servlet.RequestDispatchTest";
}

JSPServlet extends Servlet {
 name "JSP";
 pathSpec "*.jsp";
 className "org.apache.jasper.servlet.JspServlet";
}

SrcDefaultServlet extends Servlet {
 name "SrcDefault";
 pathSpec "/src/*";
 className "org.mortbay.jetty.servlet.Default";
 initParams [["dirAllowed","true"]];
}

CGIservlet extends Servlet {
 name "Common Gateway Interface";
 pathSpec "/";
 className "org.mortbay.servlet.CGI";
 initParams [["Path","/bin:/usr/bin:/usr/local/bin"]];
}

/*==========================================
  declare listeners
===========================================*/

Listeners extends Compound {
  server TBD;

  directListener extends DirectPortListener {
    server LAZY PARENT:server;
  }
}

/**
 * this listens on a direct port
 */
DirectPortListener extends JettyListener {
  listenerPort LAZY server:port;
}

