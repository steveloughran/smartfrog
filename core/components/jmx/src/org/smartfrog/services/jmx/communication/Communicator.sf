/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/sfcore/processcompound/processcompound.sf"
#include "org/smartfrog/services/jmx/mbean/mbean.sf"
#include "org/smartfrog/services/jmx/mbean/metadata.sf"

/**
 * Template for all kind of connector and adaptors
 */

Communicator extends MBean {
  sfExport false;
  description "MBean that provides access to the MBeanServer using a specific protocol";
  domain "Communicators";
  properties:name "Communicator";
  properties:type "sf.jmx.communicator";
  startMethod "start";
}

/**
 * MBean HTMLAdaptor
 */

HtmlAdaptor extends Communicator {
  sfClass "org.smartfrog.services.jmx.communication.html.HtmlAdaptor";
  description "Adaptor that provides access to the MBeanServer using the HTTP protocol";
  properties:name "HTMLAdaptor";
  properties:type "sf.jmx.comm.adaptor.html";
  host "localhost"; // "0.0.0.0" to listen any incomming connections.
  port 8080;
  class ATTRIB sfClass;

  // Templates for the HTML code
  //rootDirectory "C:\\Program Files\\SmartFrog\\lib\\sfJMX.jar";
  rootDirectory ".\\lib\\sfJMX.jar";
  pathInJar "mx4j/adaptor/http/xsl";

  // Authentication features
  authentication "none"; // Possible values: none / basic/ digest
  authorization extends LAZY {
    user "public";
  } // Add here pairs value-attribute that will be mapped to username-password

  // SSL features, the will be applied only if ssl is set to true;
  ssl false;
  keyManagerAlgorithm "SunX509";
  keyStoreType "JKS";
  sslProtocol "SSLv3";
  keyManagerPassword "SmartFrog";
  //keyStoreFileName "C:\\Program Files\\SmartFrog\\bin\\certs";
  keyStoreFileName ".\\bin\\certs";
  keyStorePassword "SmartFrog";
}

/**
 *  MBean XSLTProcessorMBean
 *  Used by the HTMLAdaptor to format xml code into readable html.
 */

XSLTProcessor extends MBean {
  domain "Services";
  description "This processor takes the XML tree and transform it to HTML by means of XSLT";
  properties:name "XSLTProcessor";
  properties:type "sf.jmx.srv.xml";
  class "mx4j.adaptor.http.XSLTProcessor";
}

/**
 * MBean RMIConnectorServer
 */

RmiConnectorServer extends Communicator {
  sfClass "org.smartfrog.services.jmx.communication.rmi.RmiConnectorServer";
  description "Connector that provides access to the MBeanServer using the RMI protocol";
  properties:name "RMIConnectorServer";
  properties:type "sf.jmx.comm.connector.rmi";

  // If we deploy this component as a SmartFrog component, we should use this section
  port ATTRIB ProcessCompound:sfRootLocatorPort;
  name ATTRIB properties:name;
  class ATTRIB sfClass;

  // If we instantiate an MBean from this description, we should use this section
  constructor extends {
    rmiPort extends Parameter {
      class "int";
      value ATTRIB port;
    }
    serviceName extends Parameter {
      class "java.lang.String";
      value ATTRIB properties:name;
    }
  }
}

/**
 * MBean SNMPAdaptor:
 * This adaptor has not been implemented yet, but it is described here below for a future
 * implementation.
 */

SnmpAdaptorServer extends Communicator {
  sfClass "org.smartfrog.services.jmx.communication.html.SnmpAdaptor";
  description "Adaptor that provides access to the MBeanServer using the SNMP protocoll";
  properties:name "SNMPAdaptor";
  properties:type "sf.jmx.comm.adaptor.snmp";
  port 161;
  class ATTRIB sfClass;
}

/**
 * MBean HTTPConnectorServer:
 * This adaptor has not been implemented yet, but it is described here below for a future
 * implementation.
 */
HttpConnectorServer extends Communicator {
  sfClass "org.smartfrog.services.jmx.communication.http.HttpConnectorServer";
  description "The server part of the HTTP/TCP connector";
  properties:name "HTTPConnectorServer";
  properties:type "sf.jmx.comm.connector.http";

  // If we deploy this component as a SmartFrog component, we should use this section
  port 8081;
  authInfo extends LAZY { // Specify here all pairs authInfo: user "password"
    user "public";
    anonymous "public";
  };

  // If we instantiate an MBean from this description, we should use this section
  class "org.smartfrog.services.jmx.communication.http.HttpConnectorServer";
  constructor extends {
    httpPort extends Parameter {
      class "int";
      value ATTRIB port;
    }
    authInfo extends Parameter {
      class "org.smartfrog.services.jmx.communication.AuthInfo[]"; // This class is not implemented yet
      value [["user", "public"], ["anonymous", "public"]];
    }
  }
}

/**
 * MBean HTTPSConnectorServer:
 * This adaptor has not been implemented yet, but it is described here below for a future
 * implementation
 */
HttpsConnectorServer extends Communicator {
  sfClass "org.smartfrog.services.jmx.communication.https.HttpsConnectorServer";
  description "The server part of the HTTP/SSL connector";
  properties:name "HTTPSConnectorServer";
  properties:type "sf.jmx.comm.connector.https";

  // If we deploy this component as a SmartFrog component, we should use this section
  port 8082;
  authInfo extends LAZY { // Specify here all pairs authInfo: user "password"
    user "public";
    anonymous "public";
  };

  // If we instantiate an MBean from this description, we should use this section
  class "org.smartfrog.services.jmx.communication.https.HttpsConnectorServer";
  constructor extends {
    httpsPort extends Parameter {
      class "int";
      value ATTRIB port;
    }
    authInfo extends Parameter {
      class "org.smartfrog.services.jmx.communication.AuthInfo[]"; // This class is not implemented yet
      value [["user", "public"], ["anonymous", "public"]];
    }
  }
}
