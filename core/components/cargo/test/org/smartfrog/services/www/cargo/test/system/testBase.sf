/** (C) Copyright 2006 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/filesystem/components.sf"
#include "/org/smartfrog/services/assertions/components.sf"
#include "/org/smartfrog/services/os/java/components.sf"
#include "/org/smartfrog/services/www/testwar-m2.sf"
#include "/org/smartfrog/services/www/cargo/components.sf"

/*
 * base application server
 */
AppServer extends Compound {
    warlibraries extends testwarLoader;
    server TBD;

}

ServerOptions extends Prim {
  port 8080;
  logging "high";
}

/**
 * extend the application server with a WAR file
 */
AppServerWithWar extends AppServer {


  HomeDir extends TempDirWithCleanup {
    prefix "cargo";
  }


  deployedWar extends WebApplication {
      server LAZY PARENT:server;
      filename LAZY warlibraries:testwar:absolutePath;
      contextPath "testwar";
  }



}


CargoTest extends ExpectDeploy {

  servertype TBD;

  description ("This test deploys a " ++ servertype ++ " server using Cargo, then waits for a web page to be served up");

  server TBD;

  action extends AppServerWithWar {
    server PARENT:server;
  }

  tests extends Sequence {
     waitForServer extends WaitForPage {
          timeout 30000
          host LAZY server:listener:ipaddr;
          port server:port;
          page LAZY deployedWar:contextPath;
          checkFrequency 1;
          followRedirects true;
          enabled false;
  }
}

}
