<?xml version="1.0"?>
<project name="www" default="default">

  <!--
  /** (C) Copyright 2005 Hewlett-Packard Development Company, LP

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

  For more information: www.smartfrog.org

  */
  -->

  <description>
     Build file for the www project.
     These files are the app server independent files, and cannot
     be deployed as is. so testing at this point is pretty minimal
  </description>

  <!-- override point -->
  <property file="build.properties"/>
  <property name="is.component" value="true"/>
  <property name="root.dir" location="../.."/>
  <!-- Import common stuff -->
  <import file="${root.dir}/common.xml"/>
  
  
  <!-- ========================================================== -->
  <!-- ========================================================== -->
  <target name="init"
    depends="init-standard-output-dirs,use-smartfrog-tasks,use-smartfrog-testharness">
  </target>


  <!-- make the WAR file -->
  <target name="war.init" depends="init-standard-output-dirs">
    <property name="target.war.name"
              value="sf-testwar-${Version}.war"/>
    <property name="testwar.war"
              location="${dist.dir}/${target.war.name}"/>
    <property name="testwar.dir"
              location="testwar"/>
    <property name="testwar.lib.dir"
              location="${testwar.dir}/lib"/>
    <property name="testwar.src.dir"
              location="${testwar.dir}/src"/>
    <property name="build.testwar.dir"
              location="${build.dir}/testwar/classes"/>
    <mkdir dir="${build.testwar.dir}" />
    <property name="war.dir"
              location="${testwar.dir}/resources"/>
    <property name="web.xml"
              location="${testwar.dir}/WEB-INF/web.xml"/>
  </target>

  <target name="war.classpath" depends="m2-tasks,war.init">
    <m2-libraries pathID="war.classpath">
      <dependency groupID="javax.servlet"
                  artifactID="servlet-api"
                  version="${servletapi.version}"/>
    </m2-libraries>
  </target>

  <target name="war.javac" depends="war.classpath" >
    <sf-javac srcdir="${testwar.src.dir}" destdir="${build.testwar.dir}"
        classpathref="war.classpath"/>
  </target>
  
  
  <!-- make the WAR file -->
  <target name="war" depends="war.javac" description="make the test WAR file" >
    <war destFile="${testwar.war}" webxml="${web.xml}" >
      <!--  WAR file, includes WEB-INF stuff-->
      <classes dir="${build.testwar.dir}" />
      <fileset dir="${war.dir}" includes="**/*" />
      <lib dir="${testwar.lib.dir}"
        includes="*.jar" />
    </war>
  </target>

  <target name="war-installed"
    depends="war"
      description="install the war file to the m2 repository"
      xmlns:m2="antlib:org.apache.maven.artifact.ant">
    <property name="testwar.pom.file" location="${build.dir}/testwar.pom"/>
    <echo file="${testwar.pom.file}"><![CDATA[<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>${m2.groupID}</groupId>
  <artifactId>testwar</artifactId>
  <packaging>war</packaging>
  <version>0.1-SNAPSHOT</version>
</project>
]]></echo>
    <m2:pom id="testwar.pom" file="${testwar.pom.file}"/>
    <m2:install file="${testwar.war}">
      <pom refid="testwar.pom"/>
    </m2:install>
  </target>

  <!-- ========================================================== -->
  <!-- clean -->
  <!-- ========================================================== -->

 <target name="clean" depends="common.clean" description="clean up build ,dist and releases" >
    <delete dir="releases"  />  
    <delete dir="test"  /> 
    <delete file="version.properties"/> 
 </target>  
 
 <target name="dist" depends="common.dist,m2-install,war-installed, jdocs">
    <copy todir = "${dist.lib.dir}">
        <fileset dir ="${lib.dir}" />
    </copy>  
     <copy todir = "${dist.doc.dir}">
        <fileset dir ="${doc.dir}" />
    </copy>   
     <copy todir = "${dist.src.dir}">
        <fileset dir ="${src.dir}">
            <include name="**/examples/**"/>
        </fileset>
           </copy>
     <copy tofile="${dist.dir}/build.xml" file="releaseBuild.xml"/> 
    <copy tofile="${dist.dir}/build.example.properties" file="build.example.properties"/> 
  </target>

  <target name="all" depends="dist" description="everything"/>

  <target name="default" depends="all"
      description="delegate to 'all'"/>

</project>
