/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/assertions/components.sf"
#include "/org/smartfrog/services/www/dyndns/components.sf"


test.dyndns.user OPTIONAL("test") PROPERTY test.dyndns.user;
test.dyndns.password OPTIONAL("test") PROPERTY test.dyndns.password;
test.dyndns.host OPTIONAL("test.dnsalias.net") PROPERTY test.dyndns.host;


dyndns.present (test.dyndns.user != "")


DynDnsTestRegistration extends DynDnsRegistration {
  username test.dyndns.user;
  password test.dyndns.password;
  hostname test.dyndns.host;
  logResponse true;
}

IsDynDnsEnabled extends BooleanValue {
  value dyndns.present;
}


/**
 * Test the IP address
 */
testCheckIpAddr extends ExpectDeploy {
  condition extends IsDynDnsEnabled;
  description "test the IP address check";

  action extends Compound { }

  tests extends Sequence {
    check extends DynDnsCheckIP {
      logResponse true;
      sfShouldTerminate true;
    }

    assertGroup1Exists extends Assert {
      sfShouldTerminate true;
      reference LAZY PARENT:check;
      attribute "group1";
    }

  }
}


testRegisterIpAddr extends ExpectTerminate {
  condition extends IsDynDnsEnabled;
  description "register the test account";

  action extends DynDnsTestRegistration {

   sfShouldTerminate true;
 }

}

testRegisterIpAddrHttps extends ExpectTerminate {
  condition extends IsDynDnsEnabled;
  description "register the test account over HTTPS";

  action extends DynDnsTestRegistration {
   port DynDnsHttpsRegistration:port;
   protocol DynDnsHttpsRegistration:protocol ;
   sfShouldTerminate true;
 }

}

