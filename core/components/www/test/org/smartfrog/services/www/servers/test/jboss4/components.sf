/** (C) Copyright 2007 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/filesystem/components.sf"
#include "/org/smartfrog/services/assertions/components.sf"
#include "/org/smartfrog/services/www/servers/jboss4.sf"
//#include "/org/smartfrog/sfcore/workflow/conditional/conditions/components.sf"


// this is a non-lazy binding to whatever is passed in to the deployment process; it sets
// tomcat.home to the property or to ""
jboss.home OPTIONAL("") PROPERTY test.jboss.home;

//this is the port to which we expect the server to be running on
jboss.port OPTIONAL(8080) PROPERTY test.jboss.port;

// a boolean property that is true if the server home dir is defined
jboss.present IF (jboss.home != "") THEN true ELSE false FI;


jdk.home PROPERTY test.jdk.home ;



  //no delay by default
jboss_testTimeout 120000;
  //default to one minute
jboss_startupTimeout 60000;
  //default to one minute
jboss_teardownTimeout 60000;


/**
 * A local page for liveness; assumes port 8080
 */
JBossLivenessPage extends LivenessPage {
    port jboss.port;
}

WaitForJBoss extends WaitForPage {
    port jboss.port;
    timeout jboss_startupTimeout;
}

// now switch this to a condition
IsServerPresent extends BooleanValue {
  value jboss.present;
}


NoRunningServer extends Not {
  condition extends JBossLivenessPage;
}

IsServerPresentButNotRunning extends And {
  -- extends IsServerPresent;
  -- extends NoRunningServer;
}

/**
 * JBoss bound to the local properties
 */
BoundJBossServer extends JBoss4Server {
  server.home jboss.home;
  jdk.home PARENT:ATTRIB jdk.home;
}

/**
 * a template that only deploys if test.jboss.home is set
 * we use this to make things conditional
 */
DeployJBoss extends ExpectDeploy {
  condition extends IsServerPresentButNotRunning;
  description "test tomcat deployment -requires test.jboss.home to be set";

  action extends Compound {
    server extends BoundJBossServer;
  }
  undeployAfter jboss_testTimeout;

  testTimeout jboss_testTimeout;
    //default to one minute
  startupTimeout jboss_startupTimeout;
    //default to one minute
  teardownTimeout jboss_teardownTimeout;
}

/*
 *
 */
DeployJBossTests extends DeployJBoss {
  description "test that the app server runs";
  expectTerminate false;
  tests extends WaitForJBoss ;
}



/**
 * simple test to fail if there is a web site running
 * but skip if tomcat is absent
 */

testServerIsNotRunning extends ExpectTerminate {
  condition extends IsServerPresent;
  description "fail if there is a web site already running";

  action extends EvaluateCondition {
    condition extends NoRunningServer;
    message "There is a web server running on the target port";
  }

  undeployAfter 15000;

}


/*
 * one test with a 10s shutdown
 */
testServerRuns extends DeployJBossTests {
  description "test that the app runs";
}
