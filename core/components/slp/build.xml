<?xml version="1.0"?>

<!--
/*
 Service Location Protocol - SmartFrog components.
 Copyright (C) 2004 Glenn Hisdal <ghisdal(a)c2i.net>
 
 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.
 
 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
 This library was originally developed by Glenn Hisdal at the 
 European Organisation for Nuclear Research (CERN) in Spring 2004. 
 The work was part of a master thesis project for the Norwegian 
 University of Science and Technology (NTNU).
 
 For more information: http://home.c2i.net/ghisdal/slp.html 
 */
-->

<project name="slp" default="dist" basedir=".">

<description>
Introduction
============
The build script for the SLP library.
To run the build script, ant must be installed
and the ant executable should be in the system path.

The SLP library enables SmartFrog components to be advertised
and located using the Service Location Protocol.


Installing the build tools
==========================
Please go though the installation guide and install ant 1.6 or later.
Reference URL:http://ant.apache.org

</description>

    <!-- override point -->
  <property file="build.properties" />
  <property name="root.dir" location="../../"  />

  <property name="ivy.enabled" value="true"/>
  <property name="is.component" value="true"  />

  <!-- Import common stuff -->
  <!--available file="../../common.xml" property="root.dir" value="../.."/--> 
  <import file="${root.dir}/common.xml"/>


   <!--property name="doc.dir" location="docs"/-->


  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
    <target name="init" depends="init-standard-output-dirs">
    <tstamp/>
    <property name="Name.System" value="slp"/>
    <property name="Name.Author" value="Copyright (C) 2004-2006 Glenn Hisdal"/>
    <property name="version" value="smartfrog components"/>
    <property name="year" value="2006"/>

    <echo message=""/>
    <echo message="==================================================================="/>
    <echo message="= ${Name.System} ${version} ${Name.Author} "/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Global properties                                                   -->
  <!-- =================================================================== -->
    <!-- override point -->
    <property file="build.properties" />
    <property environment="env" />
    <property file="build-postenv.properties" />

    <!-- Release Directories -->
   
   

    <!--property name="redist" value="redist"/ -->

    <property name="examplesFiles" value="org/smartfrog/examples/**/*"/>
     <!-- a list of files for rmic -->
    <property name="rmitargets" value="${basedir}/rmitargets"/>


    <!-- Security related files
    =================================================================
    <property name="manifestName" value="${private}/sealManifest.mf"/>
    =================================================================-->


  <!-- =================================================================== -->
  <!--  Release                                                            -->
  <!-- =================================================================== -->
  <target name="release"  depends="clean, dist, jdocs" description="Creates clean new release">
  </target>

  <!-- =================================================================== -->
  <!--                                                                     -->
  <!-- =================================================================== -->
  <target name="initbuild"  depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!--                                                                     -->
  <!-- =================================================================== -->
  <target name="initdist" depends="init">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.lib.dir}"/>
    <mkdir dir="${dist.bin.dir}"/>
    <!--mkdir dir="${dist.docs.dir}"/-->
    <mkdir dir="${dist.src.dir}"/>
  </target>



  <!-- =================================================================== -->
  <!--   Copy .sf files to "build" directories                             -->
  <!-- =================================================================== -->
  <target name="copySF" depends="initbuild">
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.sf*" />
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!--   Copy .bat files to "build" directories                            -->
  <!-- =================================================================== -->
  <target name="copyBAT" depends="initbuild">
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.bat*" />
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!--   Copy .html files to "build" directories                           -->
  <!-- =================================================================== -->
  <target name="copyHTML" depends="initbuild">
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.htm*" />
      </fileset>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!--  Copy Gif files to "build" directories                              -->
  <!-- =================================================================== -->
  <target name="copyGif" depends="initbuild">
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*.gif" />
      </fileset>
    </copy>
  </target>


  <!-- =================================================================== -->
  <!--                                                                     -->
  <!-- =================================================================== -->
  <target name="copylibs" depends="initdist">
    <copy todir="${dist.lib.dir}">
      <fileset dir="${lib}">
        <include name="**/*.jar" />
      </fileset>
    </copy>
  </target>




  <!-- =================================================================== -->
  <!--                                                                     -->
  <!-- =================================================================== -->
  <target name="copybins">
    <copy todir="${dist.bin.dir}">
      <fileset dir="${bin.dir}">
        <include name="**/*" />
        <exclude name="**/*.bak" />
        <exclude name="**/tools" />
      </fileset>
    </copy>
   <chmod dir="${dist.bin.dir}"
          perm="ugo+rx"
          excludes="**/*.ico, **/*.ini, **/*.sf*"/>
  </target>




  <!-- =================================================================== -->
  <!--                                                                     -->
  <!-- =================================================================== -->
  <target name="copydocs" depends="initdist">
    <copy todir="${dist.docs.dir}">
      <fileset dir="${docs}">
        <include name="**/*.pdf" />
      </fileset>
    </copy>
  </target>



  <!-- =================================================================== -->
  <!--  BUILD                                                              -->
  <!-- =================================================================== -->

  <target name="build" depends="initbuild,compile,copySF,copyGif,copyBAT,copyHTML"
      description="Recompile and create all packages"/>

  <!-- =================================================================== -->
  <!--  Jar Files                                                              -->
  <!-- =================================================================== -->

  <!--  slplib.jar                                               -->
  <target name="slplibJar" depends="build">
    <jar jarfile="${target.jar}"
         basedir="${build.classes.dir}"
	      includes="**/slp/**"/>
  </target>


  <target name="jars" depends="initdist, slplibJar"/>


  <!-- =================================================================== -->
  <!--  DIST                                                               -->
  <!-- =================================================================== -->
  <!--target name="dist"
    depends="build,initdist,jars,copylibs,copybins,copydocs,sfParseTest"
    description="Prepares distribution package">
  </target-->

  <target name="dist" depends="common.dist,jdocs" description="create the jar files">

    <copy todir="${dist.lib.dir}">
      <fileset dir="${lib.dir}"/>
    </copy>

    <copy todir="${dist.src.dir}">
      <fileset dir="${src.dir}">
        <include name="**/examples/**"/>
      </fileset>
    </copy>

    <copy todir="${dist.doc.dir}">
      <fileset dir="${doc.dir}"/>
    </copy>

    <antcall target="copybins"/>

    <copy tofile="${dist.dir}/build.xml" file="releaseBuild.xml"/>
  </target>

   <!-- ========================================================== -->
  <!-- clean -->
  <!-- ========================================================== -->

  <!-- =================================================================== -->
  <!-- a clean distribution                                               -->
  <!-- =================================================================== -->
  <target name="fromclean" depends="clean,dist"/>



    <!-- =================================================================== -->
    <!-- sfParse parsertargets                                                -->
    <!-- =================================================================== -->
    <target name="sfParseTest"  depends="build,jars">
      <java classname="org.smartfrog.SFParse"
          failonerror="true" fork="true"
          classpathref="tests.run.classpath">
        <arg value="-R"/>
        <!--<arg value="-r"/> -->
        <arg value="-q"/>
        <arg value="-f"/>
        <arg file="parsertargets"/>
     </java>
    </target>


</project>

<!-- End of file -->
