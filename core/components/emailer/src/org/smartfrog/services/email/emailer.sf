/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "/org/smartfrog/predicates.sf"
/**
 * Emailer component can be used in two modes.
 * 1. As a standard workflow component ( Sends email only once when sfStart
 *    lifecycle method is executed. In this mode other components in the work-
 *    flow may not be aware of Emailer component. Can be useful in applications
 *    installations using SF, where sequence workflow installs the
 *    application and emailer sends the log file of the installation through
 *    email. Please see exampleUsageAsWFComp.sf for sample usage.
 * 2. As a Utility component, where sendEmail API can be invoked multiple times 
 *    by other components deployed under the same parent. In this mode the 
 *    component has to provide email attributes at run-time. Please see 
 *    example.sf for sample usage.     
 */

EmailerSchema extends Schema {
    to extends String;
	cc extends OptionalString;
	from extends String;
	smtpHost extends String;
	charset extends OptionalString;
	message extends OptionalString;
	subject extends OptionalString;
	runAsWorkFlowComponent extends Boolean;
	sendOnStartup extends OptionalBoolean;
	sendOnShutdown extends OptionalBoolean;
    attachments extends OptionalVector;
}
 
 
Emailer extends Prim {
    sfClass "org.smartfrog.services.email.EmailerImpl";
	emailerSchema extends EmailerSchema;

    // Please provide proper values of following attributes before using 
    // emailer 
    
     
    cc "";  //comma separated list of email ids
    subject "SmartFrog";
    message "This mail is generated by SmartFrog Emailer Component";

    /* Following attribute determines whether it should send email,
       when executed or not. The workflow will determine when it would run. 
       For example:  A sequence workflow may have emailer
       component as last component in the workflow, here emailer would send 
       the mail, using specified attributes, after all the components are 
       finished. 
       Please see exampleUsageAsWFComponent.sf for this type of usage.
     */
     runAsWorkFlowComponent true; //by default
     //only relevant if runAsWorkFlowComponent==true
     sendOnStartup false;
}
