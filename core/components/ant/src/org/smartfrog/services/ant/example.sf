/** (C) Copyright Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

/**
 * This component is an example of use of ExampleTemplate component.
 */

/**
 * Include the core smartfrog components.
 */
#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/ant/components.sf"




//GlobMapper extends {
//   AntElement "mapper";
//   type "glob";
//}


sfConfig extends Ant {
  echoTask extends echo {
    message "hellow world!";
  }

   echoAntTask extends echo {
      message "Ant version '${ant.version}', java version '${ant.java.version}";
   }

  copyTask extends copy {
      todir "tmp";
      filtering "true";
      myFileSet extends fileset {
        dir ".";
        includes "*.xml";
      }
      myFilterSet extends filterset {
         myFiltersFile extends {
           AntElement "filtersfile"; 	
           file "/filters.props";
         }
      }
  }
  echoMedTask extends echo {
    message "--------------------------------";
  }



  copyTask2 extends copy {
      todir "/juliotmp/kk";
      filtering "true";
      verbose "true";
      myFileSet extends fileset {
        dir "/";
        includes "*.txt";
      }


      globMapper extends globmapper {
        from "*";
        to "*.bak";
      }

  }

  copyTask3 extends copy {
      todir "/juliotmp/kk";
      filtering "true";
      verbose "true";
      myFileSet extends fileset {
        dir "/";
        includes "*.txt";
      }

      flattenmapper extends {AntElement "mapper"; type "flatten";}
  }

  copyTask4 extends copy {
      todir "/juliotmp/kk";
      filtering "true";
      verbose "true";
      myFileSet extends fileset {
        dir "/";
        includes "*.txt";
      }

        /*
        <filtermapper>
          <replacestring from="\" to="/"/>
        </filtermapper>
        */
      filterMapper extends filtermapper {
        replacestring1 extends {
          AntElement "replacestring";	
          from "\\";
          to "/";
        }
      }

  }

  copyTask5 extends copy {
      todir "/juliotmp/kk";
      filtering "true";
      verbose "true";
      myFileSet extends fileset {
        dir "/";
        includes "*.txt";
      }
      filtermapper extends {
        //Try the class directly
        AntElement "org.apache.tools.ant.types.mappers.FilterMapper";
        replacestring extends {
          AntElement "replacestring";
          from "\\";
          to "/";
        }
      }

  }

  fixcrlf1 extends fixcrlf {
       //srcdir "${src}";
       srcdir ".";
       tab "add";
       includes "**/Makefile";
  }

//  fixcrlf2 extends Fixcrlf {
//       srcdir "${SFHOME}";
//       tab "add";
//       includes "**/Makefile";
//  }

//  fixcrlf3 extends Fixcrlf {
//       srcdir "${src}";
//       tab "add";
//       includes "**/Makefile";
//  }

   /*
     <pathconvert property="x" targetos="unix">
        <path path="Aj.Java"/>
        <mapper>
        <chainedmapper>
          <flattenmapper/>
          <globmapper from="a*.java" to="*.java.bak" casesensitive="no"/>
        </chainedmapper>
        </mapper>
      </pathconvert>
      <echo>x is ${x}</echo>

   */
   pathconvert extends {
       AntTask "pathconvert";
       property "x";
       targetos "unix";
        myPath extends {
          AntElement "path"; 	
          path "Aj.Java";
        } //path
//        mapper extends {
//         AntElement "mapper";
//         type "mapper";
         chainedmapper extends {
          AntElement "chainedmapper";
          flattenmapper extends {AntElement "flattenmapper";}
          globmapper extends {
            AntElement "globmapper";
            from "a*.java";
            to "*.java.bak";
            casesensitive "no";
          } //globmapper
         } //chainedmapper
//        } //mapper
   } //pathconvert

   echoXTask extends echo {
     message "x is ${x}";
   }

   echoSFHOMETask extends echo {
    message "SFHOME is ${myenv.SFHOME}";
   }

   propertyNameBuild extends {
     AntTask "property";
     name "build";
     location "build";
   }
   propertyNameBuildClasses extends {
     AntTask "property";
     name "build.classes.dir";
     location "${build}";
   }

   propertyFile extends {
     AntTask "property";
     file "build.properties";
   }
   propertyJulio extends {
     AntTask "property";
     environment "env";
   }

   echoSFHOMEEnvTask extends echo {
    message "SFHOME is ${env.SFHOME}";
   }

//  <path id="smartfrog.class.path">
//    <pathelement path="${classpath}"/>
//    <pathelement location="lib/log4j-1.2.8.jar"/>
//    <pathelement location="lib/jmxri.jar"/>
//    <pathelement location="lib/mx4j-tools.jar"/>
//    <pathelement location="lib/sf-scripting.jar"/>
//    <pathelement location="lib/bsh-1.3.0.jar"/>
//    <pathelement location="lib/ant.jar"/>
//  </path>

//   pathBSH extends {
//      AntElement "path";
//      id "smartfrog.class.path";
//      pathelement1 extends PathElement {
//         path "${classpath}";
//      }
//      pathelement1 extends PathElement {
//         path "${classpath}";
//      }
//      pathelement2 extends PathElement {
//         location "lib/bsh-1.3.0.jar";
//      }
//      pathelement3 extends PathElement {
//        location "lib/sf-scripting.jar";
//      }
//   }

   echoSFPathTask extends echo {
      message "smartfrog.class.path is '${smartfrog.class.path}'";
   }

  echoEndTask extends echo {
    message "Done!";
  }
}
