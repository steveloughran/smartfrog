/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/


#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/jmx/modelmbean/ModelMBean.sf"
#include "org/smartfrog/services/jmx/mbean/metadata.sf"
#include "org/smartfrog/services/jmx/deployment/ManageableMetadata.sf"

/**
 *  DeploymentAnalyzer enables the visualization and management of the deployment tree starting from
 *  the component specified in its "rootTarget" attribute. By default, this is set to the PARENT, thus
 *  this component should placed under the component from which we would like to visualize the deployment
 *  tree. It only lets visualize those data (attributes and methods) defined in its attribute sfManageable.
 */

DeploymentAnalyzer extends Compound {
  sfClass "org.smartfrog.services.jmx.deployment.DeploymentAnalyzer";
  rootTarget LAZY PARENT;
  sfManageable extends LAZY ManageableMetadata;
}

/**
 * DeploymentModelMBean description
 */

DeploymentModelMBean extends ModelMBean {
  properties:name "DeploymentModelMBean";
  properties:type "sf.jmx.modelmbean.deployment";

  //managedResource LAZY DeploymentAnalyzer; // This reference should point to a DeploymentAnalyzer component
  attributes extends {
    rootPath extends RootPath;
    deployedHost extends AttributeInfo {
      name "deployedHost";
      writable false;
      type "java.net.Inet4Address"; // The type should be "java.net.InetAddress". The method "sfDeployedHost"
                                    // uses the method InetAddress.getLocalHost() that returns a more specific
                                    // InetAddres, such as Inet4Address or Inet6Address if supported
      getMethod "sfDeployedHost";
      description "Name of the host where the component has been deployed";
    }
    processName extends SfProcessName {
      getMethod "sfDeployedProcessName";
    }
  }

  operations extends {
    sfGetAttribute extends SfGetAttribute;
    sfGetRoot extends SfGetRoot;
    sfGetAttributes extends SfGetAttributes;
    sfSetAttribute extends SfSetAttribute;
    sfAddAttribute extends SfAddAttribute;
    sfRemoveAttribute extends SfRemoveAttribute;
    sfGetMethods extends SfGetMethods;
    sfInvokeMethod extends SfInvokeMethod;
    sfChangeAccess extends SfChangeAccess;
  }

  notifications extends {
    generic extends Generic;
    change extends Change;
    load extends Load;
    store extends Store;
    deploy extends Deploy;
    start extends Start;
    terminate extends Terminate;
  }
}
