/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/services/jmx/example/hosts.sf"
//#include "hosts.sf"

// *********************************************************
// Note: Uses simpleMasterAgent.sf deployed with name AGENT
// *********************************************************
#include "org/smartfrog/components.sf"
#include "org/smartfrog/functions.sf"

#include "org/smartfrog/services/utils/concat/components.sf"

#include "org/smartfrog/examples/arithnet/netComponents.sf"

#include "org/smartfrog/services/jmx/components.sf"
#include "org/smartfrog/services/jmx/example/components.sf"

// ArithNet Basic Components
 //SleepyGenerator
  /**
  * Basically this component is the Generator of sfExample, but besides it adds
  * a method to start generarion that can be invoke using JMX
  */
SleepyGenerator extends NetElem {
  sfClass "org.smartfrog.services.jmx.example.SleepyGenerator";
  outputs:value extends Output;
  number 0;
}
  //StorePrinter
  /**
  * Basically this component is the Printer of sfExample, but besides it stores
  * the last result in the a SF attribute so that it can be monitored using JMX
  */
StorePrinter extends Printer {
  sfClass "org.smartfrog.services.jmx.example.StorePrinter";
  result 0;
}
// end basic components.

// A very simple Arithmetic Network: Generator->Printer
SimpleArithNet extends Compound {
    sfProcessComponentName "ArithNet";
    sfProcessHost ATTRIB host1;
    // a Compound is a grouping of components sharing a lifecycle
     // there are two components, generator and printer, both defined in netComponents.sf
     // the output (value) of the generator is linked to the input (printVal) of the printer
     generator extends SleepyGenerator {
         domain "ARITH_NET"; //JMX domain!
         sfProcessHost ATTRIB host2;
         outputs:value:to LAZY ATTRIB printer:inputs:printVal;
         interval 1; // speed it up a bit,a number every second
         min 1;
	   max 10;
     }
     printer extends StorePrinter{
        domain "ARITH_NET"; //JMX domain!
        sfProcessHost ATTRIB host3;
     };
}
//End Arithmetic Network

// Templates for sfAgentAddress
 // concat to generate String
SfAgentAddress extends concat {
//sfAgentAddress "rmi://localhost:3800/MasterAgentFF";
			-- "rmi://";
		   host "localhost";
         -- ":";
         port "3800";
         -- "/";
         agentJMXName "RMIConnectorServer";
}

 //LAZY Reference to create Reference at RunTime.
SfAgentAddressLAZYReference extends LazyReference {
//sfAgentAddress LAZY HOST localhost:AGENT:masterAgentJMX;
  debug true;
  string extends LAZY {
      -- "HOST ";
      host LAZY sfHost;
      -- ":";
      agentSFName "AGENT:masterAgentJMX";
  }
}

//Types of MBean Deployers
  // Connection to local jmxAgent using a Reference
  ArithMBeanDeployerLocalREF extends MBeanDeployer {
    // reference to sfCompleteName of jmxAgent.
    sfAgentAddress LAZY HOST localhost:rootProcess:AGENT:masterAgentJMX;
    sfMBeans extends Compound {
      generator LAZY ROOT:SimpleArithNet:generator;
      printer LAZY ROOT:SimpleArithNet:printer;
    }
  }

  // Connection to remote jmxAgent using a LazyReference
  ArithMBeanDeployerRemoteLAZY_REF extends ArithMBeanDeployerLocalREF {
    //sfAgentAddress LAZY HOST localhost:rootProcess:AGENT:masterAgentJMX;
    addressLAZYReference extends SfAgentAddressLAZYReference{
       //sfProcessHost ATTRIB host2;
    }
    sfAgentAddress LAZY addressLAZYReference:reference;
  }

  // Connection to local jmxAgent using a RMI url
  ArithMBeanDeployerLOCAL_RMI extends MBeanDeployer {
    //sfAgentAddress "rmi://localhost:3800/MasterAgentFF";
    sfAgentAddress extends SfAgentAddress;
    dynamicMBeans extends Compound {
     // generator LAZY HOST localhost:rootProcess:ex2:simpleArithNet:generator;
     // printer LAZY HOST localhost:rootProcess:ex2:simpleArithNet:printer;
      generator LAZY ROOT:simpleArithNet:generator;
      printer LAZY ROOT:simpleArithNet:printer;
    }
  }

  // Connection to remote jmxAgent using a Reference
  ArithMBeanDeployerREMOTE_RMI extends ArithMBeanDeployerLOCAL_RMI {
    sfAgentAddress:host ATTRIB host2;
  }


// end deployers.

sfConfig extends Compound {

  //Very Simple example to monitor using JMX
  simpleArithNet extends SimpleArithNet;

  // MBeanDeployer using sfReference in localhost
 // arithMBeanDeployerLocalREF extends ArithMBeanDeployerLocalREF;

  // MBeanDeployer using LAZYReference to create sfReference in remotehost
  // Check  LAZYReference
 /* arithMBeanDeployerRemoteLAZY_REF extends ArithMBeanDeployerRemoteLAZY_REF{
      //LAZY Reference is deployed in remote host so that sfHost will get the right remote name. Cool!
      addressLAZYReference:sfProcessHost ATTRIB host2;
  }*/

  // MBeanDeployer using RMI url (string) in localhost
 arithMBeanDeployerLOCAL_RMI extends ArithMBeanDeployerLOCAL_RMI;

  // MBeanDeployer using RMI url (string) in remote host
  arithMBeanDeployerREMOTE_RMI extends ArithMBeanDeployerREMOTE_RMI{
      sfAgentAddress:host ATTRIB host2;
  }
}
