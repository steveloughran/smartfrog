/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"

MBeanDeployer extends Compound {
  sfClass "org.smartfrog.services.jmx.deployer.MBeanDeployer";

  /**
   * Specify the path of a SFJMXAgent local within the local JVM where this component is running or
   * the URL of a ConnectorServer if the Agent is in a different JVM. By default, it tries to locate
   * the default local JMX Agent (this is deployed by mean of the "bin\sfStartJMXAgent" script)
   */
  sfAgentAddress LAZY HOST localhost:rootProcess:sfJMXAgent;

  /**
   * Specify here all the descriptions of ModelMBeans that we need to register in the
   */
  modelMBeans extends LAZY { }

  /**
   * Specify here all the mbean-compliant SF components we need to register.
   * They can be descriptions to be deployed and registered as MBean or just simply LAZY links to
   * deployed components specified in other place.
   */
  sfMBeans extends Compound;

  /**
   * Specify here all the Prim components we need to expose for management by mean of PrimDynamicMbean.
   * They can be descriptions to be deployed and registered as MBean or just simply LAZY links to
   * deployed components specified in other place.
   */
  dynamicMBeans extends Compound;

}
