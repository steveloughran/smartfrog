/** (C) Copyright 2009 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */

#include "/org/smartfrog/services/jetty/jetty-core.sf";
//pull in the base struts definitions
#include "/org/smartfrog/services/cloudfarmer/client/web/deploy/struts.sf"
#include "/org/smartfrog/services/jetty/jettyjsp.sf"
#include "/org/smartfrog/services/www/mimetypes.sf"
#include "/org/smartfrog/services/filesystem/components.sf"
/**
 * Deploy a compound containing jetty and servlets
 */


StrutsOnJetty extends Compound {
  //we always run this in its own JVM, as Jasper is trouble otherwise
  sfProcessName "StrutsOnJettyPS";
  port 8081;
  sfSyncTerminate true;
  //set to true to keep JSP pages, do more debugging and logging etc.
  debugFlag true;

  //integrate logging with smartfrog
  logging extends IntegrateJettyLogging;

  server extends CoreJettyServer {

    port PARENT:port;

    server "jetty";

  }


  JspDir extends TempDir {
   dir LAZY PROPERTY java.io.tmpdir;
   prefix "jettyJSP";
   deleteOnExit (! debugFlag);
  }


  listener extends JettySocketConnector {
    port PARENT:port;
    server LAZY PARENT:server;
  }

  servlets extends ServletContext {
    resourcePackage "/org/smartfrog/services/cloudfarmer/client/web/site";
    contextPath "/";
    server LAZY PARENT:server;
   }

  mimemap extends CoreMimeTypes {
    context LAZY servlets;
  }


  /**
   * this is the servlet to which endpoints need to be bound
   */
  struts extends StrutsActionServlet {
    context LAZY servlets;
    initOptions:validating false;
    
  }
  
  jasper extends JettyJSPServlet {
    context LAZY servlets;
     pathSpec "*.jsp";
     mappings [];

     initOptions:sendErrorToClient true;
     initOptions:reloading false;
     initOptions:keepgenerated debugFlag;
     initOptions:mappedfile debugFlag;
     //initOptions:scratchdir LAZY JspDir:absolutePath;
  }


  /**
   * default HTML pages &c. For dev, everything HTML is served up
   */
  defaultContent extends DefaultContentServlet {
    context LAZY servlets;
    pathSpec "/";
    initOptions:org.mortbay.jetty.servlet.Default.dirAllowed true;
    initOptions:dirAllowed true;
  }
}


StrutsActions  extends DATA {
  htmlRoot "/html/mombasa-portlet/";

  actionRoot "/mombasa-portlet/";
  strutsHappy ( actionRoot ++ "happy.do");
  tilesHappy ( actionRoot ++ "happytiles.do");

}


/**
 * A list of pages, nothing deployable
 */
WorkflowActions extends StrutsActions {
  //JSP health checks
  workflowServerHappy (htmlRoot ++ "workflow_server_happy.jsp");
  webappHappy (htmlRoot ++ "happy.jsp");


  //struts actions; will only work if JSP and struts are happy

  workflowList ( actionRoot ++ "workflowList.do");
  submitMRJob (actionRoot ++ "submitMRJob/view.do");
  //http://localhost:8081/mombasa-portlet/submitTool/view.do
  submitTool (actionRoot ++ "submitTool/view.do");
  //http://localhost:8081/mombasa-portlet/queueWorkflow/view.do
  queueWorkflow (actionRoot ++ "queueWorkflow/view.do");
  //http://localhost:8081/mombasa-portlet/workflowAdmin/view.do
  workflowAdmin (actionRoot ++ "workflowAdmin/view.do");

}

/**
 * Cluster Actions
 */
ClusterActions extends StrutsActions {
  cluster "/mombasa-portlet/cluster/";

  add ( cluster ++ "add.do");
  admin ( cluster ++ "admin.do");
  list ( cluster ++ "list.do");
  ///mombasa-portlet/cluster/listbyRole
  listbyRole ( cluster ++ "listbyRole.do");  
  
  terminate ( cluster ++ "terminate.do");
  change_manager ( cluster ++ "change_manager.do");
  viewhost ( cluster ++ "viewhost.do");

}


ForkedMombasaServer extends Compound {
  description "This is the mombasa web application";

  subprocess extends Compound {
    jetty extends StrutsOnJetty;
    //mock;
  }
}