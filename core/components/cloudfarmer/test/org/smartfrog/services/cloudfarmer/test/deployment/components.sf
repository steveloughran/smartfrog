/* (C) Copyright 2009 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.p

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/cloudfarmer/test/components.sf"
#include "/org/smartfrog/services/cloudfarmer/server/examples/manual_localhost.sf"
#include "/org/smartfrog/services/cloudfarmer/server/examples/hadoopcustomer.sf"



DeployMaster extends HadoopMasterFarmCustomer {
  toDeploy extends Compound {
    description "this is the toplevel application";
    deployed true;
  }
}



TestLocalhostClusterRMI extends LocalhostClusterRMIDeploy {
}

TestLocalhostClusterSSH extends LocalhostClusterSSHDeploy {

  deploymentFactory:keepFiles true;

}

testLocalhostDeployCompoundOverRMI extends ExpectDeploy {
    
  description "create a farm node and then deploy something with RMI";
  action extends TestLocalhostClusterRMI;


  tests extends Sequence {

    
    master extends DeployMaster {
    //this is the farmer
      farmer LAZY action;
      toDeployName "overRMI";
    }
    
    assert extends AssertWorkflow {
      reference LAZY ROOT:overRMI;
      attribute "deployed";
      attributeEquals "true";
    }
  }

}

testLocalhostDeployCompoundOverSSH extends testLocalhostDeployCompoundOverRMI {
  description "create a farm node and then deploy something with SSH";
  action extends TestLocalhostClusterSSH;
  tests:master:toDeployName "overSSH"; 

}
