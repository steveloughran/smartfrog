<?xml version="1.0" encoding="UTF-8" ?>
<!-- -->
<xsd:schema targetNamespace="urn:cddlm/xml/0.1"
  xmlns:cdl="urn:cddlm/xml/0.1"
  xmlns="urn:cddlm/xml/0.1" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  elementFormDefault="qualified" attributeFormDefault="unqualified">

  <!-- ============================================================= -->
  <!-- Layout note -->
  <!-- This schema is split into attributes and elements-->
  <!-- each group is listed in alphabetical order -->
  <!-- please keep this consistent -->
  <!-- ============================================================= -->


  <!-- ============================================================= -->
  <!-- BEGIN SIMPLETYPES -->
  <!-- ============================================================= -->

  <!-- ============================================================= -->
  <!-- propertyModeType sets requirements on a configurable component-->
  <!-- ============================================================= -->

  <xsd:simpleType name="propertyModeType">
    <xsd:annotation>
      <xsd:documentation>
        -required: The user of the configurable component
          MUST assign values of this property.
        -optional: The user of the configurable component
          MAY assign values of this property.
        -automatic: The value of this property is given
          by the implementation of a components
          in deployment time. Users of configurable components
          MUST NOT assign values of this property but
          MAY refer to this property with (lazy) references.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="required"/>
      <xsd:enumeration value="optional"/>
      <xsd:enumeration value="automatic"/>
    </xsd:restriction>
  </xsd:simpleType>


  <!-- ============================================================= -->
  <!-- naming rules for components -->
  <!-- ============================================================= -->
  <xsd:simpleType name="namingType">
      <xsd:annotation>
        <xsd:documentation>
        This is the policy for the naming of components
        </xsd:documentation>
      </xsd:annotation>  
    <xsd:restriction base="xsd:NCName"/>
<!--
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[\p{L}\-\.][\p{L}\-\.\P{Nd}]*"/>
    </xsd:restriction>
-->
  </xsd:simpleType>


  <!-- ============================================================= -->
  <!-- extendsType -->
  <!-- ============================================================= -->
  <xsd:simpleType name="extendsType">
    <xsd:annotation>
      <xsd:documentation>
        type for extensions.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:QName">
    </xsd:restriction>
  </xsd:simpleType>

  <!-- ============================================================= -->
  <!-- refrootType -->
  <!-- ============================================================= -->
  <xsd:simpleType name="refrootType">
    <xsd:annotation>
      <xsd:documentation>
        Root references for references
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:QName">
    </xsd:restriction>
  </xsd:simpleType>

  <!-- ============================================================= -->
  <!-- refType -->
  <!-- ============================================================= -->
  <xsd:simpleType name="refType">
    <xsd:annotation>
      <xsd:documentation>
        type for references. XPath1.0 by default
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
    </xsd:restriction>
  </xsd:simpleType>

  <!-- ============================================================= -->
  <!-- END SIMPLETYPES -->
  <!-- ============================================================= -->

  <!-- ============================================================= -->
  <!-- BEGIN ATTRIBUTES-->
  <!-- Attributes can be attached to other XML elements, as well -->
  <!--     as CDL elements -->
  <!-- ============================================================= -->

  <!-- ============================================================= -->
  <!-- The @cdl:extends attribute defines inheritance-->
  <!-- ============================================================= -->
  <xsd:attribute name="extends" type="cdl:extendsType">
    <xsd:annotation>
      <xsd:documentation>
      The @cdl:extends attribute is used in a property list to inherit an
      existing property list.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>

  <!-- ============================================================= -->
  <!-- The @cdl:mode attribute-->
  <!-- ============================================================= -->

  <xsd:attribute name="mode" type="cdl:propertyModeType">
    <xsd:annotation>
      <xsd:documentation>
      mode of assigment
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>


  <!-- ============================================================= -->
  <!-- The @cdl:name attribute-->
  <!-- ============================================================= -->

  <xsd:attribute name="name" type="cdl:namingType">
    <xsd:annotation>
      <xsd:documentation>
      A unique name for the attribute
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>

  <!-- ============================================================= -->
  <!-- The @cdl:ref attribute-->
  <!-- ============================================================= -->

  <xsd:attribute name="ref" type="cdl:refType">
    <xsd:annotation>
      <xsd:documentation>
      A reference in the language specified by @cdl:pathlanguage
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>

  <!-- ============================================================= -->
  <!-- The @cdl:refroot attribute-->
  <!-- ============================================================= -->

  <xsd:attribute name="refroot" type="cdl:refrootType">
    <xsd:annotation>
      <xsd:documentation>
        This specifies the reference root for reference resolution.
        The default value is the QName of the property list that includes
        this node in its descendant.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>

  <!-- ============================================================= -->
  <!-- END ATTRIBUTES-->
  <!-- ============================================================= -->

  <!-- ============================================================= -->
  <!-- BEGIN COMPLEX TYPES -->
  <!-- ============================================================= -->

    <!-- the property list type is lax wrt parsing; anything goes in this
          section, even when the rest is strict -->
  <xsd:complexType name="propertyListType">
    <xsd:sequence>
        <!-- namespace="##other" -->
      <xsd:any  processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
    <xsd:complexType name="cdlDocumentType">
      <xsd:sequence>
        <xsd:element ref="comment" minOccurs="0"/>
        <xsd:element ref="import" minOccurs="0" />
        <xsd:element ref="include" minOccurs="0"/>
        <xsd:element ref="types" minOccurs="0" />
        <xsd:element ref="configuration" minOccurs="0" maxOccurs="1" />
        <xsd:element ref="system" minOccurs="0"  maxOccurs="1"/>
      </xsd:sequence>

      <!-- path language declaration-->
      <xsd:attribute name="pathlanguage"
        type="xsd:anyURI"
        use="optional"
        default="http://www.w3.org/TR/1999/REC-xpath-19991116"
        >
      <xsd:annotation>
        <xsd:documentation>
      The path language for reference resolution is XPath1.0 by default
        </xsd:documentation>
      </xsd:annotation>
      </xsd:attribute>
        <!-- let people stick on other attributes as needed -->
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>

  <!-- ============================================================= -->
  <!-- END COMPLEX TYPES -->
  <!-- ============================================================= -->

  <!-- ============================================================= -->
  <!-- BEGIN ELEMENTS -->
  <!-- ============================================================= -->


  <!-- ============================================================= -->
  <!-- This is the base declaration; cdl -->
  <!-- ============================================================= -->

  <xsd:element name="cdl" type="cdlDocumentType">
    <xsd:annotation>
      <xsd:documentation>
        This is the root element.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>


  <!-- ============================================================= -->
  <!-- import external CDL -->
  <!-- ============================================================= -->

  <xsd:element name="import">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>
          The namespace and location of another CDL file to import
        </xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="namespace" type="xsd:anyURI" use="optional"/>
      <xsd:attribute name="location" type="xsd:anyURI" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <!-- ============================================================= -->
  <!-- include -->
  <!-- ============================================================= -->

  <xsd:element name="include">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>
          The location of another CDL file to import.
        </xsd:documentation>
      </xsd:annotation>
      <xsd:attribute name="location" type="xsd:anyURI" use="required"/>
    </xsd:complexType>
  </xsd:element>


  <!-- ============================================================= -->
  <!-- types is anything-->
  <!-- ============================================================= -->

  <xsd:element name="types">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>
          XML Schema type definitions
        </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:any minOccurs="0"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>


  <!-- ============================================================= -->
  <!-- configuration is some components-->
  <!-- ============================================================= -->

  <xsd:element name="configuration" type="cdl:propertyListType">
      <xsd:annotation>
        <xsd:documentation>
      The configuration declares components
        </xsd:documentation>
      </xsd:annotation>
  </xsd:element>

  <!-- ============================================================= -->
  <!-- a system is a propertylist instance-->
  <!-- ============================================================= -->

  <xsd:element name="system" type="cdl:propertyListType">
    <xsd:annotation>
      <xsd:documentation>
      The system is a component that describes what is to be deployed
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>


  <!-- ============================================================= -->
  <!-- Proposed Assertions -->
  <!-- ============================================================= -->

  <xsd:complexType name="letType" >
    <xsd:annotation>
      <xsd:documentation>
      This is an assignment operation whose semantics are as yet undefined
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="let" type="xsd:NCName" use="required"/>
    <xsd:attribute name="refroot" type="cdl:refType" use="required"/>
    <xsd:attribute name="ref" type="cdl:refrootType" use="required"/>
  </xsd:complexType>

  <xsd:element name="assert" >
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="let" minOccurs="0" maxOccurs="unbounded"  type="letType">
        </xsd:element>
        <xsd:element name="cond" minOccurs="1" maxOccurs="1" type="xsd:string">
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- ============================================================= -->
  <!-- Proposed Expression -->
  <!-- ============================================================= -->

  <xsd:element name="expression">
    <xsd:complexType>
      <xsd:annotation>
        <xsd:documentation>
        This evaluates an XPath expression
        </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
        <xsd:element name="let" minOccurs="0" maxOccurs="unbounded" type="letType">
        </xsd:element>
        <xsd:element name="return" minOccurs="1" maxOccurs="1" type="xsd:string">
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>


  <!-- ============================================================= -->
  <!-- Proposed placement -->
  <!-- ============================================================= -->

  <xsd:complexType name="placementType">
    <xsd:attribute name="to" type="cdl:refType" use="required"/>
  </xsd:complexType>

  <xsd:element name="placement" type="cdl:placementType">
  </xsd:element>


  <!-- ============================================================= -->
  <!-- Proposed : a @cdl:lazyattribute-->
  <!-- ============================================================= -->

  <xsd:attribute name="lazy" type="xsd:boolean" default="true" >
    <xsd:annotation>
      <xsd:documentation>
      mode of assigment
      </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>


  <!-- ============================================================= -->
  <!-- Proposed : a comment element -->
  <!-- can implicitly be used inside declarations that take xsd:any -->
  <!-- ============================================================= -->

  <xsd:simpleType name="commentType" >
    <xsd:annotation>
      <xsd:documentation>
        This is an arbitrary comment field
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string" />
  </xsd:simpleType>

  <xsd:element name="comment" type="cdl:commentType">
  </xsd:element>
  <!-- ============================================================= -->
  <!-- end schema-->
  <!-- ============================================================= -->
</xsd:schema>