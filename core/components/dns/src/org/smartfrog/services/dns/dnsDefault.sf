/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/services/dns/dnsData.sf"


DefaultConfig extends DNSData {

    // START NEEDED  ATTRIBUTES

   /** An IP address to access the DNS server default view. */
    ipAddress PARENT:ATTRIB ipAddress;
    
    /** A list of interfaces the default view should reply to. */
    interfacesAddress PARENT:ATTRIB interfacesAddress;


    /* A directory where all the  (live) config info should be. */
    configDir PARENT:ATTRIB configDir;

    /* Other DNS servers we forward to queries that we cannot 
       resolve locally. If this is set we will also set the
       "forward only" mode, so we don't try to contact root DNS
       servers.*/
    forwarders PARENT:ATTRIB forwarders;

    /* The name of the default view. */
    viewName PARENT:ATTRIB viewName;

    /* A zone name for direct look-ups that we master.*/
    zone PARENT:ATTRIB zone;

    /* A zone name for reverse look-ups that we master. */
    reverseZone PARENT:ATTRIB reverseZone;

    /* The host name that will appear in the NS records as 
       master of the zones. */
    nameServerHostName PARENT:ATTRIB nameServerHostName;
 

    // END NEEDED ATTRIBUTES


    options:configDir PARENT:ATTRIB configDir;
    options:forwarders PARENT:ATTRIB forwarders;
    
    // temporary binding "--" replaced by viewName
    -- extends DNSViewData {
        
        viewAddress ATTRIB ipAddress;
        viewName PARENT:ATTRIB viewName;
        viewInterfacesAddress ATTRIB interfacesAddress;
        setAsDefaultView true;

        // temporary binding "--" replaced by zoneName
        -- extends DNSZoneData {
            zoneName ATTRIB zone;
            setAsDefaultZone true;
        }

        // temporary binding "--" replaced by zoneName
        -- extends DNSZoneData {
            zoneName ATTRIB reverseZone;
            setAsDefaultZone true;
            isReverse true;
        }

        // temporary binding "--" replaced by zoneName
        -- extends DNSZoneData {
            zoneName "localhost";
            nameServerHostName "localhost";
            -- extends DNSBindingDataA {
                hostName "localhost";
                address "127.0.0.1";
            }
        }

        // temporary binding "--" replaced by zoneName
        -- extends DNSZoneData {
            zoneName "0.0.127.in-addr.arpa";
            isReverse true;
            nameServerHostName "localhost";
            -- extends DNSBindingDataPTR {
                hostName "localhost";
                address "127.0.0.1";
            }
        }
    } 
    
}

/* A starting configuration with no predefined zones (just a view).*/
DefaultConfigEmptyView extends DNSData {

    // START NEEDED  ATTRIBUTES

   /** An IP address to access the DNS server default view. */
    ipAddress PARENT:ATTRIB ipAddress;
    
    /** A list of interfaces the default view should reply to. */
    interfacesAddress PARENT:ATTRIB interfacesAddress;


    /* A directory where all the  (live) config info should be. */
    configDir PARENT:ATTRIB configDir;

    /* Other DNS servers we forward to queries that we cannot 
       resolve locally. If this is set we will also set the
       "forward only" mode, so we don't try to contact root DNS
       servers.*/
    forwarders PARENT:ATTRIB forwarders;

    /* The name of the default view. */
    viewName PARENT:ATTRIB viewName;

    /* The host name that will appear in the NS records as 
       master of the zones. */
    nameServerHostName PARENT:ATTRIB nameServerHostName;
 

    // END NEEDED ATTRIBUTES


    options:configDir PARENT:ATTRIB configDir;
    options:forwarders PARENT:ATTRIB forwarders;
    
    // temporary binding "--" replaced by viewName
    -- extends DNSViewData {
        
        viewAddress ATTRIB ipAddress;
        viewName PARENT:ATTRIB viewName;
        viewInterfacesAddress ATTRIB interfacesAddress;
        setAsDefaultView true;
    }
} 

