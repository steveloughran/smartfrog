/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/hadoop/test/system/local/components.sf"

/**
 * name node tests
 */


testJasperOnClasspath extends ExpectTerminate {
 action extends LoadJSP {
  sfShouldTerminate true;
 }
}

checkTmpDirSpace extends CheckDiskSpace {
  directories [LAZY PROPERTY java.io.tmpdir];
  minAvailableMB 0;
  minAvailableGB 0;

  sfShouldTerminate true;
 }

checkTmpDirSpaceBadDir extends checkTmpDirSpace {
  description "check for disk space with a bad directory in the list";
  directories [LAZY PROPERTY java.io.tmpdir,"/a/directory/that/doesnt/exist"];
}

testBasicDiskSpace extends ExpectTerminate {

  description "look for at least 0 bytes";
  action extends checkTmpDirSpace;
}

testPetaByte extends ExpectDeployFailure {

  description "Ask for more disk space than a filesystem can currently support (except for very large clusters)";
  exitText CheckDiskSpace:ERROR_NOT_ENOUGH_SPACE;

  action extends checkTmpDirSpace {
    //requires 1 PetaByte
    minAvailableGB (1024 * 1024);
  }
}


testBasicDiskSpaceMissingDir extends ExpectDeployFailure {

  description "look for a missing dir";
  exitText CheckDiskSpace:ERROR_NO_DIRECTORY;
  action checkTmpDirSpaceBadDir;
}

testBasicDiskSpaceSkipMissingDir extends ExpectTerminate {

  description "look for a missing dir but skip missing directories";
  action extends checkTmpDirSpaceBadDir {
    skipAbsentDirectories true;
  }
}
