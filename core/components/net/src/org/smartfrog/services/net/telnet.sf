/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/net/password.sf"
#include "/org/smartfrog/predicates.sf"

/**
 */
TelnetSchema extends Schema {
	host extends String;
	username extends String;
	ostype extends String;
	commands extends Vector;
	cmdsFailureMsgs extends OptionalVector;
	timeout extends OptionalInteger;
	shellPrompt extends OptionalString;
	port extends OptionalInteger;
	logFile extends OptionalString;
}

TelnetPrim extends Prim {
    sfClass "org.smartfrog.services.net.TelnetImpl";
    telnetSchema extends TelnetSchema;
    /* ========================================================
     * Mandatory attributes 
     *=========================================================
     */
    // host name
    //host "ebnt171.india.hp.com";
    
    // login name in remote FTP server
    //username "ashish";

    //ostype should be "linux" or "windows"
    ostype "linux";

    // write comma separated commands in the order of execution
    //commands [];
    // expected failure message for the commands 
    // Note: error message should be in same order of commands
    cmdsFailureMsgs [];

    /* ========================================================
     * Optional attributes 
     *=========================================================
     */
    // timeout for waiting response on telnet stream in milli seconds
    timeout 2000;
    //prompt given by telnet daemon after login is 
    shellPrompt "$";
    port 23;
    // optional log file for the telnet session
    //logFile "telnetSession.log";
    
    ShouldTerminate true;
    sfShouldTerminate ShouldTerminate;
}


LinuxTelnet extends TelnetPrim {

}

WindowsTelnet extends TelnetPrim {
  ostype "windows";
  shellPrompt ">";
}

TelnetSession extends Compound {

  passwordProvider extends FilePassword {
  }
  
  Telnet extends LinuxTelnet {
  
    // reference to password provider
    passwordProvider LAZY PARENT:passwordProvider;
  }
  
}

WindowsTelnetSession extends Compound {

  passwordProvider extends FilePassword {
  }
  
  Telnet extends WindowsTelnet {
  
    // reference to password provider
    passwordProvider LAZY PARENT:passwordProvider;
  }
  
}


/**
 * this compound uses a file password provider
  */
TelnetSessionPasswordFile extends TelnetSession {
    passwordFile TBD;
    passwordProvider:passwordFile LAZY PARENT:passwordFile;
}

WindowsTelnetSessionPasswordFile extends WindowsTelnetSession {
    passwordFile TBD;
    passwordProvider:passwordFile LAZY PARENT:passwordFile;
}

/**
 * this compound uses an inline password provider
  */
TelnetSessionInlinePassword extends TelnetSession {
    password TBD;

    passwordProvider extends InlinePassword {
        password LAZY PARENT:ATTRIB password;
    }
}

WindowsTelnetSessionInlinePassword extends WindowsTelnetSession {
    password TBD;

    passwordProvider extends InlinePassword {
        password LAZY PARENT:ATTRIB password;
    }
}
