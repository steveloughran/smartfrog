/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/assertions/components.sf"
#include "/org/smartfrog/services/filesystem/csvfiles/components.sf"


TestCSVFile extends TempFileWithCleanup {
  text ##"h1","h2","h3","h4"
"l1e1","",",","e4"
"l2e1","l2 e2","l2'e3,","l2;e4"
#;
}


testCSVFileCreated extends ExpectDeploy {
  description "check the number of lines read";

  action extends Compound {

    sourceFile TestCSVFile;
    //the reader
    reader extends CSVFileToRead {
      filename LAZY sourceFile;
    }


  }

  tests extends Sequence {
    mustExist extends FileMustExist {
      filename LAZY action:sourceFile;
      sfShouldTerminate true;
    }

  }
}

testReadCSVFile extends ExpectDeploy {
  description "check the number of lines read";

  action extends Compound {

    sourceFile TestCSVFile;
    //the reader
    reader extends CSVFileToRead {
      filename LAZY sourceFile;
    }

  }

  tests extends Sequence {

    //a short pause
    sleep extends Delay {
      time 2000;
    }

    parser extends CSVFileToReadTester {
      source LAZY action:reader;
      minCount 3;
      maxCount 3;
    }
  }
}

testCheckLines extends testReadCSVFile {
  description "check the values of the lines";
  tests:parser:lines [
    ["h1","h2","h3","h4"],
    ["l1e1","",",","e4"],
    ["l2e1","l2 e2","l2'e3,","l2;e4"]
  ];
}

testCheckHeader extends testReadCSVFile {
  description "say there is one header line, expect it to be skipped";
  action:reader:headerLines 1;
  tests:parser:minCount 2;
  tests:parser:lines [
    ["l1e1","",",","e4"],
    ["l2e1","l2 e2","l2'e3,","l2;e4"]
  ];
}