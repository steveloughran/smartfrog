/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/ssh/password.sf"

/**
 * SmartFrog Scp component can be used in workflows to send and retrieve 
 * files over SSH..
 */

 ScpSchema extends Schema {
 	host extends String;
 	username extends String;
   	localFiles extends Vector;
    remoteFiles extends Vector;
 	transferType extends String;

 }

ScpSession extends Compound {

    /*---------------------------Optional Parameters -----------------------*/
    port 22;
    shouldTerminate true;
    /*---------------------Component's Definition --------------------------*/ 
 
    PasswordProvider extends Password {
        //passwordFile PARENT:ATTRIB passwordFile;
    }
    SCP extends Prim {
        sfClass "org.smartfrog.services.ssh.ScpImpl";
      scpSchema extends ScpSchema;

        // reference to password provider
        passwordProvider LAZY PARENT:PasswordProvider;
        /* ========================================================
         * Optional attributes 
         *=========================================================
         */
         // two possible values are "get" and "put" 
       // transferType PARENT:ATTRIB transferType;

        shouldTerminate PARENT:ATTRIB shouldTerminate;
    }
}
