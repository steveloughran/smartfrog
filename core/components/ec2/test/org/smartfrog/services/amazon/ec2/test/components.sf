/** (C) Copyright 2007 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/filesystem/components.sf"
#include "/org/smartfrog/services/amazon/ec2/components.sf"
#include "/org/smartfrog/services/amazon/s3/components.sf"
#include "/org/smartfrog/services/amazon/test/components.sf";

DeployedService extends Compound {
   authentication extends AwsPassword;
   service TBD;
}


ExpectDeployedService extends  ExpectDeployOnAWS {

  action DeployedService;

}



ExpectTerminatingService extends  ExpectDeployOnAWS {
  expectTerminate true;
  exitType EXIT_TYPE_NORMAL;
  action DeployedService;

}


testListEC2Images extends  ExpectTerminatingService  {

  action:service extends ListEC2Images {
    id login;
    key LAZY authentication;
  }
}

testListAmazonImages extends  testListEC2Images  {

  action:service:target LAZY action;
  action:service:owners [AmazonAMI:AMAZON_ID];

  tests extends Sequence {
    -- extends Delay {
      time 1000;
    }
    assertHasValues extends Assert {
      sfShouldTerminate true;
      reference LAZY action;
      attribute "imageList";
      //at least two
      attributeVectorMinLength 2;
      attributeVectorMaxLength 10;
    }

    assertSingleton extends Assert {
      sfShouldTerminate true;
      reference LAZY action;
      attribute "imageID";
    }
  }
}

testListPrivateImages extends  testListEC2Images  {

  action:service:target LAZY action;
  action:service:includePublic false;
}


testListEC2ImagesBadPassword extends  ExpectDeployFailureOnAWS  {

  action extends ListEC2Images {
    id login;
    key "not a valid key";
  }

  exceptions [
    ["",""],
    ["","AWS was not able to validate the provided access credentials"]
  ];
}


testCreateInstance extends ExpectDeployOnAWS {

  action extends DeployedService {
    service extends ImageInstance {
       id login;
       imageID "ami-26b6534f";
       userData "test-data";
       key LAZY authentication;
    };
  }

}