/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/


Function extends {
   phase.function "org.smartfrog.sfcore.languages.sf.ConstructFunction";
   sfFunctionClass "";
   //sfFunctionLazy false;
}

/**
 * Creates a vector from all children
 */
vector extends Function{
   sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Vector";
}

/**
 takes the vector attributes and puts them
 together into a new vector. Ignores non-vector attribute
 */
append extends Function{
   sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Append";
}


concat extends Function {
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Concatenate";
}

formatString extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Format";
}





sum extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Sum";
}

plus extends sum;

product extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Product";
}

minus extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Minus";
}

divide extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Divide";
}




and extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.And";
}

or extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Or";
}

not extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Not";
}


GE extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GE";
}

LE extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LE";
}

GT extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.GT";
}

LT extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.LT";
}

EQ extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.EQ";
}

NE extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.NE";
}



ifThenElse extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.IfThenElse";
}





next extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Next";
}

random extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Random";
}

date extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Date";
}

userinput extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.UserInput";
}



ref extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
}

Ref extends Function{
    sfFunctionClass "org.smartfrog.sfcore.languages.sf.functions.Ref";
}
