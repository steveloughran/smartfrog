#include "org.smartfrog.services/slp/slplocator.sf"
#include "org.smartfrog.services/slp/slpResultsCollector.sf"

/**
 * This Compound groups a Locator and a SLPResultsCollector.
 * The results of the location are stored in the same fashion as in the SLPResultsCollector.
 * To make it behave as a PrimResultsCollector, change the slpResultsCollectorClass.
 */

ResultsCollector extends Compound {
	sendTo extends LAZY {}
	registerWith extends LAZY {}
		
	slpLocatorClass "org.smartfrog.services.slp.SFSLPLocator";
	slpResultsCollectorClass "org.smartfrog.services.slp.SLPResultsCollector";//  or "org.smartfrog.services.slp.PrimResultsCollector".

// locator parameter
	sfServiceDescription extends LAZY {
		// sfServiceType "";
		// sfServiceQuery "";
		// sfServiceAttributes extends {}
	}
	sfLocale "en"; // the locale of this locator;
	sfLocationScopes "DEFAULT";

//collector parameter
	retryInterval 10000; //ms
	threadType "tryAndDie"; // may be "keepLooking", "activeWait", or "tryAndDie"
	display false;		

// inner components.
	slpLocator extends SLPLocator{
		sfClass PARENT:ATTRIB slpLocatorClass; 
		sfLocale PARENT:ATTRIB sfLocale; 
		sfLocationScopes PARENT:ATTRIB sfLocationScopes;
		sfServiceDescription PARENT:ATTRIB sfServiceDescription;
	}
	slpResultsCollector extends SLPResultsCollector {
		sendTo  PARENT:ATTRIB sendTo;
		registerWith PARENT:ATTRIB registerWith; 
		sfClass PARENT:ATTRIB slpResultsCollectorClass;
		retryInterval PARENT:ATTRIB retryInterval; 
		threadType PARENT:ATTRIB threadType;
		display PARENT:ATTRIB display;
		locator LAZY PARENT:ATTRIB slpLocator;
		destination LAZY PARENT;
	}
}
