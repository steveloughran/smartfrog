/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/services/dns/dnsData.sf"




// creates a new view for a subnet and makes the CFC visible in it with
//  a local subnet address.
// Also, all the other main zones are also visible through forwarding.
// It assumes that a "main view" has already been created, and also a 
// reverse look-up zone in the "main view" for the CFC address is available.
DNSSubnet extends Prim {


    sfClass "org.smartfrog.services.dns.DNSModifierImpl";

    /* A reference to a (remote) DNS manager. */
    manager LAZY HOST localhost:dnsManager; // LAZY Link


    /** An IP address to access the new subnet DNS view. */
    viewAddress TBD;
      
    // The name of the subnet view
    viewName TBD;

    // The name of zone in the subnet view that contains the CFC
    zoneName TBD;

    // An IP address to access the main DNS view
    mainViewAddress TBD;

    // The name of the main view
    mainViewName "default";

    /* A string that identifies the reverse zone used by the CFC in the 
       main view. */
    mainReverseZoneName "defaultReverse"; // String

   /* A string describing the host name of the DNS binding for the CFC. */
    hostName  TBD; // String 

    /* A string describing the IP address of the DNS binding for the CFC. */
    address  TBD; // String


    /** A list of interfaces the subnet view should reply to. */
    interfacesAddress [ATTRIB viewAddress];


    
    data extends LAZY DNSCollectionData {

        // add reverse binding in the main view
        -- extends DNSBindingDataPTR {
            viewName ATTRIB mainViewName;
            zoneName ATTRIB mainReverseZoneName;
            hostName PARENT:ATTRIB hostName;
            address PARENT:ATTRIB address;
        }

        // create view for the subnet

        -- extends DNSViewData {
        
            viewAddress PARENT:ATTRIB viewAddress;
            viewName PARENT:ATTRIB viewName;
            viewInterfacesAddress ATTRIB interfacesAddress;
            forwarders [ ATTRIB mainViewAddress];
        
            // forward look-up zone for the cfc
            -- extends DNSZoneData {
                viewName  PARENT:ATTRIB viewName;
                zoneName  PARENT:ATTRIB zoneName;
                setAsDefaultZone true;
                
                // forward binding for the cfc
                -- extends DNSBindingDataA {
                    viewName PARENT:ATTRIB viewName;
                    zoneName PARENT:ATTRIB zoneName;                    
                    hostName PARENT:ATTRIB hostName;
                    address PARENT:ATTRIB address;
                }
            }
        }
    }
}
        
