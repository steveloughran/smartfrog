
// include the core smartfrog components and the components for the arithmetic example
\#include "/com/hp/SmartFrog/components.sf"
\#include "/com/hp/sfRegTest/arithmetic/netComponents.sf"
\#include "/com/hp/sfRegTest/arithmetic/comparator.sf"



Example1 extends Compound {

// First the end-point...
  sink extends Compound {
    sfProcessHost ATTRIB $evaluator.host;

    $evaluator.uniqueName extends $evaluator.operation {
      inputs:G extends Input;
      operation "$evaluator" ;		// use same variable as input name.
      outputs:value:to LAZY ATTRIB comparator:inputs:target;
    }

    comparator extends Comparator {
      count ATTRIB numMatches;
      outputs:value:to LAZY ATTRIB printer:inputs:printVal;
    }
    printer extends Printer { 

    }
  }

// Now all the nodes that implement the logic
#foreach( $node in $commonNodes )
  $node.uniqueName extends $node.operation {
        sfProcessHost ATTRIB $node.host ;
    #if ($node.operation == "Constant")
        constant $node.info ;
    #end   
    #if ($node.isLeftChild())
      #if ($node.parent.operation == "Evaluator")
        outputs:value:to LAZY ATTRIB   sink:comparator:inputs:candidate;
      #else
        outputs:value:to LAZY ATTRIB $node.parent.uniqueName:inputs:lhs; 
      #end
    #else 
        outputs:value:to LAZY ATTRIB $node.parent.uniqueName:inputs:rhs;
    #end
 }
#end

// Finally the generator with all its outputs

  source extends Compound {
    sfProcessHost ATTRIB host2;

    generator extends Generator { 
        outputs:value:to  LAZY ATTRIB  sink:$evaluator.uniqueName:inputs:G;
#foreach( $node in $generators )
        outputs:$node.uniqueName  extends  Output;
    #if ($node.isLeftChild())
        outputs:$node.uniqueName:to LAZY ATTRIB $node.parent.uniqueName:inputs:lhs; 
    #else 
        outputs:$node.uniqueName:to LAZY ATTRIB $node.parent.uniqueName:inputs:rhs;
    #end
#end 
    interval ATTRIB intervalGen; // speed it up a bit,a number every second
    min 1;
    max ATTRIB maxValueGen;
    }
  }
}

/*
 * sfConfig1 is the special attribute that is deployed by SFSystem
 * here it is defined to contain Example1
 */

sfConfig1 extends Compound { 
  sfProcessHost ATTRIB host1;
  //sfRootLocatorPort ATTRIB port;    
  numMatches 10;
  maxValueGen 10000;
  intervalGen 5;
  example extends Example1;            // add the example itself as a component
}

