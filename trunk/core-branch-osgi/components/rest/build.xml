<project name="rest" default="war">
  <description>
    This package requires an implementation of the Servlet 2.4 Specification
    to be available within the classpath (Inside your sf/lib folder presumably)
  </description>

  <!-- override point -->
  <property name="root.dir" value="../.."  />
  <property name="sf.dir" value="${root.dir}/smartfrog" />
  
  <property name="build.dir" value="${basedir}/build" />
  <property name="build.webinf" value="${build.dir}/WEB-INF" />
  <property name="build.classes" value="${build.webinf}/classes" />
  
  <property name="static.dir"     value="${basedir}/static" />
  <property name="src"            value="${basedir}/src"/>
  <property name="lib"            value="${sf.dir}/dist/lib" />
  <property name="webinf"         value="${basedir}/WEB-INF"/>
  <property name="webinf.lib"     value="${webinf}/lib" />
  
  <property name="war"            value="${basedir}/${ant.project.name}.war" />
  <property name="javac.debug"    value="true" />
  <property name="javac.optimize" value="true" />
  <property name="javac.deprecation" value="true" />
  <property name="javac.target"   value="1.4" />
  <property name="javac.source"   value="1.4" />

  <target name="classpath">
    <mkdir dir="${webinf.lib}"/> 
    <path id="classpath">
      <fileset dir="${webinf.lib}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib}">
        <include name="*.jar"/>
      </fileset>
    </path>

    <property name="expanded.classpath" refid="classpath"/>
    <echo message="classpath=${expanded.classpath}" level="info"/>
 </target>

  <target name="classes" depends="classpath" description="Compile classes">
    <mkdir dir="${build.classes}"/> 
    <mkdir dir="${static.dir}"/>
    <javac srcdir="${src}"
           destdir="${build.classes}"
           debug="${javac.debug}"
           optimize="${javac.optimize}"
           deprecation="${javac.deprecation}"
	   source="${javac.target}"
	   target="${javac.target}"
           >
       <classpath>
         <path refid="classpath"/>
       </classpath>

       <include name="**/*.java"/>
    </javac>
    
    <!-- copy web-inf and static resources -->
    <copy todir="${build.dir}">
      <fileset dir="${static.dir}"/>
    </copy>
    
    <!-- build.webinf will exist by now -->	
    <copy todir="${build.webinf}">
      <fileset dir="${webinf}" />
    </copy>
  </target>

  <target name="war" depends="classes" description="build WAR"> 
    <war destfile="${war}"
         webxml="${build.webinf}/web.xml"
         basedir="${build.dir}">
      <exclude name="build.xml"/>
      <exclude name="WEB-INF/web.xml"/>
      <exclude name="**/SVN/**"/>
      <exclude name="src/**"/>
    </war>
    
    <copy file="${src}/rest-jetty-template.sf" tofile="${basedir}/rest-jetty.sf">
		<filterset>
			<filter token="ANT_BUILD_WAR_FILE" value="${war}" />
		</filterset>
	</copy>
	
	<echo>A file named rest-jetty.sf has been generated with an attribute
containing the full filename of the generated .WAR file. Due to
Java parsing, on Windows, this string may need '\' characters 
replaced with '\\' to allow the description to run.</echo>
  </target>

  <target name="clean" description="Remove generated files"> 
    <delete file="${war}" quiet="true" />
    <delete quiet="true" includeemptydirs="true">
      <fileset dir="${build.dir}" />
    </delete>
  </target>

</project>



