<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  /** (C) Copyright 1998-2007 Hewlett-Packard Development Company, LP

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
  USA

  For more information: www.smartfrog.org

  */
  -->
<project name="Avalanche-Core" basedir="." default="allJars">

    <property file="setup.properties"/>

    <target name="init">
    <property name="src.dir" location="src"/>	
    <property name="lib" location="lib"/>	
	<property name="build.classes.dir" location="build"/>
    <property name="dist.dir" location="dist"/>	
	<property name="javac.debug.mode" value="on"/>
	<property name="javac.debug.level" value="lines,vars,source"/>
	<property name="javac.java.version" value="1.4"/>
	<property name="build.compiler" value="modern"/>
	<property name="javac.compiler" value="${build.compiler}"/>
    <property name="rmitargets" value="${basedir}/rmitargets"/>
	<!-- *** Change this to point to you local AVALANCHE_HOME on server.
	 -->
	
    <property name="rmic.compiler" value="sun"/>
	<property name="java.class.path" value="${java.class.path};lib/xbean.jar;lib/jsr173_api.jar"/>

	<property name="avalanche.types.lib" value="avalancheTypes.jar"/>
	
	<path id="xbean.class.path">
	    <pathelement path="${lib}/xbean.jar"/>
	    <pathelement path="${lib}/jsr173_api.jar"/>
	</path>

	<path id="avalanche-core.class.path">
	   <pathelement path="${classpath}"/>
	      <fileset dir="${lib}">
	        <include name="*.jar"/>
	        <include name="${avalanche.types.lib}"/>
             </fileset>
	     <pathelement location="${build.classes.dir}"/>
	</path>
 </target>
 	<!-- *** Must export XBEAN jars in CLASSPATH manually, including in build.xml is not working -->
    <target name="scomp" depends="init" description="Generate classes from XML Schemas">
    	<taskdef name="xmlbean" classname="org.apache.xmlbeans.impl.tool.XMLBean" classpath="${lib}/xbean.jar:${lib}/jsr173_api.jar"/>
        <xmlbean schema="schemas" destfile="lib/${avalanche.types.lib}">
			<classpath refid="xbean.class.path"/>
		</xmlbean>
    </target>
	
	<target name="compile-src" depends="scomp" description="Compile Avalanche Sources">

		<!--Copy smartFrog jars-->
		<copy todir="lib">
			<fileset dir="${smartfrog.home}/dist/lib" includes="**/*.jar"/>
		</copy>
		
		<javac compiler="${javac.compiler}" srcdir="${src.dir}" includes="**/*.java" 
			destdir="${build.classes.dir}" debug="${javac.debug.mode}" debuglevel="${javac.debug.level}"
			includeAntRuntime="false" source="${javac.java.version}" target="${javac.java.version}">
			
			<classpath refid="avalanche-core.class.path"/>
		</javac>
	</target>
	
	<target name="initbuild" depends="init">
	   <mkdir dir="${dist.dir}"/>
	   <mkdir dir="${dist.dir}/lib"/>
           <mkdir dir="${dist.dir}/lib/client"/>
	   <mkdir dir="${build.classes.dir}"/>
    </target>
	
	 <target name="compile-rmi" depends="compile-src">
	    <rmic includesfile="${rmitargets}" compiler="${rmic.compiler}" stubversion="1.2" base="${build.classes.dir}">
	      <classpath refid="avalanche-core.class.path"/>
	    </rmic>
	  </target>

  <target name="coreJar" depends="initbuild,compile-src">
    <jar jarfile="${dist.dir}/lib/avalanche.jar" basedir="${build.classes.dir}" includes="**/**" excludes="**/client/**"/>
  	<copy file="lib/${avalanche.types.lib}" todir="${dist.dir}/lib"/>
  </target>

	
	<target name="copySF">
	   <copy todir="${build.classes.dir}">
	     <fileset dir="${src.dir}">
	       <include name="**/*.sf*"/>
	     </fileset>
	   </copy>
	</target>
	
	<target name="copyTemplates">
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.tmpl*"/>
			</fileset>
		</copy>
	</target>
	
    <target name="compressComponentJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/compressComponent.jar" basedir="${build.classes.dir}" includes="**/sf/compress/**"/>
    </target>
	
    <target name="ftpComponentJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/ftpComponent.jar" basedir="${build.classes.dir}" includes="**/sf/ftp/**"/>
    </target>
	
    <target name="simpleExecComponentJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/simpleExecComponent.jar" basedir="${build.classes.dir}" includes="**/sf/exec/simple/**"/>
    </target>

    <target name="rpmComponentJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/rpmComponent.jar" basedir="${build.classes.dir}" includes="**/sf/rpm/**"/>
    </target>
	
    <target name="sfAntJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/sfAnt.jar" basedir="${build.classes.dir}" includes="**/sf/exec/ant/**"/>
    </target>
	
   <target name="sfAnubisListenerJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/sfAnubisListener.jar" basedir="${build.classes.dir}" includes="**/sf/anubis/**"/>
    </target>

   <target name="sfTestJar" depends="compile-src,compile-rmi,copySF">
         <jar jarfile="${dist.dir}/lib/client/sfAnubisTest.jar" basedir="${build.classes.dir}" includes="**/sf/test/**"/>
    </target>

	<target name="sfUninstallJar" depends="compile-src,compile-rmi,copySF">
	         <jar jarfile="${dist.dir}/lib/client/sfUninstall.jar" basedir="${build.classes.dir}" includes="**/sf/uninstall/**"/>
    </target>

	<target name="sfGT4WSCoreJar" depends="compile-src,compile-rmi,copySF">
	         <jar jarfile="${dist.dir}/lib/client/gt4WsCoreComponent.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4wscore/**"/>
    </target>

	<target name="sfXMPPClient" depends="compile-src,compile-rmi,copySF">
	         <jar jarfile="${dist.dir}/lib/client/sfXmppClient.jar" basedir="${build.classes.dir}" includes="**/client/monitor/xmpp/**"/>
    </target>

	<target name="shared" depends="compile-src">
         <jar jarfile="${dist.dir}/lib/shared.jar" basedir="${build.classes.dir}" includes="**/shared/**"/>
    </target>

	<target name="clientutils" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/clientutils.jar" basedir="${build.classes.dir}" includes="**/sf/apps/utils/**"/>
	</target>	

	<target name="diskutils" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/diskutils.jar" basedir="${build.classes.dir}" includes="**/sf/disk/**"/>
	</target>	
	
	<target name="gt4prereqs" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gt4prereqs.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/prereqs/**"/>
	</target>	
	
	<target name="gnubuild" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gnubuild.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gnubuild/**"/>
	</target>
	
	<target name="gt4build" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gt4build.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/build/**"/>
	</target>
	
	<target name="gt4exec" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gt4exec.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/exec/**"/>
	</target>

	<target name="gt4javawscore" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gt4javawscore.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/javawscore/**"/>
	</target>
	
	<target name="gt4security" depends="compile-src,compile-rmi,copySF,copyTemplates">
		<jar jarfile="${dist.dir}/lib/client/gt4security.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/security/**"/>
	</target>
	
	<target name="gt4wsgram" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gt4wsgram.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/wsgram/**"/>
	</target>
	
	<target name="gridftp" depends="compile-src,compile-rmi,copySF">
		<jar jarfile="${dist.dir}/lib/client/gridftp.jar" basedir="${build.classes.dir}" includes="**/sf/apps/gt4/gridftp/**"/>
	</target>

	<target name="ca" depends="compile-src,compile-rmi,copySF,copyTemplates">
		<jar jarfile="${dist.dir}/lib/client/ca.jar" basedir="${build.classes.dir}" includes="**/sf/apps/ca/**"/>
	</target>	
	
	<!--
	 setupBDB.java target is used to populate default settings in the database.
	 This file uses initsettings.xml file to load the values into database.
	 This should not be part of production environment
	 -->		
	<target name="setupBDB">
		<java classname="tests.org.smartfrog.avalanche.server.SetupBDB">
			<arg value="C:\\sf\\avalanche\\avalanche-server"/>
			<classpath refid="avalanche-core.class.path"/>
			
		</java>
	</target>	
	
	<target name="allJars" 
		depends="coreJar,sfXMPPClient,shared,simpleExecComponentJar,ftpComponentJar,sfAntJar,gnubuild,gt4build,gridftp,
		gt4prereqs,clientutils,diskutils,gt4exec,gt4javawscore,gt4security,gt4wsgram,ca,compressComponentJar,rpmComponentJar,
		sfUninstallJar">
    </target>

	<target name="docs">
		<javadoc packagenames="org.smartfrog.avalanche.*"
	           sourcepath="src"
	           defaultexcludes="yes"
			   classpathref="avalanche-core.class.path" 
	           destdir="docs/api"
	           author="true"
	           version="true"
	           use="true"
	           windowtitle="Avalanche Server API"
			linksource="yes">
	    <doctitle><![CDATA[<h1>Avalanche API</h1>]]></doctitle>
	    <bottom><![CDATA[<i>Copyright &#169; 2006 Hewlett Packard. All Rights Reserved.</i>]]></bottom>
	  </javadoc>
	</target>

    <target name="clean">
        <delete dir="${build.classes.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

</project>

