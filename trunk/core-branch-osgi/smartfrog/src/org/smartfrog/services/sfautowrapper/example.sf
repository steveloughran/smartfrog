/** (C) Copyright 1998-2006 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/sfautowrapper/components.sf"

sfConfig extends SFAutoWrapper {
     constructor extends DATA {
        class "org.smartfrog.Version";
//        parameters [param1,param2];
//        fields extends DATA {
//          field1 "StringValue1";
//          field2 1; //int value TODO show how to pass special values? field2 extends DATA {class "", value"};
//        }
//       systemProperties extends DATA {
//            field1 "StringValue1";
//          field2 1; //int value TODO show how to pass special values? field2 extends DATA {class "", value"};
//        }
//        libDir //TODO it should also take an [] for jar files.
        //creates object attribute
        object; //Will be replaced at runtime
     }

     main extends DATA { //
         method extends DATA {
            name "versionStringforrelease";
            //parameters extends Vector {};
         }
         object LAZY ATTRIB constructor:object;
         object2 LAZY  constructor:object;
         object3 LAZY PARENT:constructor:object;
         next LAZY PARENT:end;
         //result; // created at runtime
     }
     end extends DATA {
       object; // object==SFNull means end.
     }
}