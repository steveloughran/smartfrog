SmartFrog 3.12.010
======================

This is a new release of SmartFrog, the Java-based, LPGL-licensed
distributed deployment framework developed by HP Laboratories. SmartFrog
enables applications to be deployed across multiple machines,
configuring different aspects of the system so that they are all
consistently configured, and managing the life-cycle of the application
as a whole. The project's home page is http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308

This release is 3.12.010; built from revision 5471
of the SVN repository. This release has an extended language
with the ability to tag attributes, and includes the following items:

* Core smartfrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.  
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault 
  tolerant systems.
* Database: components to issue database commands, and deploy HSLDB and MySQL.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* Scripting: support for BSF-hosted scripting languages
* Testing: Distributed JUnit and component testing with SFUnit.
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support it, and sample templates
  are provided to start and stop Tomcat and JBoss. The Jetty component can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files and application servers.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.

Packaging
=========

This release is available as:

* RPM files inside a .tar.gz file.
* a JAR installer.
* the original core smartfrog distribution as .zip and .tar.gz (deprecated)


The RPM installation is for RPM-based Linux systems. It comprises three RPM
files, smartfrog, smartfrog-daemon and smartfrog-demo:

smartfrog:        the core SmartFrog distribution.
smartfrog-daemon: the shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   example code and documentation.

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or 
Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.


Security warning
================

Unless SmartFrog is configured with security, a running daemon will
listen on its configured port for incoming deployment requests, and
deploy the applications with the rights of the user running the daemon.
When the smartfrog-daemon RPM is installed, that means that a process
running as root will be listening on an open port for incoming
deployment requests. Do not deploy SmartFrog this way on any untrusted
network, not without turning security on and, ideally, recreating the
RPMs with signed JAR files.

Building SmartFrog
==================

SmartFrog requires Java 1.5 and Ant 1.7 to build. The izpack and source .zip and
.tar.gz distributions include a source tree adequate to build the
entire system. To build a later release, please follow the instructions at
  http://sourceforge.net/svn/?group_id=87384
to check out smartfrog/trunk/core from our repository.

This release was built with revision 5471 of the repository, which
is available under the SVN branch
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/release3.12.010

We strongly encourage anyone interested in building or extending
SmartFrog to get involved in the SmartFrog developer mailing list, which
can be found from the sourceforge project page
http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Thank you!

The SmartFrog Team        http://smartfrog.org/

Changes since last release
==========================

There have been no major changes to the core SmartFrog engine
or components since the last release. We have added some diagnostics;
any of the smartfrog commands can be called with the -diagnostics option,
which will print out diagnostic information about the environment
in which SmartFrog is running.

There is now an AntBuild component in the sf-ant package, defined in
/org/smartfrog/services/ant/components.sf . This component can run
an existing Ant build file inside a SmartFrog process, passing down
properties and collecting results. Output is passed to the SmartFrog log
infrastructure, and properties from the build can be turned into attributes
on a designated target component. Build failures can be configured to
terminate the component. If the AntBuild component is terminated mid-build,
a best-effort attempt will be made to interrupt the build; if that does not
halt the build within a specified timeout, termination can be forced.

This component enables you to integrate existing XML build files into
a SmartFrog managed deployment, potentially running a build file remotely.
Users are requested to provide feedback, to help improve the functionality of
the component. We are particularly interested in improving termination, failure
and reporting.


Release Notes - SmartFrog - Version 3.12.010

** Bug
    * [SFOS-500] - Ant project properties arent remotely accessible


** Improvement
    * [SFOS-525] - move resourceloader logic into core
    * [SFOS-526] - move list operations into a central utils class
    * [SFOS-530] - add support for a vector of file references in the FileSystem class
    * [SFOS-534] - Add a standard way to SmartFrogTask to let other classes wait for a thread  to finish

** New Feature
    * [SFOS-499] - Add a component to run a specific build file
    * [SFOS-536] - add ability to propagate the Ant properties to a remote target
    * [SFOS-537] - Add version information to SmartFrogException
    * [SFOS-538] - Add diagnostics check for repeated jar file names in classpath.


** Task
    * [SFOS-497] - async Ant execution needs tests
    * [SFOS-521] - Automated way to update avlEventServer in sfinstaller.vm template file

** Sub-task
    * [SFOS-522] -  Add new API to sfinstaller component to read the xmpp servername
                    and generate description.

