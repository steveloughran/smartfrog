SmartFrog 3.11.001beta
======================

This is a new release of SmartFrog, the Java-based, LPGL-licensed distributed
deployment framework developed by HP Laboratories. SmartFrog enables
applications to be deployed across multiple machines, configuring different
aspects of the system so that they are all consistently configured, and managing
the life-cycle of the application as a whole. The project's home page is
http://smartfrog.org/

The release artifacts are available at

http://sourceforge.net/project/showfiles.php?group_id=87384&package_id=176308&release_id=521363

This release is 3.11.001beta; built on Java 1.5 from revision 4586
of the SVN repository. This release has an extended language
with the ability to tag attributes, and includes the following items:

* Core smartfrog daemon, including services to manage files, start and stop
  Java and native programs.
* Example components and applications.  
* Ant support: ant tasks to deploy and terminate applications from a build.
* Ant components: the ability to execute ant tasks in a deployment.
* Anubis: a partition aware tuple-space that can be used to implement fault 
  tolerant systems.
* JMX: the ability to configure and manage JMX components, and to manage
  SmartFrog components over JMX.
* Logging: integration with Apache commons-logging and Log4J
* Networking: email, FTP, SSH, DNS support.
* Quartz: scheduled operations using Quartz libraries.
* Scripting: support for BSF-hosted scripting languages
* WWW: deployment of WAR and EAR files to application servers. deploy-by-copy
  is provided for all application servers that support, and a tomcat-specific
  component can communicate with Apache Tomcat. The Jetty component can
  configure and deploy individual servlets, eliminating much of the need for WAR
  files themselves.
  
For Java 1.5 systems, there are some extra components:  
* Database: components to issue database commands, and deploy HSLDB and MySQL.
* Testing: Distributed JUnit and component testing with SFUnit.
* XML: XML support with XOM.
* XMPP: Presence and messaging over Jabber.

This is a beta release; before the final release we plan to integrate
Forrest-generated documentation into the redistributables, and tune the
redistributable packages themselves.

Packaging
=========

This release represents a beta test of the new packaging/distribution options.

It is available as:

* RPM files inside a .tar.gz file.
* a JAR installer.
* the original core smartfrog distribution as .zip and .tar.gz (deprecated)


The RPM installation is for RPM-based Linux systems. It comprises three RPM
files, smartfrog, smartfrog-daemon and smartfrog-demo:

smartfrog:        the core SmartFrog distribution.
smartfrog-daemon: the shell scripts to add the smartfrog distribution to the
                  path, and to run the daemon on start-up.
smartfrog-demo:   example code and documentation.

All the JAR files are also published to a repository that is compatible with
Apache Maven and Ivy. Add
  http://smartfrog.sourceforge.net/repository/
to your repository list to pull SmartFrog artifacts into your Ivy- or Maven- based build.

There are also SmartFrog components to retrieve artifacts from such a repository
(the Library components under /org/smartfrog/services/os/java/library.sf ),
which can be used for dynamic download of SmartFrog and other artifacts.

List of files and their SHA1 checksums

2a9427a769c519e830f11ce456bc176bcfe6a56e  smartfrog-3.11.001beta-4.noarch.rpm
3690e69bee17e9d4d3ad7784b15a4c418b35d0c0  smartfrog.3.11.001beta_all.tar.gz
bac8be019eb6d8c5c1b60fa2ad17ec7702bb9dcc  smartfrog.3.11.001beta_all.zip
5aa2c612a620e37871ef68e3693f3d3ba02dc148  smartfrog.3.11.001beta_dist.tar.gz
380f12c826cd8276da158212f2f4a657dd7815f4  smartfrog.3.11.001beta_dist.zip
a086e10c866feb357def39ab21d50d43a8b7bf55  smartfrog-daemon-3.11.001beta-4.noarch.rpm
8e81f01ba4db76e9ce1c077743164555222f5327  smartfrog-demo-3.11.001beta-4.noarch.rpm
73c1c58000c9cadbe9e95f652c45f10e344980d9  smartfrog-install-3.11.001beta.jar


Security warning
================

Unless SmartFrog is configured with security, a running daemon
will listen on its configured port for incoming deployment requests, and deploy
the applications with the rights of the user running the daemon. When the
smartfrog-daemon RPM is installed, that means that a process running as root
will be listening on an open port for incoming deployment requests. Do not
deploy SmartFrog this way on any untrusted network, not without turning security
on and, ideally, recreating the RPMs with signed JAR files. 

Building SmartFrog
==================

SmartFrog requires Java 1.4 and Ant 1.7 to build. For a complete release,
Java1.5 or later is required.

None of our distributions include a source tree adequate to build the entire 
system. Please follow the instructions at 
  http://sourceforge.net/svn/?group_id=87384
and check out smartfrog/trunk/core from our repository.

This release was built with revision 4586 of the repository,
https://smartfrog.svn.sourceforge.net/svnroot/smartfrog/tags/3.11.001beta

We strongly encourage anyone interested in building or extending smartfrog to
get involved in the smartfrog developer mailing list, which can be found from
the sourceforge project page http://sourceforge.net/projects/smartfrog/

Reporting Bugs
==============

Please file all bug reports at http://jira.smartfrog.org/

Changes since last release
==========================

Since the last release, 3.11.000beta, the primary changes have been in
* RPM support: RPMs are now working, according to our automated tests.
* Headless support: there is a -headless option that runs SmartFrog without a visible GUI.
* Security

Thank you!

The SmartFrog Team        http://smartfrog.org/

Release Notes - SmartFrog - Version 3.11.001 beta

** Bug
    * [SFOS-112] - Java classpath components
    * [SFOS-161] - core/release build fails on macs and other unix systems without rpmbuild on the path
    * [SFOS-162] - 'classic' distribution JARs include old tasks and gui JARs, with no coherence
    * [SFOS-163] - scripting redistribution does not include beanshell
    * [SFOS-166] - core smartfrog jars do not md5 their pom.
    * [SFOS-167] - Ant builds run out of memory on windows
    * [SFOS-168] - ivy file excludes beanshell, so scripting component is incomplete
    * [SFOS-169] - mysql test problem
    * [SFOS-172] - we arent running all the tests in testharness
    * [SFOS-173] - unable to start SmartFrog as a non-root user
    * [SFOS-174] - RPM installed daemons should not log to a file when not started from init.d
    * [SFOS-179] - syntax defects in smartfrog profile
    * [SFOS-180] - SmartFrog installation has warnings
    * [SFOS-185] - scripting component distribution doesnt include beanshell library
    * [SFOS-188] - database tests failing on windows
    * [SFOS-190] - ConfigurationDescriptorDeployTest/testurlTest01 is failing when there is no default.sf deployment
    * [SFOS-193] - sfGui.bat missing from all .zip release file. 3.11.000beta
    * [SFOS-198] - org.smartfrog.test.system.deploy.OutputImpl doesnt pass sfDeploy up
    * [SFOS-199] - SFGui.bat missing from all.bat
    * [SFOS-200] - init-proxy targets not that useful
    * [SFOS-218] - Ant build fails with unknown option '+HeapDumpOnOutOfMemoryError'
    * [SFOS-221] - incorrect unix shells/filenames for smartfrog.sh and smartfrog.csh
    * [SFOS-222] - Useless code in org.smartfrog.avalanche.client.sf.rpm.RPMUtils
    * [SFOS-223] - /tmp/sflogs is created with default user perms by the first user to run smartfrog; if root, nobody else can run smartfrog
    * [SFOS-224] - headless mode isnt working
    * [SFOS-231] - sfManagementConsole prints out too many tag related error messages
    * [SFOS-236] - Adding a java.policy file when using no security in SF, causes an infinite loop in SF: org.smartfrog.sfcore.security.DummySecurityManager
    * [SFOS-260] - SFComponentDescriptionImpl prints exceptions it swallows to system.out, when it isnt needed


** Improvement
    * [SFOS-181] - add assertions to test for instanceof in SmartFrogTestBase
    * [SFOS-191] - testharness code should use commons-logging to log stuff, rather than do it themselves
    * [SFOS-203] - move components in debug build's output from system.out to sfLog()
    * [SFOS-214] - make the default option for every build "component"
    * [SFOS-225] - rename smartfrog in the init.d directory
    * [SFOS-248] - sfDumpState in CompoundImpl uses a new thread for each visit. It should only do that when visiting a remote object.
    * [SFOS-259] - ScriptPrimImpl relies on NPEs to distinguish source from resource paths

** New Feature
    * [SFOS-208] - Add an option to sfDaemon to run headless.
    * [SFOS-247] - Create Dumper object to dump descriptions from an already deployed application, using the sfDumpState interface in Prim


** Task
    * [SFOS-42] - Have Ivy set up the classpath for most components
    * [SFOS-226] - Create automated tests for RPM working
    * [SFOS-255] - clean up imports of services

** Sub-task
    * [SFOS-194] - Modify documentation to include information to add ANT_OPTS=-XX:MaxPermSize=64m.
    * [SFOS-213] - Get build file to build on everyone's machines
    * [SFOS-216] - Update avalanche to build against SVN_HEAD of the sfinstaller
    * [SFOS-233] - layout RPM in FSH-compatible structure
    * [SFOS-241] - move startup scripts (except the daemon) to the main smartfrog rpm
    * [SFOS-243] - add sfgui as separate installable in izpack installer
    * [SFOS-245] - pull sfgui from core/smartfrog packaging

