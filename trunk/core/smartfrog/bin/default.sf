/** (C) Copyright 1998-2003 Hewlett-Packard Development Company, LP

Disclaimer of Warranty

The Software is provided "AS IS," without a warranty of any kind. ALL
EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES,
INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE, OR NON-INFRINGEMENT, ARE HEREBY
EXCLUDED. SmartFrog is not a Hewlett-Packard Product. The Software has
not undergone complete testing and may contain errors and defects. It
may not function properly and is subject to change or withdrawal at
any time. The user must assume the entire risk of using the
Software. No support or maintenance is provided with the Software by
Hewlett-Packard. Do not install the Software if you are not accustomed
to using experimental software.

Limitation of Liability

TO THE EXTENT NOT PROHIBITED BY LAW, IN NO EVENT WILL HEWLETT-PACKARD
OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR
FOR SPECIAL, INDIRECT, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES,
HOWEVER CAUSED REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF
OR RELATED TO THE FURNISHING, PERFORMANCE, OR USE OF THE SOFTWARE, OR
THE INABILITY TO USE THE SOFTWARE, EVEN IF HEWLETT-PACKARD HAS BEEN
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. FURTHERMORE, SINCE THE
SOFTWARE IS PROVIDED WITHOUT CHARGE, YOU AGREE THAT THERE HAS BEEN NO
BARGAIN MADE FOR ANY ASSUMPTIONS OF LIABILITY OR DAMAGES BY
HEWLETT-PACKARD FOR ANY REASON WHATSOEVER, RELATING TO THE SOFTWARE OR
ITS MEDIA, AND YOU HEREBY WAIVE ANY CLAIM IN THIS REGARD.

*/

#include "org/smartfrog/services/display/components.sf"
#include "org/smartfrog/services/trace/components.sf"
#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/management/components.sf" 


// Default sfDaemon Display
DefaultDisplay extends  Display {
    nameDisplay "sfDaemon Display"; // Window Title
    positionDisplay "NE";         // Window position: North-West
    fontSize 12;                  // Display font size
    redirectStd true;             // Redirect std output and error to this wind.
    showIP true;                  // Show IP address in window title
    showSfProcess true;           // Show sfProcess name in  window title
    terminateSFProcessOnExit true; // Terminates sfDaemon when window is closed
};

DefaultManagementDisplay extends DeployManagement { 
    nameDisplay "sfDaemon Management Display"; // Window Title
    positionDisplay "NE";         // Window position: North-West
    redirectStd true;             // Redirect std output and error to this wind.
    showIP true;                  // Show IP address in window title
    showSfProcess true;           // Show sfProcess name in  window title
    terminateSFProcessOnExit true; // Terminates sfDaemon when window is closed
    widthDisplay 800;
    heightDisplay 600;
    fontSize 12;                  // Display font size
    root LAZY PROCESS;
}


DisplayTrace extends TraceDisplay{
  nameDisplay "Trace info (Exit:ALT+F4)";
  formatMsg   true;
  stepTrace true; // Should ask for confirmation before stepping through?
}

DefaultCompound extends Compound {
    sfProcessComponentName "sfDefault";
    display extends DefaultDisplay;
}

DefaultManagementCompound extends DefaultCompound { 
    display extends DefaultManagementDisplay;
}

DefaultTraceDisplayCompound extends DefaultCompound {
    displayTrace extends DisplayTrace;
    trace extends Trace{ // Component lifecycle trace notification
       outputMsg LAZY ATTRIB displayTrace;
    }
}

DefaultTraceCompound extends DefaultCompound {
    trace extends Trace; // Component lifecycle trace notification
    //outputMsg LAZY HOST localhost:rootProcess:sfDefault:display;
}


//  To enable Daemon with SmartFrog Debugger 
//  Uncoment next lines to use it.
// #include "org/smartfrog/services/sfdebugger/components.sf"
// DefaultDebuggerCompound extends Compound {
//    sfProcessComponentName "sfDefault";
//    display extends DefaultDisplay;
//    trace extends TraceDebugger;
// }

sfConfig extends DefaultCompound;

// Daemon Display with management console
 sfConfig extends DefaultManagementCompound;

// Alternative default compound with persitance pattern enabled
// Uncoment next line to use it.
//sfConfig extends DefaultPersistentCompound;

// Alternative default compound with tracing or/and log to file enabled.
// Uncoment next line to use it.
//  stepTrace true; // Should ask for confirmation before stepping through?
//sfConfig extends DefaultTraceDisplayCompound{ displayTrace:stepTrace true;}
//sfConfig extends DefaultTraceCompound;

// Alternative default compound with SmartFrog Debugger enabled
// Uncoment next lines to use it.
// #include "org/smartfrog/services/sfdebugger/components.sf"
// DefaultDebuggerCompound extends Compound {
//    sfProcessComponentName "sfDefault";
//    display extends DefaultDisplay;
//    trace extends TraceDebugger;
// }
//
//sfConfig extends DefaultDebuggerCompound;
