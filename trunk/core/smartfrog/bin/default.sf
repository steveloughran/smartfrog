/** (C) Copyright 1998-2007 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/services/display/components.sf"
#include "org/smartfrog/services/trace/components.sf"
#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/management/components.sf" 


// Default sfDaemon Display
DefaultDisplay extends  Display {
    nameDisplay "sfDaemon Display"; // Window Title
    positionDisplay "NE";         // Window position: North-West
    fontSize 12;                  // Display font size
    redirectStd true;             // Redirect std output and error to this wind.
    showIP true;                  // Show IP address in window title
    showSfProcess true;           // Show sfProcess name in  window title
    terminateSFProcessOnExit true; // Terminates sfDaemon when window is closed
};

DefaultManagementDisplay extends DeployManagement { 
    nameDisplay "sfDaemon Management Display"; // Window Title
    positionDisplay "NE";         // Window position: North-West
    redirectStd true;             // Redirect std output and error to this wind.
    showIP true;                  // Show IP address in window title
    showSfProcess true;           // Show sfProcess name in  window title
    terminateSFProcessOnExit true; // Terminates sfDaemon when window is closed
    widthDisplay 800;
    heightDisplay 600;
    fontSize 12;                  // Display font size
    root LAZY PROCESS;
}


DisplayTrace extends TraceDisplay{
  nameDisplay "Trace info (Exit:ALT+F4)";
  formatMsg   true;
  stepTrace true; // Should ask for confirmation before stepping through?
}

DefaultCompound extends Compound {
    sfProcessComponentName "sfDefault";
    display extends DefaultDisplay;
}

DefaultManagementCompound extends DefaultCompound { 
    display extends DefaultManagementDisplay;
}

DefaultTraceDisplayCompound extends DefaultCompound {
    displayTrace extends DisplayTrace;
    trace extends Trace{ // Component lifecycle trace notification
       outputMsg LAZY ATTRIB displayTrace;
    }
}

DefaultTraceCompound extends DefaultCompound {
    trace extends Trace; // Component lifecycle trace notification
    //outputMsg LAZY HOST localhost:rootProcess:sfDefault:display;
}


//  To enable Daemon with SmartFrog Debugger 
//  Uncoment next lines to use it.
// #include "org/smartfrog/services/sfdebugger/components.sf"
// DefaultDebuggerCompound extends Compound {
//    sfProcessComponentName "sfDefault";
//    display extends DefaultDisplay;
//    trace extends TraceDebugger;
// }

sfConfig extends DefaultCompound;

// Daemon Display with management console
 sfConfig extends DefaultManagementCompound;

// Alternative default compound with persitance pattern enabled
// Uncoment next line to use it.
//sfConfig extends DefaultPersistentCompound;

// Alternative default compound with tracing or/and log to file enabled.
// Uncoment next line to use it.
//  stepTrace true; // Should ask for confirmation before stepping through?
//sfConfig extends DefaultTraceDisplayCompound{ displayTrace:stepTrace true;}
//sfConfig extends DefaultTraceCompound;

// Alternative default compound with SmartFrog Debugger enabled
// Uncoment next lines to use it.
// #include "org/smartfrog/services/sfdebugger/components.sf"
// DefaultDebuggerCompound extends Compound {
//    sfProcessComponentName "sfDefault";
//    display extends DefaultDisplay;
//    trace extends TraceDebugger;
// }
//
//sfConfig extends DefaultDebuggerCompound;
