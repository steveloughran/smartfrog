/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/filesystem/components.sf"

/**
 * This component provides a list of files that match a pattern.
 * It is somewhat remiscent of an Ant fileset, but it does not expose the baseDir concept
 * of that type to the remote callers (who therefore cannot make assumptions that the list of files
 * return share a common root directory.
 *
 * Also, it uses full Java Regexp syntax for patterns, not any wild card simplification.
 * Consult http://java.sun.com/javase/6/docs/api/java/util/regex/Pattern.html for the details.
 * Here are some examples
 *  "\\w+.txt"   -any word (A-Za-z0-9).txt
 *  "\\w*.txt"   -any word (A-Za-z0-9).txt, or ".txt"
 *
 */

 FilesSchema extends Schema {
    files extends OptionalCD;
    dir extends OptionalFilenameType;
    pattern extends OptionalString;
    //should name checks be case sensitive or not
    caseSensitive extends OptionalBoolean;
    //should hidden files be included
    includeHiddenFiles extends OptionalBoolean;
    // This is a count of files. If set to a number >=0, it asserts how many files are expected.
    // If clear, or negative it is set on deployment as a log of how many files were found.
    fileCount extends OptionalInteger;

    /**
     * This is a count of files. If set, the minumum number of files expected
     */
    minFileCount extends OptionalInteger;

    /**
     * This is a count of the max number of files that the pattern should match. If <0, there is no limit.
     */
    maxfileCount extends OptionalInteger;
  }
  
Files extends Prim {

  sfClass "org.smartfrog.services.filesystem.files.FilesImpl";
  filesSchema extends FilesSchema;
  /**
   *
   */
  pattern "\\w+";
  includeHiddenFiles false;
  caseSensitive true;
  fileCount -1;
  minFileCount -1;
  maxfileCount -1;
  //fileSet; //created at runtime
  //fileSetString; //created at runtime and using local platform path.separator
}