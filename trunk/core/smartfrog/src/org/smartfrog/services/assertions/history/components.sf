/** (C) Copyright 2007 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/components.sf"

/**
 * the history component can build up a history
 */

History extends Prim {
  sfClass "org.smartfrog.services.assertions.history.HistoryImpl";
}


/**
 * this component logs a message when deployed, started, and terminated
 * if the specific message string is empty, it is not logged.
 */

HistoryLog extends Prim {
  sfClass "org.smartfrog.services.assertions.history.HistoryLogImpl";
  sfShouldTerminate "true";
  history TBD;
  deployMessage "";
  startMessage "";
  terminateMessage "";
}


/**
 * a component that checks for a logged message when deployed
 */

HistoryLogAssertion extends Prim {
  sfClass "org.smartfrog.services.assertions.history.HistoryLogAssertion";
  sfShouldTerminate "true";
  history TBD;
  message TBD;
  //Optional : errorText;
  //errorText
}

/**
 * assert that there are two events, message1 being logged before message2
 */
HistoryAssertOrderedMessages extends Prim {
  sfClass "org.smartfrog.services.assertions.history.HistoryAssertOrderedMessages";
  sfShouldTerminate "true";
  history TBD;
  message1;
  message2;
}

