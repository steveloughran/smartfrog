/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/components.sf"
#include "/org/smartfrog/predicates.sf"
#include "org/smartfrog/services/display/components.sf"

/**
 * A basic deployment trace component.
 * Displays a message indicating the phases every component goes through.
 * See example.sf for use.
 */


Trace extends Prim {
        sfClass "org.smartfrog.services.trace.SFTrace";
    // set to false if you want to switch date, process and host displays off the messages
    verbose true;
     
   // future improvement: output per Hook, no need for now.
        //outputMsg LAZY PARENT:display; // for printing Trace messages!
   //Active Hooks. By default they are active
        //deployHook    false;
        //startHook     false;
        //terminateHook false;

    traceSchema extends Schema {

        //this is the axis configuration file for a service
        verbose extends OptionalBoolean;

        //destination
        outputMsg extends OptionalCD;

        //log on deploy
        deployHook    extends OptionalBoolean;

        //log on startup
        startHook     extends OptionalBoolean;

        //log on terminate
        terminateHook extends OptionalBoolean;
    }

}

// TraceDisplay component
// Extension of Display to show a tree of components with info got using SFTrace
// Same parameters as sfServices.display.
TraceDisplay extends Display {
      sfClass "org.smartfrog.services.trace.SFTraceDisplay";
      nameDisplay "SF Trace Display (Exit: alt+F4 )"; //Window Title
      positionDisplay "SW"; //Default C. (also N, S, SE, ...)
      redirectStd false; //Redirect System.out,.in,.err
      screenEditable false; //Editable?
}
// end TraceDisplay




