
Dependency extends Prim {
     sfClass "org.smartfrog.services.dependencies.statemodel.dependency.Dependency";
     sfUpdatable true;
}

State extends Prim {
     sfClass "org.smartfrog.services.dependencies.statemodel.state.State";
     sfUpdatable true;

     threadpool LAZY PROCESS:threadpool; // default place for the threadpool
     model LAZY ROOT;

     // the next three will be replaced by attribute tagging when implemented!
     stateData [];   // which of my attributes do I needs to know as a consistent set
     stateListen []; // which of my attributes do I needs to be informed when they change
     stateNotify []; // what attributes will I will inform the system when I change them
}

Composite extends Compound {
     sfClass "org.smartfrog.services.dependencies.statemodel.state.Composite";
     sfUpdatable true;

     threadpool LAZY PROCESS:threadpool; // default place for the threadpool

     inputConnectors extends Compound {
        sfUpdatable true;
     }
     outputConnectors extends Compound {
        sfUpdatable true;     
     }
}

NWayComposite extends Composite {
     sfClass "org.smartfrog.services.dependencies.statemodel.state.NWayComposite";
     sfUpdatable false;

     template TBD;
     instances TBD; // either a number or a component description containing named component descriptions of paramter data
}


Model extends Composite {
     sfClass "org.smartfrog.services.dependencies.statemodel.state.Model";

     threadpool LAZY PROCESS:threadpool; // default place for the threadpool
     run true; // set to false if you do not want the model to generate new notification sweeps, true if do
}

ModelTerminator extends State {
    sfClass "org.smartfrog.services.dependencies.statemodel.modeltermination.ModelTermination";
    stateData ["required"];
    stateListen ["required"];

    toTerminate LAZY ROOT;
    detachFirst false;
    required TBD;
}

AndConnector extends Prim {
    sfClass "org.smartfrog.services.dependencies.statemodel.connector.AndConnector";
    sfUpdatable true;
}

OrConnector extends Prim {
    sfClass "org.smartfrog.services.dependencies.statemodel.connector.OrConnector";
    sfUpdatable true;
}

NorConnector extends Prim {
    sfClass "org.smartfrog.services.dependencies.statemodel.connector.NorConnector";
    sfUpdatable true;
}

NandConnector extends Prim {
    sfClass "org.smartfrog.services.dependencies.statemodel.connector.NandConnector";
    sfUpdatable true;
}

