#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/dependencies/statemodel/components.sf"
#include "org/smartfrog/services/dependencies/threadpool/components.sf"

ManagedEntity extends State {
   sfClass "org.smartfrog.services.dependencies.examples.ManagedEntity";

   created false;
   removed false;
   createdprev true;
   removedsucc true;
   name "default";
      
   stateListen ["createdprev", "removedsucc"];
   stateData ["createdprev", "removedsucc", "created", "removed", "name"];
   stateNotify ["created", "removed"];
}

createdDependency extends Dependency {
   enabled LAZY on:created;
   relevant (! LAZY by:created);
}

removedDependency extends Dependency {
   enabled LAZY on:removed;
   relevant LAZY by:created;
}
 
sfConfig extends Model {
   run true;

   foo0 extends ManagedEntity{
      name "foo0";
      removedsucc LAZY foo1:removed;  
   }

   foo1 extends ManagedEntity{
      name "foo1";
      createdprev LAZY foo0:created;
      removedsucc LAZY foo2:removed;
   }
   
   foo2 extends ManagedEntity{
      name "foo2";
      createdprev LAZY foo1:created; 
   }

   finished extends ModelTerminator {
      required LAZY foo0:removed;
   }

   foo0Created extends createdDependency {
      on LAZY foo0;
      by LAZY foo1;
   }

   foo1Created extends createdDependency {
      on LAZY foo1;
      by LAZY foo2;
   }

   foo2Removed extends removedDependency {
      on LAZY foo2;
      by LAZY foo1;
   }

   foo1Removed extends removedDependency {
      on LAZY foo1;
      by LAZY foo0;
   }

}