/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

/**
 * This component is an example of use of Counter component.
 */

/**
 * Include the core smartfrog components.
 */
#include "org/smartfrog/components.sf"

/**
 * Include the Counter component.
 */
#include "org/smartfrog/examples/counter/components.sf"

SchemalessCounter extends Counter {
    counterSchema extends Schema;
}
/**
 * Counter example 2 creates a component "testLevel1" that has 3 sub-components  * which are examples of use of Counter component.
 */


/** 
 * sfConfig is the special attribute that is deployed by SFSystem.
 * Here it is defined to contain testLevel1.
 */
sfConfig extends Compound {
 /** 
  * The component "testLevel1" is a Compound component i.e. it is a group of 
  * primitive components that have a shared lifecycle.  
  */
 testLevel1 extends Compound {
      /**
       * This component is an example of Counter component.
       * It generates a counter between 1 and 4.
       * This is a basic primitive component.
       */
      counterToSucceed extends Counter {
              /**
               * Mandatory attribute "limit" is defined.
               */        
              limit 4; 
       };

      /**
       * This component is an example of Counter component.
       * It fails because of wrong type for mandatory attribute "limit".
       * This is a basic primitive component.
       */
      counterToFailWrongType extends SchemalessCounter {
              /**
               * Mandatory attribute "limit" is defined with wrong type.
               * It will trigger an exception.
               */        
              limit "hola"; 
       };
      
      /**
       * This component is an example of Counter component.
       * It fails because of missing mandatory attribute "limit".
       * This is a basic primitive component.
       */
      counterToFailMissingLimit extends SchemalessCounter { 
               /**
                * Mandatory attribute "limit" is missing. 
                * It will trigger an exception.
                */
      };
   }
}


