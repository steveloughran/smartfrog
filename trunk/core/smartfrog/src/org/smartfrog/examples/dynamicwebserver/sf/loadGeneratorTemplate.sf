/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/components.sf"
#include "/org/smartfrog/functions.sf"
#include "/org/smartfrog/predicates.sf"


#include "/org/smartfrog/examples/dynamicwebserver/stresstest/components.sf"
#include "/org/smartfrog/examples/dynamicwebserver/logging/components.sf"

/*
 * The following global values must be defined in the included location 
 * for this file, otherwise errors will be thrown.
 */

// the host on which the load generators will run
stressTestHost     TBD;

// the host on which the load balancer will run
balancerHost       TBD;

// the cgi script to use for loading the web servers
loadingCgi         TBD;

/*
 * Definition of the load generators and control gui
 * These components generate load for the web servers
 * and so trigger the creation of new web servers
 */


// a single load generator
aLoadGenerator extends StressTester {
    //logTo LAZY PARENT:logTo;
    controlGui LAZY PARENT:controlGui;

    host PARENT:host;
    port PARENT:port;
    page PARENT:page;

    factor   PARENT:factor;
    frequncy PARENT:frequency;

    verbose PARENT:verbose;
}

// a commonly-parameterised set of load generators
LoadGeneratorSet extends Compound {
    logTo      LAZY PARENT:logTo;
    controlGui LAZY PARENT:controlGui;

    host PARENT:host;
    port PARENT:port;
    page PARENT:page;

    factor   PARENT:factor;
    frequency PARENT:frequency;

    verbose PARENT:verbose;

    l0  extends aLoadGenerator;
    l1  extends aLoadGenerator;
    l2  extends aLoadGenerator;
    l3  extends aLoadGenerator;
    l4  extends aLoadGenerator;
    l5  extends aLoadGenerator;
    l6  extends aLoadGenerator;
    l7  extends aLoadGenerator;
    l8  extends aLoadGenerator;
    l9  extends aLoadGenerator;
    l10 extends aLoadGenerator;
    l11 extends aLoadGenerator;
    l12 extends aLoadGenerator;
    l13 extends aLoadGenerator;
    l14 extends aLoadGenerator;
}


// the overall template - the gui and the set of load generators
LoadGeneratorTemplate extends Compound {
    // sfLivenessDelay 0;

    factor          30;
    frequency       0;
    verbose         false;

    host balancerHost;
    port 80;
    page loadingCgi;


    logger extends Logger {
        verbose PARENT:verbose;
    }

    stressControlGui extends StressControlGui {
        verbose PARENT:verbose;
        // logTo        LAZY logger;
        name         "stress test load control";
        initialValue frequency;
        id           1;
    }

    loadGenerators extends LoadGeneratorSet {
	// logTo LAZY logger;
	sfProcessHost stressTestHost;
        controlGui LAZY stressControlGui;
    }
}


