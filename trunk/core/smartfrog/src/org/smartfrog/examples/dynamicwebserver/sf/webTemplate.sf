/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/examples/dynamicwebserver/sf/installApacheIfNeeded.sf"
#include "/org/smartfrog/examples/dynamicwebserver/monitor/components.sf"
#include "/org/smartfrog/examples/dynamicwebserver/apache/components.sf"
#include "/org/smartfrog/examples/dynamicwebserver/gui/graphpanel/components.sf"

/*
 * The following global values must be defined in the include location 
 * for this file, otherwise errors will be thrown.
 *
 * The Apache tarballs locations - either leave as is, or modify to
 * suit local installation having first copied the tar files
 */

// web server and port at which to find the tarballs
ServerHost         TBD;
ServerPort         TBD;

// the three tarball locations are on this server...

// the Apache distribution (v1.3.6)
ApacheTarLocation  TBD;

// some cgi scripts to install (used by the load generators etc)
cgiScriptsLocation TBD;

// some web pages to install (useful for proving that Apache is installed)
webPagesLocation   TBD;


/*
 * The main web server templates
 */


CoreWebServer extends Compound {
    polling 5;

    server extends Apache {
        name           "web server";
        interCheckTime 5;
    }

    threadMeter extends Meter {
        dataSource          LAZY server;
        pollingPeriod       polling;
        dataDisplayed       "httpd threads";
	frameTitle          "apache web server";
        maxY                50;
        minY                0;
        lowerThresholdValue 5;
        gridStepY           5;
    }

    cpuMonitor extends CpuMonitor {
        delay  polling;
    }

    graph extends Graph {
        dataSource      LAZY cpuMonitor;
        pollingPeriod   polling;
        panelWidth      600;
        panelHeight     200;
        dataDisplayed   "cpu usage";
	frameTitle      "apache web server";
        maxY            100;
        minY            0;
        gridStepY       10;
    }
}


WebServer extends Sequence {
    actions extends LAZY {
        install extends Install {
	    // for simplicity, we will assume this is being defined in a context
	    // with these attributes defined... probably in the root
            ServerHost         PARENT:ATTRIB ServerHost;
	    ServerPort         PARENT:ATTRIB ServerPort;

            ApacheTarLocation  PARENT:ATTRIB ApacheTarLocation;
            cgiScriptsLocation PARENT:ATTRIB cgiScriptsLocation;
            webPagesLocation   PARENT:ATTRIB webPagesLocation;
        }
        server extends CoreWebServer;
    }
}

WebServerTemplate extends Compound {
    sfProcessComponentName "webServer";
    server extends WebServer;
}
