/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

/**
 * Includes the definition of schemas.
 */
#include "/org/smartfrog/predicates.sf"
#include "/org/smartfrog/components.sf"

/**
 * WARNING: these examples are not deployable - they are merely to demonstrate
 * the use of the schemas.
 */

/**
 * The basis for the tests.
 */

fooSchema extends Schema {
    sfSchemaDescription "foo";

    y extends String { description "string attribute to test types and presence"; }
    z extends Integer { description "integer attribute to test types and presence"; }
    x extends OptionalInteger { description "optional integer attribute"; }
}

foo extends {
    schema extends fooSchema;
    z 23;
}

newFoo extends foo {
   schema:a extends String{ binding "lazy"; };
   a LAZY y;
}



/**
 * The tests.
 */

/**
 * OK tests.
 */

OKtest1 extends Compound {    // x not present
    bar extends Compound {
       myFoo extends newFoo {
          y "hello";
       }
    }
}


OKtest2 extends Compound {    // x present, lazy
    bar extends Compound {
       myFoo extends newFoo {
          y "hello";
          x z;
       }
    }
}

OKtest3 extends Compound {    // x present, lazy, wrong type not checked statically!!
    bar extends Compound {
       myFoo extends newFoo {
          y "hello";
          x LAZY y;
       }
    }
}


/**
 * Errors of various kinds.
 */

errtest1 extends Compound {  // y wrong class
    bar extends Compound {
       myFoo extends newFoo {
          y 42;
       }
    }
}

errtest2 extends Compound {  // a not lazy
    bar extends Compound {
       myFoo extends newFoo {
          a y;
          y "hello";
       }
    }
}

errtest3 extends Compound {   // y missing
    bar extends Compound {
       myFoo extends newFoo;
    }
}

errtest4 extends Compound {   // x added, wrong class
    bar extends Compound {
       myFoo extends newFoo {
          y "hello";
          x y;
       }
    }
}

/**
 * This example shows the use of schemas in SmartFrog System.
 */

sfConfig extends OKtest1;
