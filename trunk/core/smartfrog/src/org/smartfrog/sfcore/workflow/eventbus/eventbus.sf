/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/predicates.sf"

EventSchema extends Schema {
    sendTo  extends OptionalCD;
    registerWith extends OptionalCD;
}

EventPrim extends Prim {
    sfClass "org.smartfrog.sfcore.workflow.eventbus.EventPrimImpl";
    eventSchema extends EventSchema;
    sendTo  extends LAZY {}
    registerWith extends LAZY {}
}

EventCompoundSchema extends EventSchema {
    //the action to start         
    action extends OptionalCD;
    
        
    //there is an old style supported here that kicks in if there is any 
    //child called "actions". Do not name children this way unless you want
    //a different startup mechanism
    actions extends Optional;
    
}

EventCompound extends Compound {
    sfClass "org.smartfrog.sfcore.workflow.eventbus.EventCompoundImpl";
    eventCompoundSchema extends EventCompoundSchema;
    sendTo  extends LAZY {}
    registerWith extends LAZY {}

}
