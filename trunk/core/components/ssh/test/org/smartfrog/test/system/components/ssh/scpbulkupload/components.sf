/** (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/test/system/components/ssh/components.sf"

BulkUploadTestCompound extends SshTestProperties {

  //these are the directories
  tempdir extends TempDirWithCleanup {

  }

  temp1 extends TempFileWithCleanup {
       dir LAZY tempdir;
       suffix ".txt";
       text "t1";

  }

  temp2  extends temp1;
  temp3  extends temp1 {
    suffix ".tmp";
  }

    passwordProvider extends InlinePassword {
        password SshTestProperties:password;
    }

}

/**
 * now a test from that
 */


testBulkUpload extends ExpectDeploy {
  description "this logs in and uploads some files";
  condition extends SshTestPropertiesSet;

  action extends BulkUploadTestCompound {

  }

  tests extends Sequence {

  upload extends ScpBulkUpload {

    remoteDir SshTestProperties:remoteDir ;
    dir LAZY PARENT:PARENT:action:tempdir;
    passwordProvider LAZY PARENT:PARENT:action:passwordProvider;
    pattern "\\w+.txt";
    host SshTestProperties:host;
    username SshTestProperties:username;
    timeout SshTestProperties:timeout;
    sfShouldTerminate true;

  }

  assertCount extends Assert {
      attribute "transferCount";
      attributeEquals "2";
      //what if the component is unreachable?
      reference LAZY upload;
  }


}

}

