/** (C) Copyright 2007 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/test/system/components/ssh/components.sf"

  // Host is mising
PasswordSshExec extends SSHSessionInlinePassword {
    password "secret";
    host testvalues:localhost;
    username "smartfrog";
 }

tcn91 extends SSHSessionInlinePassword {
  description "no host";
  password "secret";
  commands ["mkdir Sep15", "mkdir sep15"];
  username "smartfrog";
};

tcn91_missing_host  extends ExpectDeployFailure {
  description "no host";

  action tcn91;

  exceptions [
      [SmartFrogExceptionNames:EXCEPTION_DEPLOYMENT,""],
      [SmartFrogExceptionNames:EXCEPTION_LINKRESOLUTION,
       "non-optional attribute 'host' is missing"]
    ];
}

tcn92  extends SSHSessionInlinePassword {
  description "missing username attribute";
  password "secret";
  host testvalues:localhost;
  commands ["mkdir Sep15", "mkdir sep15"];
};

tcn92_user_name_is_missing extends ExpectDeployFailure {
  description "missing username attribute";

  action tcn92;
  exceptions [
      [SmartFrogExceptionNames:EXCEPTION_DEPLOYMENT,""],
      [SmartFrogExceptionNames:EXCEPTION_LINKRESOLUTION,
       "non-optional attribute 'username' is missing"]
    ];
}


tcn94_missing_password_file extends ExpectDeployFailure {
  description "missing password file";

  action extends SSHSessionPasswordFile {
    passwordFile "this-file-does-not-exist-probably-0a1b2c3d.txt";
    username "smartfrog";
    host testvalues:localhost;
    commands [];
 };
  //NoPasswd FilePassword:ERROR_MISSING_PASSWORD_FILE;
  NoPasswd "Missing password file: ";

  exceptions [
      [SmartFrogExceptionNames:EXCEPTION_LIFECYCLE,""],
      [SmartFrogExceptionNames:EXCEPTION_DEPLOYMENT,NoPasswd]
    ];
}

/**
 * bind to a test SSH server
 */
SshTestServer extends SSHSessionInlinePassword {
    password SshTestProperties:password;
    host SshTestProperties:host;
    username SshTestProperties:username;
    sfShouldTerminate true;
    timeout SshTestProperties:timeout;
 }

SSHTestKeySession extends SSHSessionPublicKey {
  sfShouldTerminate true;
  keyFile SshTestProperties:privateKeyPath;
  host SshTestProperties:host;
  username SshTestProperties:username;
  timeout SshTestProperties:timeout;
}

testSshLogin extends ExpectTerminate {
  description "this logs in and prints 'hello' out";
  condition extends SshTestPropertiesSet;
  exitType EXIT_TYPE_NORMAL;
  commandList [
      "echo hello",
      "exit"];
  action extends SshTestServer {
    commands commandList;
  }
}

testSshLoginPrivateKey extends testSshLogin {
  description "this logs in and prints 'hello' out using a private key";
  condition extends SshTestPrivateKeySet;
  action extends SSHTestKeySession {
    commands commandList;
  }
}


AUTH_FAIL "Auth fail";
AUTH_CANCEL "Auth cancel";
//the error seems to vary, but auth is always there
BAD_LOGIN_FAILURE "Auth";

testLoginBadUser extends testSshLogin {
  description "set an invalid user and expect to get a diagnostics message";
  action:username "Not a valid user";
  exitType EXIT_TYPE_ABNORMAL;
  exceptions [
//    [SmartFrogExceptionNames:EXCEPTION_LIFECYCLE,"Unable to authenticate"],
    ["com.jcraft.jsch.JSchException",BAD_LOGIN_FAILURE ]
  ];
}

testLoginBadPassword extends testSshLogin {
  description "set an invalid password and expect to get a diagnostics message";
  action:password "Not a valid password";
  exitType EXIT_TYPE_ABNORMAL;
  exceptions [
//    [SmartFrogExceptionNames:EXCEPTION_LIFECYCLE,"wrong password"],
    ["com.jcraft.jsch.JSchException",BAD_LOGIN_FAILURE ]
  ];
}

testLoginBadAuthType extends testSshLogin {
  description "set an invalid user and expect to get a diagnostics message";
  action:username "Not a valid user";
  exitType EXIT_TYPE_ABNORMAL;
  action:authentication "something-unexpected";
}
