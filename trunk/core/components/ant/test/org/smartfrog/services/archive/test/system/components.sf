/* (C) Copyright 2009 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/services/ant/test/system/components.sf"
#include "/org/smartfrog/services/archives/components.sf"



FileSetupSequence extends Sequence {
  workDir PROPERTY test.work.dir;
  zipfile (workDir ++ "/testzip.zip");
  textfile (workDir ++ "/test-text-file.txt");
  
  createTextFile extends TextFile {
    filename textfile;
    text "example text";
    sfShouldTerminate true;
  }
}

CreateZipFileSequence extends FileSetupSequence {
  
  antRun extends AntWorkflowRun {
    sfShouldTerminate true;
    Zip extends zip {
      
      destfile zipfile;
      files extends fileset {
        file LAZY createTextFile:absolutePath;
      }
    }
  }
  
  //add an assert here that the file exists
  assertZipWorked extends AssertWorkflow {
    fileExists zipfile;
  }
}



testCreateZipFileSequence extends ExpectTerminate {
  
  action extends CreateZipFileSequence {
    
  
  }
}


UnzipSequence extends CreateZipFileSequence {
  
  unzip extends Unzip {
    filename LAZY zipfile;
    destDir (LAZY PROPERTY workDir);
  }
}

UnzipEmptySource extends FileSetupSequence {
  
  delZip extends SelfDeletingFile {
    filename LAZY zipfile:absolutePath;
  }
}

testUnzipSequence extends ExpectTerminate {
  
  action extends UnzipSequence;
  
   unzip extends Unzip {
    filename LAZY zipfile;
    destDir (LAZY PROPERTY workDir);
  }
}


testUnzipEmptySource extends ExpectDeployFailure {
  
  action extends UnzipEmptySource;
}
