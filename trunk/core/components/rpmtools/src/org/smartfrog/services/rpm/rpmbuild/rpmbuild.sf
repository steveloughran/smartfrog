/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
#include "/org/smartfrog/services/filesystem/components.sf"
#include "/org/smartfrog/services/os/runshell/components.sf"


Rpmbuild extends ExecuteProgram {

  /** the program to run. This would map to rpmbuild.exe on windows+cygwin */ 
  processName "rpmbuild";
  /*
   The RPM operation to run. Consult man rpmbuild or look at the BUILD_ options below
  */
  operation BUILD_ALL;
  printCommandOnFailure true;
  shellArguments arguments;
  arguments TBD;
  verbose false;
  //link to a spec file; must be under ${topdir}/SPECS/.

  specfile TBD;
  //top directory
  topdir TBD;

  //clean the build directory when run
  cleanBuildDir true;
  //remove the source data afterwards
  removeSource false;
  //remove the spec file afterwards/
  removeSpec false;

  /**
   * Flag to request that GPG is used to sign the RPMs afterwards
   */
  sign false;

  /**
   * Flag to turn off the build; the reduce this to a preflight operation
   */
  nobuild false;

  /**
  * a list of extra arguments for the shell to handle.
  */
  extraArguments [];


  /**
   * build up the list of arguments to pass in
   */
  arguments [
    operation,
    ("--datadir=" ++ datadir),
    ("--tmpdir=" ++ tmpdir),

    IF verbose THEN "-v" ELSE "" FI,
    IF cleanBuildDir THEN "--clean" ELSE "" FI,
    IF removeSource THEN "--rmsource" ELSE "" FI,
    IF removeSpec THEN "--rmspec" ELSE "" FI,
    IF sign THEN "--sign" ELSE "" FI,
    IF nobuild THEN "--nobuild" ELSE "" FI,
    "--define", ("_topdir" ++ topDir),
    extraArguments,

    ("SPECS/" ++ specFile)
  ];


  /**
   Build binary and source packages (after doing the %prep, %build, and %install stages).
   */
  BUILD_ALL "-ba";
  /**
   Build a binary package (after doing the %prep, %build, and %install stages).
   */
  BUILD_BINARY "-bb";
  /*
   Executes the "%prep" stage from the spec file. Normally this involves unpacking the sources
                 and applying any patches.
   */
  BUILD_PREPARE "-bp";
  /*
   Do the "%build" stage from the spec file (after doing the  %prep  stage).   This  generally
   involves the equivalent of a "make".
   */
  BUILD_MAKE "-bc";
  /**
   Do the "%install" stage from the spec file (after doing the %prep and %build stages).  This
   generally involves the equivalent of a "make install".
   */
  BUILD_INSTALL "-bi";
  /**
  Do a "list check".  The "%files" section from the spec file is macro expanded,  and  checks
  are made to verify that each file exists.
   */
  BUILD_LISTCHECK "-bl";
  /**
   Build just the source package.
   */
  BUILD_SOURCE "-bs";
}
