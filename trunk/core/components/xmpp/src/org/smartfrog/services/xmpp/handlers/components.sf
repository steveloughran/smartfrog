/** (C) Copyright 2006 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */


/**
 * executes the action once for every incoming message that matches the filter
 */
/*
XmppWorkflowHandler extends ActionCompound {
  listener TBD;
}*/


/**
 * a component that adds messages to the history
 */
HistoryPacketHandler extends XmppPacketHandler {
  sfClass "org.smartfrog.services.xmpp.handlers.HistoryPacketHandlerImpl";
  //a limit of -1 means "no limit"; anything else limits the size
  limit 100;
  //dump the history on termination
  dumpOnTerminate false;
}


/**
 * this component relays the message to someone else
 */
RelayHandler extends XmppMessageHandler {
  sfClass "org.smartfrog.services.xmpp.handlers.RelayHandlerImpl";
  //give the name of the recipient, or a list of recipients
  to TBD;
}


/*
 * this component echoes the message back
 */
RelayHandler extends XmppMessageHandler {
  sfClass "org.smartfrog.services.xmpp.handlers.EchoHandlerImpl";
  //give the name of the recipient, or a list of recipients
  to TBD;
}

HistoryAssertion extends WorkflowPrim {
 //a message to search for
 textRegexp TBD;
 sender "";
 //point to the history
 history TBD;
 sfClass "org.smartfrog.services.xmpp.handlers.HistoryPacketHandlerAssertionImpl"
 sfShouldTerminate true;
}