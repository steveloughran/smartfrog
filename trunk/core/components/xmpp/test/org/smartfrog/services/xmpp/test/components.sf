/** (C) Copyright 2007 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */

#include "/org/smartfrog/services/xmpp/components.sf"
#include "/org/smartfrog/sfcore/workflow/components.sf"
#include "/org/smartfrog/services/assertions/components.sf"

/**
 * There is a secret password to these logins that only team
 * members know
 */

xmpp.password OPTIONAL("") PROPERTY test.xmpp.password;
//xmpp.password.present IF (xmpp.password != "") THEN true ELSE false FI;
xmpp.password.present (xmpp.password != "");

IsXmppPresent extends BooleanValue {
  value xmpp.password.present;
}


  postMessageFrom1 extends GoogleChatClientWorkflow {
      to "smartfrog.two@gmail.com";
      login "smartfrog.one";
      password xmpp.password;
      message "hello, world";
  }

  listener2 extends GoogleChatListener {
      login "smartfrog.two";
      password xmpp.password;
  }

testGmailXmpp extends ExpectDeploy {
  condition extends IsXmppPresent;

  description "test xmpp deployment -requires test.xmpp.password to be set to the appropriate password";

  action extends Compound {
    listener extends listener2;
    historyPacketHandler extends HistoryPacketHandler {
      listener LAZY listener;
    }
  }

  undeployAfter 60000;

  tests extends Sequence {
    post1 extends postMessageFrom1;
    post2 extends postMessageFrom1 {
      message "second message";
    }
  }
}






