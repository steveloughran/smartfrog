/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */

/**
 * options for image size
 */
EC2ImageSizes extends DATA {
  SIZE_SMALL "m1.small";
  SIZE_LARGE "m1.large";
  SIZE_XL    "m1.xlarge";
  SIZE_MEDIUM_HCPU "c1.medium";
	SIZE_XLARGE_HCPU "c1.xlarge";
}

ImageInstance extends AwsAuthorizedWorkflowService, EC2ImageSizes {
  sfClass "org.smartfrog.services.amazon.ec2.EC2InstanceImpl";
  //this is the AMI of an image
  imageID TBD;
  sfShouldTerminate false;

  //shut down when we terminate?
  shutdown true;

  //instance types
  instanceType SIZE_SMALL;

  //user data
  userData "";

  //minimum number of instances
  minCount 1;
  //max number
  maxCount minCount;

  //set on deployment.
  //instance
  //instances []
}


/**
 * List instances belonging to a specific user
 * Images are listed on startup; this is a workflow component that terminates afterwards.
 * the min/max count are there for testing 

 */
ListInstances extends AwsAuthorizedWorkflowService {
  sfClass "org.smartfrog.services.amazon.ec2.ListInstancesImpl";
  sfShouldTerminate true;
  //this is the AMI of an image. Empty string is don't care
  imageID "";
  //string list of instances. Can be empty
  instances [];
  //minimum number of instances
  minCount -1;
  //max number
  maxCount -1;

  //time in millis to wait until the minCount has been reached. -1 means forever, 0 for never
  timeout 30000;
  //polling frequency.
  pollInterval 1000;

  state STATE_ANY;

  STATE_ANY "";
  STATE_RUNNING "running";
  STATE_PENDING "pending";
  STATE_SHUTTING_DOWN "shutting-down";
  STATE_TERMINATED "terminated";
}


/**
 * Kill instances belonging to a specific user.
 * You can set a limit on how many you want left alive afterwards.
 * Images are killed on startup; this is a workflow component that terminates afterwards
 */

KillInstances extends ListInstances {
  sfClass "org.smartfrog.services.amazon.ec2.KillEC2InstanceImpl";
  //this is the AMI of an image. Empty string is don't care
  imageID "";
  //string list of instances. Can be empty
  instances [];

  //number of instances to leave running
  //leaveRunning 0;
}


