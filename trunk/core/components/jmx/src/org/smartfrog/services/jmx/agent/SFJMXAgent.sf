/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
//#include "org/smartfrog/services/scripting/components.sf"
#include "org/smartfrog/services/jmx/mbean/mbean.sf"
#include "org/smartfrog/services/jmx/communication/Communicator.sf"

//#include "org/smartfrog/services/jmx/discovery/AdvertisingService.sf"
//#include "org/smartfrog/services/slp/components.sf"
//#include "org/smartfrog/services/jmx/discovery/DiscoveryService.sf"

///*** Definition of the SLP Advertising Service ***/
//
//SFAdvertisingService extends Compound {
//  da extends DALauncher {
//    gui "off";
//  }
//}
//
//SLPConnectorAdvertiser extends SLPAdvertiser {
//  useDA LAZY ATTRIB da:mslpRef;
//}
//
///**
// * To advertise a RMI Connector Server
// */
//RMIConnectorAdvertiser extends SLPConnectorAdvertiser {
//  sfAdvertisementServiceURL "service:jmx://localhost:3800/RMIConnectorServer";
//  sfAdvertisementAttributes extends LAZY {
//    protocol "rmi";
//  }
//}
//
///**
// * To advertise a HTTP Connector Server
// */
//HTTPConnectorAdvertiser extends SLPConnectorAdvertiser {
//  sfAdvertisementServiceURL "service:jmx://localhost:8081";
//  sfAdvertisementAttributes extends LAZY {
//    protocol "http";
//  }
//}
//
///**
// * To advertise a HTTP Connector Server with SSL support
// */
//HTTPSConnectorAdvertiser extends SLPConnectorAdvertiser {
//  sfAdvertisementServiceURL "service:jmx://localhost:8082";
//  sfAdvertisementAttributes extends LAZY {
//    protocol "https";
//  }
//}
//
///**
// * To advertise a CORBA Connector Server
// */
//IIOPConnectorAdvertiser extends SLPConnectorAdvertiser {
//  sfAdvertisementServiceURL "service:jmx://localhost:900";
//  sfAdvertisementAttributes extends LAZY {
//    protocol "iiop";
//  }
//}
//
//
//
///*** Definition of the SLP Discovery Service ***/
//SFDiscoveryService extends Compound {
//  eventHandler extends DiscoveryEventHandler;
//  collector extends resultsCollector;
//}
//
//DiscoveryEventHandler extends EventPrim {
//  sfClass "org.smartfrog.services.jmx.agent.DiscoveryEventHandler";
//  jmxAgent LAZY PARENT:PARENT;  // Pointer to the JMX Agent whose events need to be handled.
//                                // It might have any other path
//  results LAZY ATTRIB jmx;
//  objectNamePattern "*:*";
//}
//
//resultsCollector extends ResultsCollector {
//  sfServiceDescription extends LAZY {
//    sfServiceType "service:jmx";
//  }
//  threadType "keepLooking"; // never-ending thread
//  display false;
//  sendTo extends LAZY {
//    handler LAZY ATTRIB eventHandler; // all messages will be sent to the Agent EventHandler
//  }
//  sendDeregistration true;
//  sendURLEvent true;
//  sendAttributesEvent true;
//  slpResultsCollector:sendDeregistration PARENT:ATTRIB sendDeregistration;
//  slpResultsCollector:sendURLEvent PARENT:ATTRIB sendURLEvent;
//  slpResultsCollector:sendAttributesEvent PARENT:ATTRIB sendAttributesEvent ;
//}

/*** Definition of the SF JMX Agent ***/

SFJMXAgent extends Compound {
  sfClass "org.smartfrog.services.jmx.agent.SFJMXAgentImpl";
  master false; // By default this Agent is not a master.
                // If true, DiscoveryEventHandler will create a CascaderMBean for every Agent discovered.

 /**
  * Add here all those mbean-compliant SF components we need to manage
  */
  componentMBeans extends Compound {
    rmiConnectorServer extends RmiConnectorServer;
    htmlAdaptor extends HtmlAdaptor;
//    advertisingService extends SLPAdvertisingService;
    // httpConnectorServer extends HttpConnectorServer;    // It does not exist yet
    // httpsConnectorServer extends HttpsConnectorServer;  // It does not exist yet
    // iiopConnectorServer extends IiopConnectorServer;    // It does not exist yet
  }

 /**
  * Add here all those ComponentDescription from which to create an MBean
  */
  descriptionMBeans extends LAZY {
    xsltProccessor extends XSLTProcessor;
    relation extends RelationService;
    timer extends Timer;
    mlet extends MLet;
  }

 /**
  * Specify here all the SLPConnectorAdvertiser
  */
  // advertisingService extends SFAdvertisingService {
    // rmiAdvertiser extends RMIConnectorAdvertiser;
    // httpAdvertiser extends HTTPConnectorAdvertiser;    // It does not exist yet
    // httpsAdvertiser extends HTTPSConnectorAdvertiser;  // It does not exist yet
    // iiopAdvertiser extends IIOPConnectorAdvertiser;    // It does not exist yet
  // }


  /**
   * Uncomment for discovering other agents using SF Components
   */
  //discoveryService extends SFDiscoveryService;

}
