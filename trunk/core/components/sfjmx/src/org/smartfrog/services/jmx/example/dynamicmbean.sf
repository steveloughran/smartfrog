/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/examples/arithnet/netComponents.sf"
#include "org/smartfrog/services/jmx/components.sf"
#include "org/smartfrog/services/jmx/example/components.sf"


sfConfig extends Compound {

  /**
   * Component to register MBeans in a local JMX Agent
   */
  localMBeanDeployer extends MBeanDeployer {
    dynamicMBeans extends Compound {
      arithManagerMBean LAZY ATTRIB manager;
      leftGeneratorMBean LAZY ROOT:manager:leftGenerator;
      rightGeneratorMBean LAZY ROOT:manager:rightGenerator;
      printerMBean LAZY ROOT:manager:printer;
    }
  }

  /**
   * Component to register MBeans in a remote JMX Agent
   */
  remoteMBeanDeployer extends MBeanDeployer {
    sfAgentAddress "rmi://eb97201:3800/RMIConnectorServer"; // Register in a remote JMX Agent
    dynamicMBeans extends Compound {
        negateMBean LAZY ATTRIB negate;
        plusMBean LAZY ATTRIB plus;
    }
  }

  manager extends ArithmeticManager {
    // Link managed values to those stored in dataStore. This attributes will be visualized through the ModelMBean created by the JMXIntrospector
    leftValue LAZY ATTRIB leftGenerator:number;
    rightValue LAZY ATTRIB rightGenerator:number;
    result LAZY ATTRIB printer:result;

    // Link generator outputs to operator inputs
    leftGenerator:outputs:value:to LAZY ATTRIB plus:inputs:lhs;
    rightGenerator:outputs:value:to LAZY ATTRIB negate:inputs:value;
  }

  // Negate operator
  negate extends Negate {
    outputs:value:to LAZY ATTRIB plus:inputs:rhs;
  }

  // Addition operation
  plus extends Plus {
    outputs:value:to LAZY ATTRIB manager:printer:inputs:printVal;
  }

}
