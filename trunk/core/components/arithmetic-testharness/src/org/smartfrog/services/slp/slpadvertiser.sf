#include "org.smartfrog.sfcore/components.sf"
#include "org.smartfrog.sfcore.workflow.components.sf"

/**
 * A generic advertiser (service agent) to advertise any kind of service.
 * - The service URL should either conform to the url scheme (http, ftp, etc)
 * or, preferably, to the service:url scheme.
 * ex : service:MyService://hostname/information_location
 * See 'sfSLP userManual' or www.srvloc.org for more details on SLP's url scheme.
 *
 * - As an EventPrim this component accepts two messages:
 * 	"register" triggers the described service advertisement,
 * 	"deregister" triggers the described service deregistration. 
 */

SLPAdvertiser extends EventPrim {
	sfClass "org.smartfrog.services.slp.SFSLPAdvertiser";
	sfAdvertisementScopes "DEFAULT"; 	// the scopes in which you want to advertise the component (comma-separated list)
	sfAdvertisementServiceURL ""; 		// the complete SLP URL you want to advertise.
	sfLocale "en"; 				// the locale in which you want this service to be advertised 
						// (coma-separated list, ex :"en,fr,af");
	sfAdvertisementLifetime 65535; 		// service advertisement lifetime
	sfAdvertisementAttributes extends {}	// attribute - value pairs you want for the service
	//useDA LAZY myDA:mslpRef;   		// replace 'myDA' by the DA Reference if it is part of your system.
	advertiseOnStart true; 	// if set to true, the above described service is register during the sfStartPhase 
					// set to false if you want to trigger it later.
	oneShot false; 	// Only looked up if 'advertiseOnStart' is true. Set to true if you want the component to detach 
				// and terminate after the advertisement is done during the sfStart phase
}
