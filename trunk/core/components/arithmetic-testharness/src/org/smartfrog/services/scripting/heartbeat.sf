/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

/**
 * This components prints a heartbeat on the stdout, every 1000 ms.
 * The period can be modified .
 * The thread stops when the component terminates.
 */

HeartBeat extends ScriptPrim {
	beat 1000;

	attributesAsVariables true;
	x true;
	sfDeployCode ##
	  // build the thread
	  deathClock() {
		run() {
		  while(global.x){  // refer to global, otherwise x is reset each evaluation.
			Thread.sleep( ((Integer) beat ).intValue());
			System.out.println(prim.sfCompleteName()+ " beat");
                         }
	       	}
		stop() {
			global.x = false;
		}
        	return this;
    	  }
	  // and launch it...
   	  deathClock = deathClock();
	  prim.interpreter.set("deathClock",deathClock);
    	  new Thread( deathClock ).start();
               #;
	sfTerminateWithCode ##
	  deathClock.stop();
	#;


}


