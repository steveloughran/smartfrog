/** (C) Copyright 1998-2005 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/


#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/persistence/components.sf"
// #include "org/smartfrog/services/persistence/storage/berkelydb/components.sf"
BDBStorage extends DATA Storage {
    wfStorageClass "org.smartfrog.services.persistence.storage.berkelydb.StorageImpl";
    wfStorageRepository "c:/tstdb/";
}

/**
 * ER = Embedded Rebind (bdb storage + rebind persistence)
 */
ERComponent extends RComponent {
    sfPersistenceModelConfig RebindPersistence;
    wfStorageConfigData      BDBStorage;
}

Myprim extends ERComponent{
    sfClass "org.smartfrog.services.persistence.example.RMIServer";
    name TBD;
    neighbor TBD;
    token    0;
    sent     false;
}

StorageAgent extends Compound{
	sfClass "org.smartfrog.services.persistence.storage.StorageAgentImpl";
	sfExport true;
}

sfConfig extends Compound {

relay extends ERComponent{

    monitor extends ERComponent{
		sfClass "org.smartfrog.services.persistence.example.Monitor";
		jill LAZY PARENT:server1;
		john LAZY PARENT:server2;
		paterson LAZY PARENT:server3;
		marie LAZY PARENT:server4;
    }
    server1 extends Myprim {
		sfProcessName "Jill";
       	name "Jill";
   	    neighbor LAZY PARENT:server2;
        token    1;
   	}
    server2 extends Myprim {
		sfProcessName "John";
       	name "John";
   	    neighbor LAZY PARENT:server3;
    }
   	server3 extends Myprim{
		sfProcessName "Paterson";
        name "Paterson";
       	neighbor LAZY PARENT:server4;
    }
    server4 extends Myprim{
		sfProcessName "Marie";
       	name "Marie";
   	    neighbor LAZY PARENT:server1;
    }
//    sagent extends StorageAgent{
//    	sfProcessName "WoodFrogStorageAgent";
//    	sfProcessComponentName "WoodFrogStorageAgent";
//    }

}
}
