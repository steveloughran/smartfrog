<?xml version="1.0"?>
<project name="jetty" default="default">

<!--
/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
-->

<description>
     Build file for Jetty.
     Important: set ${jetty.lib.dir} to point to the directory of jetty that 
     contains the following files
     org.mortbay.jetty.jar
     org.mortbay.jmx.jar
     jasper-compiler.jar
     jasper-runtime.jar
     javax-servlet.jar
     
     This is usually JETTY_HOME/lib and JETTY_HOME/ext in a source distribution.

     After deploying point your browser at http://localhost:8080 to see the web
     site.

     There is also a debug servlet that can change the debug setting of a
     running server.  It is configured by the component HttpServerAdmin and is 
     run on port 8081 as part of the standard Jetty demo.
     
     
</description>

   <!-- override point -->
  <property file="build.properties" />

  <property name="jetty.lib.dir" location="lib" />
  <property name="build.dir" location="build"/>
  <property name="test.dir" location="${build.dir}/test"/>
  <property name="dist.dir" location="dist" />
  <property name="dist.lib.dir" location="dist/lib" />
  <property name="test.datafiles.dir" location="${test.dir}/files"/>
  <property name="root.dir" location="../.."  />
  <property name="smartfrog.home" location="${root.dir}/smartfrog"/>
  <property name="smartfrog.dist.dir" location="${smartfrog.home}/dist"/>
  <property name="smartfrog.dist.lib.dir" location="${smartfrog.dist.dir}/lib"/>
  <property name="rmitargets" location="rmitargets"/>
  <property name="manifestName" 
                         value="${smartfrog.home}/private/sealManifest.mf"/>

  
    <!-- Import common stuff -->
  <import file="${root.dir}/common.xml"/>
  
  
  <!-- ========================================================== -->
  <!-- ========================================================== -->
  <target name="init" depends="init-standard-output-dirs,use-smartfrog-tasks">
          
    <property name="target.jar" location="${dist.lib.dir}/jetty.jar" />
    <property name="deploy.sf" value="org/smartfrog/services/jetty/example.sf"/>
        
    <!-- the compile time path includes jetty-->
    <path id="compile.classpath">
      <path refid="smartfrog.classpath"/>
      <fileset dir="${jetty.lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </path>
    
    <!-- check for jetty. Because we pull in system classes too (the default),
    if jetty is on the classpath it gets used, even if jetty.lib.dir is unset 
         -->
	 <available property="jetty.found" 
      classname="org.mortbay.http.HttpServer"
      classpathref="compile.classpath"
      ignoresystemclasses="false"/>
    <fail unless="jetty.found">No Jetty found in ${jetty.lib.dir}</fail>
    
       
  </target>
    
  <!-- ========================================================== -->
  <!-- compile -->
  <!-- ========================================================== -->
  <target name="compile" 
    depends="verify-smartfrog,init">
      <javac
      includes="**/*.java"
      srcdir="${src.dir}"
      destdir="${build.classes.dir}"
      debug="${javac.debug.mode}"
      debuglevel="${javac.debug.level}"
      nowarn="true"
      includeAntRuntime="false"
      source="${javac.java.version}"
      target="${javac.java.version}"
      >
      <classpath refid="compile.classpath"/> 
      </javac>
    <copy-useful-files src="${src.dir}" dest="${build.classes.dir}" />   
  </target>
  
  <!-- ========================================================== -->
  <!-- RMI compile-->
  <!-- ========================================================== -->
  <target name="rmi" depends="compile" 
    description="create the RMI classes">
    <sf-rmic
        base="${build.classes.dir}"
        verify="true"
        includes="**/*.class">
       <classpath refid="compile.classpath"/>
    </sf-rmic>
  </target>
  
    <!-- ========================================================== -->
    <!-- parse the file -->
    <!-- ========================================================== -->
    <target name="parse" depends="init,dist"
        description="parse the cddlm descriptor">

        <sf-parse quiet="true" file="${src.dir}/${deploy.sf}">
            <classpath path="${target.jar}"/>
        </sf-parse>

    </target>
    
  <!-- ========================================================== -->
  <!-- create the jar -->
  <!-- ========================================================== -->
  <target name="dist" depends="compile,rmi" 
    description="create the jar files">
    <jar jarfile="${target.jar}" 
        basedir="${build.classes.dir}" 
        includes="**/services/**"
        manifest ="${manifestName}"/>
    <copy-useful-files src="${dist.lib.dir}" 
        pattern="*.jar" dest="${smartfrog.dist.lib.dir}" />   
    <copy-useful-files src="${jetty.lib.dir}" 
	    pattern="*.jar" dest="${smartfrog.dist.lib.dir}" />   
  </target>
  
  
  <!-- ========================================================== -->
  <!-- default target -->
  <!-- ========================================================== -->
  <target name="default" depends="dist" description="default target" />
</project>
