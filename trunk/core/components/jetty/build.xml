<?xml version="1.0"?>
<project name="jetty" default="default">

<!--
/** (C) Copyright 1998-2006 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
-->

<description>
     Build file for Jetty.
     After deploying point your browser at http://localhost:8080 to see the web
     site.

     There is also a debug servlet that can change the debug setting of a
     running server.  It is configured by the component HttpServerAdmin and is 
     run on port 8081 as part of the standard Jetty demo.
     
     
</description>

  <property name="is.component" value="true"  />
   <!-- override point -->
  <property file="build.properties" />
  <property name="root.dir" location="../../"  />
  <property name="ivy.enabled" value="true"/>
  <property name="system.tests" value="true" />
  <!-- Import common stuff -->
  <!--available file="../../common.xml" property="root.dir" value="../.."/--> 
  <import file="${root.dir}/common.xml"/>
  
  <property name="example.path" value="/org/smartfrog/services/jetty/examples"/>
  <property name="deploy.sf" value="${example.path}/example1.sf"/>


  <!-- ========================================================== -->
  <!-- this is an override point -->
  <!-- set the verified.ok property if everything needed is present -->
  <!-- Do Not Fail. This test is used to control conditional builds -->
  <!-- NB, set property verify.fail.message to something meaningful
       for better diagnostic messages on failure (see assert-prerequisites) 
       -->
  <!-- ========================================================== -->
  <target name="verify-prerequisites" depends="common.verify-prerequisites">
    <available property="test.jasper.found"
        classname="org.apache.jasper.servlet.JspServlet"
        classpathref="tests.run.classpath"
        ignoresystemclasses="true"/>
    <echo level="verbose">
      jasper.found=${test.jasper.found}
    </echo>
    <property name="test.jetty.home"
        location="${test.src.dir}/files/jettyhome"/>
  </target>
  
    <!-- ========================================================== -->
    <!-- parse the file -->
    <!-- ========================================================== -->
    <target name="parse" depends="ready-to-test"
        description="parse the deployment descriptor">

      <sf-parse quiet="true" file="${src.dir}/${deploy.sf}"
        classpathref="exec.classpath">
      </sf-parse>
      <sf-parse quiet="true" file="${src.dir}/${example.path}/example2.sf"
        classpathref="exec.classpath">
      </sf-parse>
      <sf-parse quiet="true" file="${src.dir}/${example.path}/example3.sf"
        classpathref="exec.classpath">
      </sf-parse>
      <sf-parse quiet="true" file="${src.dir}/${example.path}/dynamicexample.sf"
        classpathref="exec.classpath">
      </sf-parse>
    </target>



  <!-- ========================================================== -->
  <!-- system tests -->
  <!-- ========================================================== -->

<!--
  <target name="system-tests" depends="ready-to-test"
      if="run.system.tests" description="run system tests">
    <sf-system-test>
      <test>
        <sf-system-test-junit>
          <sysproperty key="test.files.dir"
              value="${test.src.dir}/files"/>
          --><!--Root directory for jetty--><!--
          <sysproperty key="jetty.home"
              value="${test.src.dir}/files/jettyhome"/>
          <batchtest todir="${test.data.dir}">
            <fileset dir="${test.classes.dir}">
              <include name="**/unit/*Test.class"/>
              <include name="**/system/**/*Test.class"/>
              <exclude name="**/system/full/*Test.class" unless="jasper.found"/>
            </fileset>
          </batchtest>
        </sf-system-test-junit>
        <fail if="system.test.failed">System Tests failed - see
${test.reports.dir}
        </fail>
      </test>
    </sf-system-test>

  </target>-->

  <target name="ready-to-test" depends="common.ready-to-test,testwar">

  </target>

  <!--pick up the test war from Ivy-->
  <target name="testwar" depends="ivy-retrieve">
    <property name="test.testwar.war"
        location="${ivy.lib.dir}/testwar/sf-www-testwar-${smartfrog.version}.war" />
    <fail>
      <condition >
        <not><available file="${test.testwar.war}"/></not>
      </condition>
      Not found: ${test.testwar.war}
    </fail>
  </target>

</project>
