<?xml version="1.0"?>
<project name="jetty" default="default">

<!--
/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
-->

<description>
     Build file for Jetty.
     Important: set ${jetty.lib.dir} to point to the directory of jetty that 
     contains the following files
     org.mortbay.jetty.jar
     org.mortbay.jmx.jar
     jasper-compiler.jar
     jasper-runtime.jar
     javax-servlet.jar
     
     This is usually JETTY_HOME/lib and JETTY_HOME/ext in a source distribution.

     After deploying point your browser at http://localhost:8080 to see the web
     site.

     There is also a debug servlet that can change the debug setting of a
     running server.  It is configured by the component HttpServerAdmin and is 
     run on port 8081 as part of the standard Jetty demo.
     
     
</description>

   <!-- override point -->
  <property file="build.properties" />
  <property name="root.dir" location="../../"  />
 <property name="Name.System" value="Jetty"/>
 <!-- Import common stuff -->
  <!--available file="../../common.xml" property="root.dir" value="../.."/--> 
  <import file="${root.dir}/common.xml"/>
  
   <property name="is.component" value="true"  />
  <!-- ========================================================== -->
  <!-- ========================================================== -->
  <target name="init" depends="init-standard-output-dirs,use-smartfrog-tasks">
          
    <!-- <property name="target.jar" location="${dist.lib.dir}/jetty.jar" /> -->
    <property name="deploy.sf" value="org/smartfrog/services/jetty/example.sf"/>
    <property name="manifestName" 
       value="${smartfrog.home}/private/sealManifest.mf"/>


	   <tstamp/>
    <property name="Name.Company" value="(C) Copyright 1998-2004 Hewlett-Packard Development Company, LP"/>
    <property name="version" value="smartfrog components"/>
    <property name="Version" value="1.00.000"/>
    <property name="year" value="2004"/>

    <echo message=""/>
    <echo message="==================================================================="/>
    <echo message="= ${Name.System} ${version}"/>
    <echo message="= ${Name.Company} "/>
    <echo message="==================================================================="/>
    <echo message=""/>
    <echo message="(${ant.version})"/>
        
  </target>
    
  
  <!-- ========================================================== -->
  <!-- this is an override point -->
  <!-- set the verified.ok property if everything needed is present -->
  <!-- Do Not Fail. This test is used to control conditional builds -->
  <!-- NB, set property verify.fail.message to something meaningful
       for better diagnostic messages on failure (see assert-prerequisites) 
       -->
  <!-- ========================================================== -->
  <target name="verify-prerequisites" depends="pre-verify-prerequisites">
        <available property="verified.ok"
            classname="org.mortbay.http.HttpServer"
            classpathref="compile.classpath"
            ignoresystemclasses="false"/>
        <property name="verify.fail.message"
          value="No Jetty found"/>    
  </target>
  
 
    <!-- ========================================================== -->
    <!-- parse the file -->
    <!-- ========================================================== -->
    <target name="parse" depends="init,dist"
        description="parse the deployment descriptor">

        <sf-parse quiet="true" file="${src.dir}/${deploy.sf}">
            <classpath path="${target.jar}"/>
        </sf-parse>

    </target>
    
  <!-- ========================================================== -->
  <!-- this is an override, as we add a manifest -->
  <!-- create the jar -->
  <!-- ========================================================== -->
 	<target name="dist" depends="common.dist,jdocs" description="create the jar files">
	 <copy todir = "${dist.lib.dir}">
        <fileset dir ="${lib.dir}" />
    </copy>
	
	<copy todir = "${dist.doc.dir}">
        <fileset dir ="${doc.dir}" />
    </copy>   

		 <copy todir = "${dist.src.dir}">
        <fileset dir ="${src.dir}">
		  <include name="**/examples/**"/>
		</fileset>
    </copy>  
	 <copy tofile="${dist.dir}/build.xml" file="releaseBuild.xml"/>	
	</target>

  <!-- ========================================================== -->
  <!-- this is an override -->
  <!-- install the jar -->
  <!-- ========================================================== -->  
<!--   <target name="install" depends="common.install"
    description="copy the jar files to the SmartFrog distribution directory">
    <copy-useful-files src="${dist.lib.dir}" 
        pattern="*.jar" dest="${smartfrog.dist.lib.dir}" />    
  </target>   -->
  
<!-- ========================================================== -->
  <!-- clean -->
  <!-- ========================================================== -->

 <target name="clean" depends="init,common.clean" description="clean up build ,dist and releases" >
    <property name="releases.dir" value="releases"/>  
    <delete dir="${releases.dir}"  />  
    <delete dir="test"  />  	
  </target>  

  <!-- =================================================================== -->
  <!--   JDocs                                                             -->
  <!-- =================================================================== -->
  <target name="jdocs" depends="init" description="Generates the API documentation">
    <!--  Java Docs for all                                                -->
    <echo message=""/>
    <echo message="------------------------------------------------------------------------"/>
    <echo message="  Creating Java Docs for ${Name.System} ${version} [${dist.dir}/${jdocs}]"/>
    <echo message="------------------------------------------------------------------------"/>
    <mkdir dir="${dist.jdocs.dir}"/>
    <javadoc packagenames="org.smartfrog.*"
           sourcepath="${src.dir}"
           destdir="${dist.jdocs.dir}"
           author="true"
           version="true"
           use="true"
           windowtitle="${Name.System}"
           Header="${Name.System} ${Version}"
           Footer="${Name.System} ${version} ${Version}"
           doctitle="${Name.System}"
           bottom="${Name.Company}"
           source="${javac.runtime.target}"
           >
      <group title="SmartFrog Packages" packages="org.smartfrog.*"/>
      <classpath>
          <fileset dir="${smartfrog.dist.lib.dir}">
              <include name="**/*.jar"/>
          </fileset>
		   <fileset dir="${dist.lib.dir}">
              <include name="**/*.jar"/>
          </fileset>
      </classpath>
    </javadoc>

  </target>


</project>
