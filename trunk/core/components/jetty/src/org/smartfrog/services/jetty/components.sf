#include "org/smartfrog/components.sf";
#include "org/smartfrog/sfcore/workflow/components.sf";
#include "org/smartfrog/functions.sf";

/**
 * This component is a minimal http server.
 */ 

HttpServer extends Compound {
   sfClass "org.smartfrog.services.jetty.SFJetty";
   jettyhome "null";
   serverHost "null";
   listeners extends Listeners; //optional
   contexts extends Contexts;   //optional
   
}

Contexts extends Compound {
  Context1 ATTRIB context1;
  Context2 ATTRIB context2;
  Context3 ATTRIB context3;
  Context4 ATTRIB context4;
  Context5 ATTRIB context5;
  Context6 ATTRIB context6;
}

context1 extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.WebApplication";
 contextPath "/";
 webApp (jettyhome ++ "/demo/webapps/root");
}

context2 extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.WebApplication";
 contextPath "/jetty";
 webApp (jettyhome ++ "/demo/webapps/jetty");
}

context3 extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.WebApplication";
 contextPath "/examples";
 webApp (jettyhome ++ "/demo/webapps/examples");
 requestId true; //optional
}

context4 extends Compound {
 sfClass "org.smartfrog.services.jetty.contexts.Servlet";
 contextPath "/demo";
 resourceBase (jettyhome ++ "/demo/docroot");
 classPath (jettyhome ++ "/demo/servlets"); 
 handlers extends Handlers; //optional
 servlets extends Servlets; //optional
}

context5 extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.Servlet";
 contextPath "/javadoc";
 resourceBase (jettyhome ++ "/javadoc");
}

context6 extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.Servlet";
 contextPath "/cgi-bin";
 resourceBase (jettyhome ++ "/cgi-bin");
 servlets extends CGI; //optional
}

CGI extends Compound {
 servlet1 ATTRIB CGIservlet;
}

Handlers extends Compound {
 Handler1 ATTRIB handler1;
 Handler2 ATTRIB handler2;
 Handler3 ATTRIB handler3;
}

handler1 extends Forward {}

handler2 extends HTAccess {}

handler3 extends Dump {}

Dump extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.handlers.Dump";
}

HTAccess extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.handlers.HTAccess";
 accessFile ".htaccess";
}

Forward extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.handlers.Forward";
 mapfromPath "/forward/*";
 maptoPath "/dump";
}

Servlets extends Compound {
 Servlet1 ATTRIB Invokerservlet;
 Servlet2 ATTRIB Dumpservlet;
 Servlet3 ATTRIB Sessionservlet;
 Servlet4 ATTRIB Dispatchservlet;
 Servlet5 ATTRIB JSPservlet;
 Servlet6 ATTRIB SrcDefaultservlet;
}

Invokerservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "Invoker";
 pathSpec "/servlet/*";
 className "org.mortbay.jetty.servlet.Invoker";
}

Dumpservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "Dump";
 pathSpec "/dump/*:*.DUMP";
 className "org.mortbay.servlet.Dump";
 initParams [["InitParam","Value"]];
}

Sessionservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "Session";
 pathSpec "/session/*";
 className "org.mortbay.servlet.SessionDump";
}

Dispatchservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "Dispatch";
 pathSpec "/dispatch/*";
 className "org.mortbay.servlet.RequestDispatchTest";
}

JSPservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "JSP";
 pathSpec "*.jsp";
 className "org.apache.jasper.servlet.JspServlet";
}

SrcDefaultservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "SrcDefault";
 pathSpec "/src/*";
 className "org.mortbay.jetty.servlet.Default";
 initParams [["dirAllowed","true"], ["resourceBase", (jettyhome ++ "/src")]];
}

CGIservlet extends Prim {
 sfClass "org.smartfrog.services.jetty.contexts.servlets.Servlet";
 name "Common Gateway Interface";
 pathSpec "/";
 className "org.mortbay.servlet.CGI";
 initParams [["Path","/bin:/usr/bin:/usr/local/bin"], ["ENV_TEST", ("Jetty home is " ++ jettyhome)]];
}

Listeners extends Compound { 
   Listener1 ATTRIB listener1;
   Listener2 ATTRIB listener2;
}

listener1 extends Prim {
 sfClass "org.smartfrog.services.jetty.listeners.Socketlistener";
 listenerPort 8080;
 serverHost PARENT:PARENT:serverHost;
}

listener2 extends Prim {
 sfClass "org.smartfrog.services.jetty.listeners.AJPlistener";
 listenerPort 8009;
 serverHost PARENT:PARENT:serverHost;
}

HttpServerAdmin extends Prim {
    sfClass "org.smartfrog.services.jetty.SFJettyAdmin";
    listenerPort 8081;         // the port on which the http server listens
    httpserverHost   "null";
    contextPath "/";
}

