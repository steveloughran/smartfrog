/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "org/smartfrog/components.sf"
#include "org/smartfrog/predicates.sf"
#include "org/smartfrog/services/net/password.sf"

/**
 * SmartFrog FTP component can be used in workflows to send and retrieve 
 * ascii and binary files.
 * Default transfer mode is ascii.
 */
FTPSchema extends Schema {	
	ftpHost extends String;
	username extends String;
	localFiles extends Vector;
	remoteFiles extends Vector;
	transferType extends OptionalString;
	transferMode extends OptionalString;
	shouldTerminate extends Boolean;
}

FTPClient extends Compound {
    PasswordProvider extends Password {
    }
    FTP extends Prim {
        /* ========================================================
         * Mandatory attributes 
         *=========================================================
         */
        sfClass "org.smartfrog.services.net.FTPClientImpl";
	ftpSchema extends FTPSchema;
        
        // name of FTP host
        //ftpHost "ebnt171.india.hp.com";
        
        // login name in remote FTP server
        //username "ashish";

        // reference to password provider
        passwordProvider LAZY PARENT:PasswordProvider;

        // vector of local files 
        //localFiles ["e:\\temp\\one.txt","e:\\temp\\two.txt"];

        // vector of remote files corresponding to local files.
        //remoteFiles ["/home/ashish/tmp/one.txt",
         //            "/home/ashish/tmp/two.txt"];
        /* ========================================================
         * Optional attributes 
         *=========================================================
         */
         // two possible values are "get" and "put" 
        //transferType "put";
        transferType "get";

        // two possible values are "ascii" and "binary"
        //transferMode "binary";
        transferMode "ascii";
        shouldTerminate true;
    }
}
