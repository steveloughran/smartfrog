/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

#include "/org/smartfrog/predicates.sf"

/**
 * Include the core smartfrog components.
 */
#include "/org/smartfrog/components.sf"

//liveness and webserver
#include "/org/smartfrog/services/www/components.sf"


/**
 * the axis schema.
 * a WSDD descriptor file is mandatory
 */
 ApacheAxisSchema extends Schema {

    //this is the axis configuration file for a service
    wsddDescriptor extends OptionalString;

	//number of threads to pool; equivalent to max number
	//of callers
	threads extends OptionalInteger;

	//sessions to keep active
    sessions extends OptionalInteger;
}

/**
the axis server implements the schema
*/

AxisServer extends WebServer {
    sfClass "org.smartfrog.services.axis.AxisImpl";
	axisSchema extends ApacheAxisSchema;
    port 8080;
};


/**
 * now define an axis service. this is a service that
 * tells the system what to run
 */
AxisServiceSchema extends Schema {

    serviceName extends String;
    //port on this machine
    port extends Integer;
    // username for admin
    username extends OptionalString;
    //password for admin
    password extends OptionalString;
    //name of web application
    webapp extends String;
    //path under webapp to services
    servicePath extends String;
    //admin service name
    adminService extends String;
    //transport for admin service
    transport extends OptionalString;
    //protocol
    protocol extends String;
    //hostname.
    hostname extends String;
}


/**
 * now define an axis service. this is a service that
 * deploys and undeploys axis.
 *
 * Note that an Axis service does not by default include any liveness tests;
 * it is the role of other components (such as the liveness page) to do so.
 *
 * this is non instantiable, but
 * sets the defaults for things
 */
AxisService extends Prim {
    //sfClass "org.smartfrog.services.axis.AxisServiceImpl";
    serviceSchema extends AxisServiceSchema;
    port 8080;
    servicePath "services";
    adminService "axisAdmin";
    webapp "axis";
    protocol "http";
    hostname "localhost";
}


/**
 * now define an axis service. this is a service that
 * deploys and undeploys axis
 */
AxisServiceResourceSchema extends AxisServiceSchema {
    //this is the axis configuration file for a service
    deployResource extends String;
    //and the undeployment resource
    undeployResource extends String;
}

AxisServiceResource extends AxisService {
    sfClass "org.smartfrog.services.axis.AxisServiceImpl";
    axisServiceResourceSchema extends AxisServiceResourceSchema;
}


/**
 * now define an axis service. this is a service that
 * tells the system what to run
 */
AxisServiceConfigurationSchema extends AxisServiceSchema {
    //this is the axis configuration file for a service
    classname extends String;

}

AxisServiceConfiguration extends AxisService {
    sfClass "org.smartfrog.services.axis.AxisServiceImpl";
    axisServiceConfigurationSchema extends AxisServiceConfigurationSchema;
}






