/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 For more information: www.smartfrog.org

 */


#include "/org/smartfrog/services/hadoop/test/system/local/components.sf"

/**
 * Test the local name node
 */
testLocalJobTracker extends ExpectDeploy {
  description "bring up a Job Tracker";

  action extends LocalJobTrackerCompound {
  }

  tests extends JobTrackerLiveSequence {
    jobTracker LAZY PARENT:action:jobTracker;
  //  taskTracker LAZY PARENT:action:taskTracker;
    cluster LAZY PARENT:action:cluster;
    datanode LAZY PARENT:action:datanode;
    namenode LAZY PARENT:action:namenode;
  }

}


testLocalJobTrackerForked extends testLocalJobTracker {
  condition IsForkTestsSet;
  action:namenode:sfProcessName "testDataNodeForkedProcess-namenode";
  action:datanode:sfProcessName "testDataNodeForkedProcess";
  action:jobTracker:sfProcessName "testLocalJobTrackerForked-jobtracker";
//  action:clusterActions:then:taskTracker:sfProcessName "testLocalJobTrackerForked-taskTracker";
}

/**
 * Test the local node
 */
testJobSubmission extends ExpectDeploy {
  description "Submit a job to a cluster and copy out the result";

  action extends LocalClusterCompound {
  
  }

  tests extends MapReduceTestSequence {
    //s extends Sleep;
    jobTracker LAZY PARENT:action:jobTracker;
    //taskTracker LAZY PARENT:action:taskTracker;
    cluster LAZY PARENT:action:cluster;
    datanode LAZY PARENT:action:datanode;
    namenode LAZY PARENT:action:namenode;
  }


}

testJobSetup extends ExpectDeploy {
  description "test that the job setup works";

  action extends LocalClusterCompound {

  }

  tests extends JobTrackerSequence {
    //s extends Sleep;
    jobTracker LAZY PARENT:action:jobTracker;
    //taskTracker LAZY PARENT:action:taskTracker;
    cluster LAZY PARENT:action:cluster;
    datanode LAZY PARENT:action:datanode;
    namenode LAZY PARENT:action:namenode;
  }


}




testJobSubmissionForked extends testJobSubmission {
  condition IsForkTestsSet;
  action:namenode:sfProcessName "testJobSubmission-namenode";
  action:datanode:sfProcessName "testJobSubmission-datanode";
  action:jobTracker:sfProcessName "testJobSubmission-jobtracker";
  //action:taskTracker:sfProcessName "testJobSubmission-taskTracker";
}


/**
 * Start an orphan task tracker. We expect it to be dead afterwards
 */
testOrphanTracker extends ExpectDeployFailure {
  description "bring up an orphan Task Tracker, see what happens.";



  action extends OrphanTaskTrackerCompound {
  
  }

  //for our test we sleep; that's all.
  tests extends Sequence {
    Sleep extends Delay {
      time ORPHAN_SLEEP_TIME;
    }
  }

  exceptions [["java.net.ConnectException","Connection refused"]];

}


