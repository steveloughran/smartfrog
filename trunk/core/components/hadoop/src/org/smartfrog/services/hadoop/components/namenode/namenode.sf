/* (C) Copyright 2008 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/



/**
 * Extend NameDirNode with dataDirectories and a log directory
 */
ClusteredNameNode extends ClusteredNameDirNode {
  sfClass "org.smartfrog.services.hadoop.components.namenode.NamenodeImpl";
  name "NameNode";

  //the data directories, again a list of directories
  dataDirectories TBD;

  //log directory
  logDir TBD;

  //check the name node is live when we ping the component
  checkRunning true;
  //should we expect the node to terminate itself
  expectNodeTermination false;
  sfShouldTerminate false;

}


/**
 * A name node is one of the most critical part of an HDFS cluster; it is
 * the directory server.
 * -deploy it onto high quality storage
 * -save the logs to an other RAID-5 store
 * -back things up to tape on a regular basis.
 * We recommend HP StorageSystems LTO drives on the basis that the power consumption
 * of backed up images is near 0 (only that of the A/C of the location where they
 * are stored), and you can locate them on multiple geo-locations for extra recovery.

   IMPORTANT: only one filesystem can be brought up in a single process.
   Do not attempt to start >1 in the same process, as state is stored in
   some singletons. Use sfProcessName to set a new name of every process

 */



NameNode extends ClusteredNameNode, FileSystemNode {

  //startup mode
  dfs.namenode.startup ACTION_REGULAR;

  //dfs.http.address "http://localhost:8021";


  //this is set from logDir
  //hadoop.log.dir TBD


  //how many handler threads
  //fs.default.name

  dfs.namenode.decommission.interval (5 * 60);

  dfs.permissions.supergroup "supergroup";
  dfs.upgrade.permission "0777"

  //replication policy
  dfs.replication 3;
  //interval in seconds
  dfs.replication.interval 3;
  dfs.replication.max 512;
  dfs.replication.min 1;
  dfs.replication.considerLoad true;
  dfs.replication.pending.timeout.sec (5 * 60 * 1000);

  dfs.max-repl-streams 2;
  //interval in seconds
  dfs.heartbeat.interval 3;
  //measured in millis
  heartbeat.recheck.interval (5 * 60 * 1000);


  /** Safe mode threshold as a percentage */
  dfs.safemode.threshold.pct 0.95;
  /** Safe mode extension after the threshold. */
  dfs.safemode.extension 0;


}

