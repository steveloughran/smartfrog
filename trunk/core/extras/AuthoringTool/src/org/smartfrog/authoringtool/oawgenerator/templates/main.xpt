«IMPORT Smartfrog»

«DEFINE SF FOR Root»
«FILE RealRoot.Name.toString()+".sf"»
#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/dependencies/legacy/statemodel/components.sf"
#include "org/smartfrog/services/dependencies/threadpool/components.sf"

		«EXPAND SuperCompositeDescription FOREACH  RealRoot.Model_composite_Container»
	«ENDFILE»
«ENDDEFINE»

/** SUPER COMPOSITE **/

«DEFINE SuperCompositeDescription FOR Composite»
	«Name» extends Model { 
	«EXPAND ChildCompositeDescription FOREACH  SuperComposite»
	«EXPAND ComponentDescription FOREACH  Composite_Component_Container»
	«EXPAND AddAttribute FOREACH Composite_Attribute_Container»
	«EXPAND SimpleDepDescription FOREACH Composite_Component_Container.Simple_Dependent_Source»
	«EXPAND ConnectorDescription FOREACH Composite_Connector_Container»
	«EXPAND InputDepDescription FOREACH Composite_Component_Container.Component_Dependent_Source»
	«EXPAND OutputDepDescription FOREACH Composite_Component_Container.Connector_Depend_On_Component»
	
	 }
«ENDDEFINE»


/** CHILD COMPOSITE **/

«DEFINE ChildCompositeDescription FOR Composite»
	«Name» extends Composite {
	«EXPAND ChildCompositeDescription FOREACH  SuperComposite»
	«EXPAND ComponentDescription FOREACH  Composite_Component_Container»
	«EXPAND SimpleDepDescription FOREACH Composite_Component_Container.Simple_Dependent_Source»
	«EXPAND AddAttribute FOREACH Composite_Attribute_Container»
	«EXPAND ConnectorDescription FOREACH Composite_Connector_Container»
	«EXPAND InputDepDescription FOREACH Composite_Component_Container.Component_Dependent_Source»
	«EXPAND OutputDepDescription FOREACH Composite_Component_Container.Connector_Depend_On_Component»
 }
«ENDDEFINE»


/** COMPONENT **/

«DEFINE ComponentDescription FOR Component»


«IF Extends.matches("0")»
«Name» extends State {
«ELSE»
«Name» extends «Extends» {

«ENDIF»


«EXPAND AddAttribute FOREACH Component_Attribute_Container» 
	
 }
«ENDDEFINE»

/** ATTRIBUTE **/

«DEFINE AddAttribute FOR Attribute»
«IF ! SFTags.matches("null")» [ «SFTags» ] «ENDIF» «IF StateData&&StateListen&&StateNotify» [statedata,StateListen,StateNotify] «ELSEIF StateData&&StateListen&&!StateNotify» [statedata,StateListen] «ELSEIF StateData&&!StateListen&&StateNotify» [statedata,StateNotify] «ELSEIF !StateData&&!StateListen&&StateNotify» [StateListen,StateNotify] «ELSEIF !StateData&&!StateListen&&StateNotify» [StateNotify] «ELSEIF !StateData&&StateListen&&!StateNotify» [StateListen] «ELSEIF StateData&&!StateListen&&!StateNotify» [statedata]«ENDIF»   «Name» «IF IsLazyValue» LAZY «ENDIF»  «Value»;

«ENDDEFINE»


/** CONNECTOR **/

«DEFINE ConnectorDescription FOR Connectors»

«IF this.toString().contains("And")» «Name» extends AndConnector  {
 }«ENDIF»
 
 «IF this.toString().contains("Or")» «Name» extends OrConnector  {
 }«ENDIF»

 «IF this.toString().contains("smartfrog::NOr")» «Name» extends NOrConnector  {
 }«ENDIF»

 «IF this.toString().contains("smartfrog::Nand")» «Name» extends NandConnector  {
 }«ENDIF»

«ENDDEFINE»


/** SIMPLE DEPENDENCY **/


«DEFINE SimpleDepDescription  FOR SimpleDependencyConnection»
 «Dependency_Name»  extends Dependency  {
	on «this.Target.Name»;
	by «this.Source.Name»;
	enabled «Enabled»;
	relevant «Relevant»;
 }
«ENDDEFINE»

/**  DEPENDENCY Using CONNECTOR**/


«DEFINE InputDepDescription  FOR InputDependencyConnection»
 «Input_Dependency_Name»  extends Dependency  {
	on «this.Target.Name»;
	by «this.Source.Name»;
	enabled «Enabled»;
	relevant «Relevant»;
 }
«ENDDEFINE»

«DEFINE OutputDepDescription  FOR OutputDependencyConnection»
 «Output_Dependency_Name»  extends Dependency  {
	on «this.Target.Name»;
	by «this.Source.Name»;
	enabled «Enabled»;
	relevant «Relevant»;
 }
«ENDDEFINE»

