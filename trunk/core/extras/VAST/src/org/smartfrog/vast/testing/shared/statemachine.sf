/** (C) Copyright 2008 Hewlett-Packard Development Company, LP

Disclaimer of Warranty

The Software is provided "AS IS," without a warranty of any kind. ALL
EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES,
INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE, OR NON-INFRINGEMENT, ARE HEREBY
EXCLUDED. SmartFrog is not a Hewlett-Packard Product. The Software has
not undergone complete testing and may contain errors and defects. It
may not function properly and is subject to change or withdrawal at
any time. The user must assume the entire risk of using the
Software. No support or maintenance is provided with the Software by
Hewlett-Packard. Do not install the Software if you are not accustomed
to using experimental software.

Limitation of Liability

TO THE EXTENT NOT PROHIBITED BY LAW, IN NO EVENT WILL HEWLETT-PACKARD
OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR
FOR SPECIAL, INDIRECT, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES,
HOWEVER CAUSED REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF
OR RELATED TO THE FURNISHING, PERFORMANCE, OR USE OF THE SOFTWARE, OR
THE INABILITY TO USE THE SOFTWARE, EVEN IF HEWLETT-PACKARD HAS BEEN
ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. FURTHERMORE, SINCE THE
SOFTWARE IS PROVIDED WITHOUT CHARGE, YOU AGREE THAT THERE HAS BEEN NO
BARGAIN MADE FOR ANY ASSUMPTIONS OF LIABILITY OR DAMAGES BY
HEWLETT-PACKARD FOR ANY REASON WHATSOEVER, RELATING TO THE SOFTWARE OR
ITS MEDIA, AND YOU HEREBY WAIVE ANY CLAIM IN THIS REGARD.

*/
#include "/org/smartfrog/components.sf"

// an attribute
SUTAttribute extends Prim {
	sfClass "org.smartfrog.vast.testing.shared.SUTAttributeImpl";

	-- extends Schema {
		// name of the attribute
		Name extends String;

		// value of the attribute
		Value extends String;

		// host where this attribute can be found
		Host extends String;
	}
}

// a state consisting of several attributes
SUTState extends Compound {
	sfClass "org.smartfrog.vast.testing.shared.SUTStateImpl";

	-- extends Schema {
		// name of the state
		Name extends String;
	}

	Attributes TBD;
}

// an action
SUTAction extends Prim {
	-- extends Schema {
		// name of this action
		Name extends String;

		// optional seconds to wait after execution
		Wait extends Integer;

		// host where this action should take place
		Host extends String;
	}

	Wait 0;
}

ScriptAction extends SUTAction {
	sfClass "org.smartfrog.vast.testing.shared.ScriptActionImpl";

	-- extends Schema {
		// name of the script to execute
		ScriptName extends String;

		// name for the subprocess
		ProcessName extends String;
	}
}

FunctionCallAction extends SUTAction {
	sfClass "org.smartfrog.vast.testing.shared.InvokeFunctionActionImpl";

	-- extends Schema {
		// name of the function to call
		FunctionName extends String;
	}

	Parameters TBD;
}

// a sequence of actions with a state as a result
SUTTestSequence extends Compound {
	sfClass "org.smartfrog.vast.testing.shared.SUTTestSequenceImpl";

	// result after the actions
	Result TBD;

	// actions to execute
	Actions TBD;

	-- extends Schema {
		// how long to wait before checking the resulting state
		Wait extends Integer;

		// name of the sequence
		Name extends String;

		// expect failure?
		ExpectFailure extends Boolean;
	}

	ExpectFailure false;
}

// set of test sequences
SUTTestSuite extends Compound {
	sfClass "org.smartfrog.vast.testing.shared.TestSuiteImpl";

	// test sequences
	TestSequences TBD;
}