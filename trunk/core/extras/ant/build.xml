<?xml version="1.0"?>
<project name="ant_tasks" default="default" basedir=".">
  
<description>
  Build file for Ant tasks for Smartfrog

  This build file is Ant1.6+ only. Do not complain when it breaks
  on Ant1.5! 
  
  To build and run the tests, you need ant-testutil.jar, which you get
  by running "ant test-jar" in Ant
  
</description>

<property name="root.dir" location="../.."  />

<!-- Import common stuff -->
<import file="${root.dir}/common.xml"/>

  <target name="init" 
    depends="init-common,verify-smartfrog,init-standard-output-dirs">
    <property name="src.dir" location="src"/>
    <property name="target.name" value="{smartfrog.tasks.name}"/>
    <property name="target.jar" location="${smartfrog.tasks.jar}" />
  </target>

  <target name="compile" depends="init">
    <sf-javac-with-ant 
      srcdir="${src.dir}"
      destdir="${build.classes.dir}"
      classpathref="smartfrog.classpath"
      >
    </sf-javac-with-ant>
    <copy-useful-files src="${src.dir}" dest="${build.classes.dir}" />
  </target>
  
  <target name="dist" depends="compile">
    <jar destfile="${target.jar}">
      <fileset dir="${build.classes.dir}" includes="**/*" />
    </jar>
  </target>
  
  <target name="test1" depends="dist,use-smartfrog-tasks">
    <sf-parse />
    <parallel>
      <sf-startdaemon 
        taskTimeout="30"
        classpathref="smartfrog.tasks.classpath"
        />
      <sequential>
        <sleep seconds="5"/>
        <sf-stopdaemon hostname="localhost"
          failonerror="true"
          classpathref="smartfrog.tasks.classpath"/>
      </sequential>
    </parallel>
    
  </target>
  
  <target name="stopdaemon" depends="dist,use-smartfrog-tasks">
    <sf-stopdaemon 
      classpathref="smartfrog.tasks.classpath"/>
  </target>
  
  <target name="default" depends="dist,test">
    <!-- todo -->
  </target>  
  
  <target name="find-testutil" depends="init">
    <property name="testutil.jar" 
      location="${ant.home}/build/lib/ant-testutil.jar"/>
    <path id="testutil.classpath">
      <pathelement location="${testutil.jar}"/>
    </path>
    
    <available property="testutil.found"
      classname="org.apache.tools.ant.BuildFileTest" 
      classpathref="testutil.classpath"
      ignoresystemclasses="false"/>
  </target>

  <target name="require-testutil" depends="find-testutil">
    <fail unless="testutil.found" >Could not find ${testutil.jar}</fail>
  </target>

  
  <target name="want-testutil" unless="testutil.found" depends="find-testutil">
    <echo level="error">
    Ant testutil classes not found in ${testutil.jar}
    The dependent stages of this build will be skipped.
    To build this file, run "ant test-jar" in 
    ant's source directory,
    Alternatively, retrieve it from Gump: 
    http://gump.covalent.net/jars/latest/ant/
    Note that the version of ant-testutil.jar should
    match the version of ant used. 
    </echo>
  </target>
  
  <target name="compile-tests" 
      depends="init,want-testutil,dist,use-smartfrog-tasks"
      if="testutil.found">
      <!-- set up a new path with the tasks and testutil -->
    <property name="test.src.dir" location="test/files"/>
    <path id="tests.compile.classpath">
      <path refid="smartfrog.classpath"/>
      <pathelement location="${smartfrog.tasks.jar}"/>
      <path refid="testutil.classpath"
      />
    </path>
    
    <sf-javac-with-ant 
      srcdir="${test.src.dir}"
      destdir="${test.classes.dir}"
      classpathref="tests.compile.classpath"
      >
    </sf-javac-with-ant>
    <copy-useful-files src="${src.dir}" dest="${build.classes.dir}" />
  </target>
  
  <!-- run the tests -->
  <target name="run-tests" depends="compile-tests,want-testutil"
    if="testutil.found">
    <path id="tests.run.classpath">
      <path refid="tests.compile.classpath"/>
      <pathelement location="${test.classes.dir}"/>
      <pathelement path="${java.class.path}"/>        
    </path>

    <sf-junit 
           errorProperty="test.failed"
           failureProperty="test.failed" 
           includeantruntime="true"
           >
       <classpath 
          refid="tests.run.classpath"/>
        <sysproperty key="test.files.dir"
            value="${test.src.dir}/files" />
      <batchtest todir="${test.data.dir}" >
        <fileset dir="${test.classes.dir}">
          <include name="**/*Test.class" />
       </fileset>
      </batchtest>
    </sf-junit>
  </target>  

  <target name="test" depends="run-tests"
    description="run unit tests"
    if="testutil.found">
    
    <!-- generate the reports-->
    <sf-test-report data="${test.data.dir}"
      reports="${test.reports.dir}"
      failed="test.failed"/>

  </target>  
  
  
</project>   
