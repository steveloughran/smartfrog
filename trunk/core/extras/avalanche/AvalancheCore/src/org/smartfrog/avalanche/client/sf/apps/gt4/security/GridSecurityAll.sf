#include "org/smartfrog/components.sf"
#include "org/smartfrog/services/net/ftp.sf"
#include "org/smartfrog/services/net/telnet.sf"
#include "org/smartfrog/services/ssh/scp.sf"
#include "org/smartfrog/services/ssh/sshExec.sf"
#include "org/smartfrog/sfcore/workflow/components.sf"

//Gets CA public key and ca information
GetCAInfo extends Prim {
	sfClass "org.smartfrog.avalanche.client.sf.apps.gt4.security.SFConfigureSecurity";
	
	// change localhost to server name
	//caServerLocator LAZY HOST "grid1.india.hp.com":rootProcess:App_2006-05-29_14_09_182;
	caServerLocator "";
	globusLoc "";
			
	shouldTerminate true;
}

//Sets up CA information in /etc/grid-security
SetupCAInfo extends SSHSession {
	SSHCmdExec:host "localhost";
	SSHCmdExec:username "";
	SSHCmdExec:password "";
	SSHCmdExec:logfile "/tmp/localhost.log";
	SSHCmdExec:timeout 6000;
	SSHCmdExec:failOnError false;
		
	SSHCmdExec:commands [];
}

//Request Host Certificate
ReqHostCert extends SSHSession {
	SSHCmdExec:host "localhost";
	SSHCmdExec:username "";
	SSHCmdExec:password "";
	SSHCmdExec:logfile "/tmp/localhost.log";
	SSHCmdExec:timeout 6000;
	SSHCmdExec:failOnError false;
		
	SSHCmdExec:commands [];	
}

//Get Signed Host Certificates
SignHostCert extends Prim {
	sfClass "org.smartfrog.avalanche.client.sf.apps.gt4.security.SFSetupHostCerts";
	
	caServerLocator "";
	globusLoc "";
		
	shouldTerminate true;
}

//Install Signed Host Cert
InstallHostCert extends SSHSession {
	SSHCmdExec:host "localhost";
	SSHCmdExec:username "";
	SSHCmdExec:password "";
	SSHCmdExec:logfile "/tmp/localhost.log";
	SSHCmdExec:timeout 6000;
	SSHCmdExec:failOnError false;
		
	SSHCmdExec:commands [];
}

//Install Container Cert
InstallContainerCert extends SSHSession {
	SSHCmdExec:host "localhost";
	SSHCmdExec:username "";
	SSHCmdExec:password "";
	SSHCmdExec:logfile "/tmp/localhost.log";
	SSHCmdExec:timeout 6000;
	SSHCmdExec:failOnError false;
		
	SSHCmdExec:commands [];
}

InstallUserCerts extends Prim {
	sfClass "org.smartfrog.avalanche.client.sf.apps.gt4.security.SFSetupUserCerts";
	
	caServerLocator LAZY HOST "grid1.india.hp.com":rootProcess:App_2006-05-29_14_09_182;
	globusLoc "";
	userPassphrase "";
	
	shouldTerminate true;
}


SetupUserCerts extends SSHSession {
	SSHCmdExec:host "localhost";
	SSHCmdExec:username "";
	SSHCmdExec:password "";
	SSHCmdExec:logfile "/tmp/localhost.log";
	SSHCmdExec:timeout 6000;
	SSHCmdExec:failOnError false;
		
	SSHCmdExec:commands [];
}


sfConfig extends Sequence {
/*sfConfig extends Parallel {
	asynchCreateChild true;
	security extends Sequence {*/
	//	caLocator LAZY HOST "grid1.india.hp.com":rootProcess:App_2006-05-29_14_09_182;
		[user] caLocator "App_2006-05-29_14_09_182";
		[user] caHost "grid1.india.hp.com";
		[user] globusLocation "/home/sandya/globus401bin";
		
		[user] rootUser "root";
		[user] rootPassword "";
	
		[user] globusUser "ritu";	
		[user] caHashkey "";
		setupCAInfoCommands ["mkdir -p /etc/grid-security/certificates",
							("mv /tmp/grid-security.conf."++ LAZY caHashkey ++ " /etc/grid-security/certificates/"),
							"rm -rf /etc/grid-security/*.conf",
							("ln -s /etc/grid-security/certificates/grid-security.conf." ++ LAZY caHashkey ++ " /etc/grid-security/grid-security.conf"),
							("mv /tmp/" ++ LAZY caHashkey ++ ".0 /etc/grid-security/certificates/"),
							("mv /tmp/"  ++ LAZY caHashkey ++ ".signing_policy /etc/grid-security/certificates/"),
							("mv /tmp/globus-host-ssl.conf."  ++ LAZY caHashkey ++ " /etc/grid-security/certificates/"),
							("ln -s /etc/grid-security/certificates/globus-host-ssl.conf."  ++ LAZY caHashkey ++ " /etc/grid-security/globus-host-ssl.conf"),
							("mv /tmp/globus-user-ssl.conf."  ++ LAZY caHashkey ++ " /etc/grid-security/certificates/"),
							("ln -s /etc/grid-security/certificates/globus-user-ssl.conf."  ++ LAZY caHashkey ++ " /etc/grid-security/globus-user-ssl.conf"),
							"chmod 644 /etc/grid-security/certificates/*"];
		hostCertRequest "true";
		reqHostCertCommands ["cd /etc/grid-security",
							("export GLOBUS_LOCATION=" ++ globusLocation),
							"source $GLOBUS_LOCATION/etc/globus-user-env.sh",
							("$GLOBUS_LOCATION/bin/grid-cert-request -force -host " ++ LAZY sfProcessHost)];
		
		installHostCertCommands ["mv -f /tmp/hostcert.pem /etc/grid-security/",
								"chmod 644 /etc/grid-security/hostcert.pem"];
		
		containerCertOwner globusUser;
		containerCertCommands ["cp -f /etc/grid-security/hostcert.pem /etc/grid-security/containercert.pem",
								"cp -f /etc/grid-security/hostkey.pem /etc/grid-security/containerkey.pem",
								"chmod 644 /etc/grid-security/containercert.pem",
								"chmod 400 /etc/grid-security/containerkey.pem",
								("chown " ++ containerCertOwner ++ ":" ++ containerCertOwner ++ " /etc/grid-security/container*.pem")];

		userCertCommands [("chown -R " ++ globusUser ++ ":" ++ globusUser ++ " /home/" ++ globusUser ++ "/.globus")];
		
		PassPhrase "";
		
		a extends GetCAInfo {
			caServerLocator LAZY caLocator;
			caServerHost LAZY caHost;
			globusLoc LAZY globusLocation;
		}
		
		b extends SetupCAInfo {
			SSHCmdExec:username LAZY rootUser;
			SSHCmdExec:password LAZY rootPassword;
			SSHCmdExec:commands LAZY setupCAInfoCommands;		
		}
		
		c extends ReqHostCert {
			SSHCmdExec:username LAZY rootUser;
			SSHCmdExec:password LAZY rootPassword;
			SSHCmdExec:commands LAZY reqHostCertCommands;				
		}
		
		d extends SignHostCert {
			caServerLocator LAZY caLocator;
			caServerHost LAZY caHost;
			globusLoc LAZY  globusLocation;
		}
		
		e extends InstallHostCert {
			SSHCmdExec:username LAZY rootUser;
			SSHCmdExec:password LAZY rootPassword;
			SSHCmdExec:commands LAZY installHostCertCommands;
		}
		
		f extends InstallContainerCert {
			SSHCmdExec:username LAZY rootUser;
			SSHCmdExec:password LAZY rootPassword;
			SSHCmdExec:commands LAZY containerCertCommands;
		}
		
		g extends InstallUserCerts {
			caServerLocator LAZY caLocator;
			caServerHost LAZY caHost;
			globusLoc LAZY globusLocation;
			userPassphrase LAZY PassPhrase;
			user LAZY globusUser;
		}

		h extends SetupUserCerts {
			SSHCmdExec:username LAZY rootUser;
			SSHCmdExec:password LAZY rootPassword;
			SSHCmdExec:commands LAZY userCertCommands;
		} 

/*
		a extends GetCAInfo {
			caServerLocator ATTRIB caLocator;
			globusLoc ATTRIB globusLocation;
		}
		
		b extends SetupCAInfo {
			SSHCmdExec:username ATTRIB rootUser;
			SSHCmdExec:password ATTRIB rootPassword;
			SSHCmdExec:commands ATTRIB setupCAInfoCommands;		
		}
		
		c extends ReqHostCert {
			SSHCmdExec:username ATTRIB rootUser;
			SSHCmdExec:password ATTRIB rootPassword;
			SSHCmdExec:commands ATTRIB reqHostCertCommands;				
		}
		
		d extends SignHostCert {
			caServerLocator ATTRIB caLocator;
			globusLoc ATTRIB globusLocation;
		}
		
		e extends InstallHostCert {
			SSHCmdExec:username ATTRIB rootUser;
			SSHCmdExec:password ATTRIB rootPassword;
			SSHCmdExec:commands ATTRIB installHostCertCommands;
		}
		
		f extends InstallContainerCert {
			SSHCmdExec:username ATTRIB rootUser;
			SSHCmdExec:password ATTRIB rootPassword;
			SSHCmdExec:commands ATTRIB containerCertCommands;
		}
		
		g extends InstallUserCerts {
			caServerLocator ATTRIB caLocator;
			globusLoc ATTRIB globusLocation;
			userPassphrase ATTRIB PassPhrase;
		}
*/
	//}
//}
}
