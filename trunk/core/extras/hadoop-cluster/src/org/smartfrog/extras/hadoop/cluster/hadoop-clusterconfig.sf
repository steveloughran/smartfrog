/* (C) Copyright 2009 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/






/**
 Configures a cluster from cluster references

 This system is designed to split based on a hostname flag; it looks at the name
 and decides whether or not to be in charge

 */




FullCluster extends ConfiguredCluster {

  threads WORKER_THREADS;
  max_tasks 6;
  sfLivenessDelay CLUSTER_LIVENESS_DELAY;

  namenodeHostname TBD;
  jobtrackerHostname namenodeHostname;
  filesystemURL ("hdfs://" ++ (namenodeHostname) ++ ":" ++ NameNodeIpcPort ++ "/");

  fs.default.name filesystemURL;

  jobtrackerPort HadoopHostnameConfiguration:MAPRED_JOB_TRACKER_DEFAULT_PORT;
  job.tracker.binding (jobtrackerHostname ++ ":" ++ jobtrackerPort );

  namenode:checkRunning false;


  cluster:fs.default.name filesystemURL;
  cluster:dfs.datanode.handler.count threads;
  cluster:mapred.job.tracker.handler.count threads;
  cluster:mapred.tasktracker.map.tasks.maximum max_tasks;
  cluster:mapred.job.tracker job.tracker.binding;
  cluster:mapred.job.tracker.hostname jobtrackerHostname;

  localhost extends Localhost;

}

FullClusterWithBindings extends FullCluster {
  namenodeHostname namenode.host;
  jobtrackerHostname jobtracker.host;
}

/*
FullClusterMultiProcess extends FullClusterWithBindings {
  namenode:sfProcessName NAMENODE_PROCESS;
  datanode:sfProcessName DATANODE1_PROCESS;
  jobtracker:sfProcessName JOBTRACKER_PROCESS;
  tasktracker:sfProcessName TASKTRACKER1_PROCESS;
}

*/

