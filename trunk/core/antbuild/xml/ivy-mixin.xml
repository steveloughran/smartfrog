<project name="ivy" 
    xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
    These targets extend compile-and-jar with extra states and transitions,
    to do pom-based builds.
  </description>

  
  <import file="core.xml"/>

  <!--define the published state-->
  <target name="published" depends="ivy-publish"/>


  <target name="ivy-properties" depends="init">
    <property name="ivy.user.dir" location="${user.home}/.ivy"/>
    <property name="ivy.local.dir" location="${ivy.user.dir}/local"/>
    <property name="ivy.cache.dir" location="${ivy.user.dir}/cache"/>

    <property name="ivy.package.name" value="org.smartfrog"/>
    <property name="ivy.smartfrog.version" value="latest.integration"/>
    <property name="ivy.jar" location="${root.dir}/antbuild/repository/org.apache.ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar"/>
    <!--Ivy 2 uses some separate directories, that also need cleanup-->
    <property name="ivy2.user.dir" location="${user.home}/.ivy2"/>
    <property name="ivy2.local.dir" location="${ivy2.user.dir}/local"/>
    <property name="ivy2.cache.dir" location="${ivy2.user.dir}/cache"/>
    <echo level="verbose">
      ivy.user.dir = ${ivy.user.dir}
      ivy2.user.dir = ${ivy2.user.dir}
    </echo>
  </target>

  <target name="ivy-dirs" depends="ivy-properties">
    <!--here to ensure that any operations on the caches have somewhere to
   work from-->
    <mkdir dir="${ivy.cache.dir}"/>
    <mkdir dir="${ivy.local.dir}"/>
    <mkdir dir="${ivy2.cache.dir}"/>
    <mkdir dir="${ivy2.local.dir}"/>
  </target>


  <target name="ivy-probe-antlib" >
    <condition property="ivy.found">
      <typefound uri="antlib:org.apache.ivy.ant" name="retrieve"/>
    </condition>
  </target>

  <target name="ivy-init-dir" depends="init-core, ivy-dirs">
    <property name="ivy.dir" location="${root.dir}/antbuild/ivy" />
  </target>
  
  <target name="ivy-init-antlib" depends="ivy-init-dir,load-version-info,artifact-names,ivy-probe-antlib"
    unless="ivy.found"
    xmlns:ivy="antlib:org.apache.ivy.ant">
    <!--load up ivy-->
    <fail>
      <condition>
        <not>
          <available file="${ivy.jar}"/>
        </not>
      </condition>
      Unable to locate "${ivy.jar}"
      Either part of the directory tree is missing, or the ivy version,
      currently set to "${ivy.version}" is wrong.
    </fail>
    <typedef uri="antlib:org.apache.ivy.ant" onerror="fail"
      resource="fr/jayasoft/ivy/ant/antlib.xml"
      loaderRef="ivyLoader">
      <classpath>
        <pathelement location="${ivy.jar}"/>
      </classpath>
    </typedef>
    <!--create the external dir if it is missing-->
    <mkdir dir="external"/>
    <property name="ivysettings.xml" location="${ivy.dir}/ivysettings.xml"/>
    <ivy:configure file="${ivysettings.xml}" override="true"/>
  </target>
  


  <target name="ivy-init" depends="ivy-init-antlib" >
    <!--copy ivy artifacts -->
    <property name="ivy.lib.dir" location="${build.dir}/ivy/lib" />
    <property name="ivysettings.xml" location="${ivy.dir}/ivysettings.xml"/>
    <ivy:configure file="${ivysettings.xml}" override="false"/>

    <property name="ivy.artifact.retrieve.pattern"
        value="[conf]/[artifact]-[revision].[ext]"/>
    <property name="ivy.publish.pattern"
        value="[artifact]-[revision].[ext]"/>
  </target>

  <target name="ivy-resolve" depends="ivy-init">
    <ivy:resolve />
  </target>

  <target name="ivy-retrieve" depends="ivy-resolve">
    <ivy:retrieve pattern="${ivy.lib.dir}/${ivy.artifact.retrieve.pattern}" sync="true" />
  </target>

  <target name="ivy-report" depends="ivy-resolve">
    <ivy:report todir="${build.dir}/ivy/report"/>
  </target>

  <target name="ready-to-publish" depends="state.ready-to-publish,ivy-report"/>

  <target name="ivy-publish" depends="ready-to-publish-all,ready-to-publish,ivy-resolve">
    <ivy:publish resolver="local" pubrevision="${artifact.version}"
        overwrite="true"
        artifactspattern="${dist.lib.dir}/${ivy.publish.pattern}" />
  </target>

  <target name="ready-to-publish-all" depends="ready-to-publish,documents-processed"/>

  <target name="ivy-publish-all" depends="ivy-publish">
  </target>

  <target name="ivy-install" depends="ivy-publish"
      description="Component built and installed locally"/>

  <target name="ivy-published" depends="ivy-publish" />


</project>