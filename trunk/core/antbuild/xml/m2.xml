<project name="m2" basedir="." default="init-m2"

  >

  <description>
    This is an import library that runs
    checkstyle.
  </description>

  <!-- import the core -->
  <import file="core.xml"/>

  
  <!-- ========================================================== -->
  <!-- init all the maven2 support   -->
  <!-- ========================================================== -->
   <target name="init-m2" 
    depends="init-core,artifact-names">
 

    <!-- Maven2 stuff
      All components build into the org.smartfrog group, unless otherwise stated, but
      are their own artifacts. 
      -->
    <property name="m2.repository" location="${user.home}/.m2/repository" />
    
        
    <!-- make the root path of an artifact -->
    <macrodef name="m2-makepath">
      <attribute name="property"/>
      <attribute name="groupIDpath" />
      <attribute name="artifactID" default="@{groupIDpath}"/>
      <attribute name="classifier" default=""/>
      <attribute name="version"/>
      <sequential>
        <property name="@{property}" 
          location="${m2.repository}/@{groupIDpath}/@{artifactID}/@{version}" />
      </sequential>
    </macrodef>
    
    <property name="m2.artifact.name" value="${artifact.name}" />
    <property name="m2.groupID" value="org.smartfrog" />
    <property name="m2.groupID.path" value="org/smartfrog" />
    <m2-makepath property="m2.subdir"
      groupIDpath="${m2.groupID.path}"
      artifactID="${m2.artifact.name}"
      version="${artifact.version}" />
    <!-- pom setup -->
    <property name="target.pom" location="${dist.lib.dir}/${m2.artifact.name}.pom" />
    <property name="project.pom" location="project-template.pom" />
    <available property="project.haspom" file="${project.pom}" />
    <property name="m2.tasks.uri" value= "antlib:org.apache.maven.artifact.ant" />
    <available property="m2.tasks.available"
      resource="org/apache/maven/artifact/ant/antlib.xml" />
      <!-- location of the bit of the repository we keep under SCM -->
    <property name="m2.smartfrog.scm.repository"
      location="${antbuild.dir}/repository" />
    <makeurl file="${m2.smartfrog.scm.repository}"
        property="m2.smartfrog.scm.repository.url" />
    <property name="m2.smartfrog.scm.old.repository"
      location="${smartfrog.components.dir}/lib" />
    <makeurl file="${m2.smartfrog.scm.old.repository}"
        property="m2.smartfrog.scm.old.repository.url" />
    <makeurl file="${user.home}/.maven/repository/"
         property="m1.repository.url"/>        
    <property name="m2.ibiblio.repository"
      value="http://ibiblio.org/maven2"/>
     <property name="m1.apache.cvs.repository"
         value="http://cvs.apache.org/repository/"/>

   </target>
   
   
   <target name="m2-tasks" depends="init-m2"
       xmlns:m2="antlib:org.apache.maven.artifact.ant">
     <fail unless="m2.tasks.available">
     you need the maven2 tasks from http://maven.apache.org/maven2/ant-tasks.html
     </fail>
    <presetdef name="libraries" uri="antlib:org.apache.maven.artifact.ant">
      <m2:dependencies verbose="true">
        <localRepository location="${m2.repository}" />
        <!-- look in SCM first -->
        <remoteRepository url="${m2.smartfrog.scm.repository.url}"
        />
        <remoteRepository url="${m2.smartfrog.scm.old.repository.url}" />
        <!-- then hit ibiblio -->
        <remoteRepository url="${m2.ibiblio.repository}" />
        <!-- local M1 repository -->
        <remoteRepository url="${m1.repository.url}"
            layout="legacy"/>

        <!-- apache M1 repository -->
        <remoteRepository url="${m1.apache.cvs.repository}" layout="legacy"/>

        <remoteRepository url="http://dist.codehaus.org/" layout="legacy"/>

      </m2:dependencies>
    </presetdef>

   </target>
   

  <!-- ========================================================== -->
  <!-- POM creation/copy, depending on whether it exists or not   -->
  <!-- ========================================================== -->
  
   <target name="m2-copy-pom" depends="init-m2" if="project.haspom">
     <copy file="${project.pom}" tofile="${target.pom}" > 
      <!-- we expand ant properties here.  -->
       <filterchain>
        <expandproperties/>
       </filterchain>
     </copy>
   </target>


  <target name="m2-pom-macros" depends="init-m2">
    <macrodef name="m2-makepom" uri="antlib:org.apache.maven.artifact.ant">
      <attribute name="artifact"/>
      <attribute name="target"/>
      <sequential>
        <echo message="Creating Pom @{target}" level="verbose"/>
        <echo file="@{target}"><![CDATA[<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>${m2.groupID}</groupId>
  <artifactId>@{artifact}</artifactId>
  <packaging>jar</packaging>
  <version>${Version}</version>
</project>
]]></echo>
      </sequential>
    </macrodef>


    <!--make a pom that depends upon smartfrog-->
    <macrodef name="m2-makesfpom" uri="antlib:org.apache.maven.artifact.ant">
      <attribute name="artifact"/>
      <attribute name="org" default="org.smartfrog"/>
      <attribute name="target"/>
      <attribute name="version" default="${artifact.version}"/>
      <attribute name="smartfrog.version" default="${artifact.version}"/>
      <sequential>
        <echo message="Creating Pom @{target}" level="verbose"/>
        <echo file="@{target}"><![CDATA[<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>@{org}</groupId>
  <artifactId>@{artifact}</artifactId>
  <packaging>jar</packaging>
  <version>${Version}</version>
     <dependencies>
       <dependency>
         <groupId>org.smartfrog</groupId>
         <artifactId>smartfrog</artifactId>
         <version>@{version}</version>
       </dependency>
     </dependencies>
</project>
]]></echo>
      </sequential>
    </macrodef>
  </target>

   <!-- inline creation of a very minimal (zero dependency) pom -->
   <target name="m2-make-pom" depends="m2-pom-macros" unless="project.haspom">
<!--     <m2-makesfpom target="${target.pom}"
         artifact="${m2.artifact.name}"
         version="${artifact.version}" />-->
   <echo message="Creating Pom ${target.pom}" level="verbose"/>
   <echoxml file="${target.pom}">
      <project>
        <modelVersion>4.0.0</modelVersion>
        <groupId>${m2.groupID}</groupId>
        <artifactId>${m2.artifact.name}</artifactId>
        <packaging>jar</packaging>
        <version>${artifact.version}</version>
      </project>
    </echoxml>
   
   </target>
   
   <target name="m2-pom" depends="m2-copy-pom,m2-make-pom" />


  <target name="m2-install" depends="dist,m2-pom"
      xmlns:m2="antlib:org.apache.maven.artifact.ant">
    <m2:install file="${target.jar}">
      <pom file="${target.pom}"/>
    </m2:install>
  </target>
   
  <!-- ========================================================== -->
  <!-- this is not  normally for overriding -->
  <!-- install the jar, to the local maven2 repository -->
  <!-- ========================================================== -->
<!--   
  <target name="m2-install" depends="checksum-target-jar,m2-pom"
      description="copy the JAR file local maven repository">
      
    <mkdir dir="${m2.subdir}"/>    
    <copy file="${target.jar}" todir="${m2.subdir}"/>
    <copy file="${target.pom}" todir="${m2.subdir}" failonerror="false"/>
    <copy file="${target.jar}.md5" todir="${m2.subdir}" failonerror="false"/>

  </target>
   -->
   
   <!-- 
    search through the reposityr for <groupId>xom</groupId>
   -->
   <target name="m2-artifact-search"  depends="m2.init-m2">
     <fail unless="search">Define property search to the group to look
       for</fail>
     <fileset id="matching.files"
              dir="${m2.repository}"
              includes="**/*.pom">
       <containsregexp expression="&lt;groupId&gt;${search}&lt;/groupId&gt;"/>
     </fileset>
     <property name="matching.files.property" refid="matching.files"/>
     <echo>matches=${matching.files.property}</echo>
     <fileset id="matching2.files"
              dir="${m2.smartfrog.scm.repository}"
              includes="**/*.pom">
       <containsregexp expression="&lt;groupId&gt;${search}&lt;/groupId&gt;"/>
     </fileset>
     <property name="matching2.files.property" refid="matching2.files"/>
     <echo>matches=${matching2.files.property}</echo>
     <fileset id="matching3.files"
              dir="${m2.smartfrog.scm.old.repository}"
              includes="**/*.pom">
       <containsregexp expression="&lt;groupId&gt;${search}&lt;/groupId&gt;"/>
     </fileset>
     <property name="matching3.files.property" refid="matching3.files"/>
     <echo>matches=${matching3.files.property}</echo>
   </target>



</project>
