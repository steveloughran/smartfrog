<?xml version="1.0"?>
<project name="SmartFrog Master" default="help" basedir=".">
<!--
/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/
-->


  <target name="help" description="help information">
    <echo>
    This is a primary build file for SmartFrog, which delegates down to
    specific components to do the work. It also contains support for
    cruise control
    </echo>
  </target>

    <!-- =================================================================== -->
  <!-- any common initialisations                                          -->
  <!-- =================================================================== -->
  <target name="init">
    <property file="build.properties" />
    <!-- look for a feature that only came in in ant 1.7alpha -->
    <available property="nice.task.present"
      classname="org.apache.tools.ant.taskdefs.Nice" />
    <property name="toplevel.dir" location=".." />
    <property name="main.project" location="smartfrog" />
    <property name="test.project" location="testharness" />
    <property name="components.project" location="components" />
    <property name="extras.dir" location="extras" />
    <property name="ant.project" location="${extras.dir}/ant" />

    <macrodef name="forward2">
     <attribute name="dir" />
     <attribute name="target" />
     <attribute name="inheritAll" default="false" />
     <sequential>
      <subant 
        antfile="build.xml"
        target="@{target}" inheritAll="@{inheritAll}"
        inheritrefs="false">
        <buildpathelement location="@{dir}"/> 
      </subant>
     </sequential>
    </macrodef>
    <macrodef name="forward">
      <attribute name="dir"/>
      <attribute name="target"/>
      <attribute name="inheritAll" default="false"/>
      <sequential>
        <forward2 dir="@{dir}" target="@{target}" inheritAll="@{inheritAll}"/>
      </sequential>
    </macrodef>
  </target>
  
  <!-- =================================================================== -->
  <!-- build a distribution of smartfrog.jar, sfExamples.jar               -->
  <!-- =================================================================== -->
  <target name="main-dist" depends="init" description="build a distribution">
    <forward2 dir="${main.project}" target="dist"  />
  </target>
  
  <!-- tracking down quirks in subant -->
   <target name="diag2" depends="init" >
    <forward2 dir="${components.project}" target="diag2"  /> 
  </target>
  
  <!-- =================================================================== -->
  <!-- clean all sub-projects                                              -->
  <!-- =================================================================== -->
  <target name="clean" depends="init" description="clean up">
 
    <!--forward2 dir="${main.project}" target="clean"  /-->
    <forward2 dir="${test.project}" target="clean"  />
    <forward2 dir="${components.project}" target="clean"  /> 
    <forward2 dir="${ant.project}" target="clean"  />
    <forward2 dir="${main.project}" target="clean"  />
    
  </target>

  <!-- =================================================================== -->
  <!-- ant tasks distribution                                                    -->
  <!-- =================================================================== -->

  <target name="tasks" depends="init" description="ant tasks">
    <forward2 dir="${ant.project}" target="dist"  />
  </target>


  <!-- =================================================================== -->
  <!-- components distribution                                                    -->
  <!-- =================================================================== -->

  <target name="components" depends="main-dist,tasks" 
    description="components distribution(s)">
    <forward2 dir="${components.project}" target="dist"  />
  </target>

  <!-- =================================================================== -->
  <!-- m2 installation distribution                                                    -->
  <!-- =================================================================== -->

  <target name="m2-install" depends="main-dist,tasks" 
    description="components installation into the m2 cache">
    <forward2 dir="${components.project}" target="m2-install"  />
  </target>  
  
  <!-- =================================================================== -->
  <!-- main distribution                                                    -->
  <!-- =================================================================== -->

  <target name="dist" depends="main-dist" description="distributables">
  </target>


  <!-- =================================================================== -->
  <!-- test in the ant project                                            -->
  <!-- =================================================================== -->
  <target name="test-ant" depends="init" description="test in main project">
    <forward2 dir="${ant.project}" target="test"  />
  </target>

  <!-- =================================================================== -->
  <!-- test in the main project                                            -->
  <!-- =================================================================== -->
  <target name="test-main" depends="init" description="test in main project">
    <forward2 dir="${main.project}" target="sfParseTest"  />
  </target>


  <!-- =================================================================== -->
  <!-- test in the harness                                                 -->
  <!-- =================================================================== -->
  <target name="test-testharness" depends="init,tasks"
    description="test in test harness; only run system tests">
    <forward2 dir="${test.project}" target="test"  />
  </target>

  <!-- =================================================================== -->
  <!-- test in the harness                                                 -->
  <!-- ===================================18================================ -->
  <target name="test-components" depends="init,tasks"
    description="test in test harness; only run system tests">
    <forward2 dir="${components.project}" target="test"  />
  </target>  
  
  <!-- =================================================================== -->
  <!-- test all                                                            -->
  <!-- =================================================================== -->
  <target name="test" depends="test-main,test-ant,test-testharness"
    description="test everything"/>


  <!-- the following targets are for use in CruiseControl automated builds;
       rather than for normal command line/IDE work. -->


  <!-- =================================================================== -->
  <!-- any cruise control initialisations                                          -->
  <!-- =================================================================== -->
    <target name="cc-init" depends="cc-set-build-priority">
      <property name="cc.artifacts.dir" location="${toplevel.dir}/artifacts" />
      <mkdir dir="${cc.artifacts.dir}"/>
      <property name="cruise.base.dir" location="${toplevel.dir}" />
      <property name="cruise.main.project" location="${cruise.base.dir}/main"/>
      <property name="cruise.lib.dir" location="${cruise.main.project}/lib"/>
      <property name="cruise.dist.dir" location="${cruise.main.project}/dist"/>
      <property name="cruise.config.file" location="cruisecontrol.xml"/>
      <property name="cruise.control.port" value="7999"/>
      <property name="cruise.control.rmiport" value="7998"/>
    </target>

  <!-- =================================================================== -->
  <!-- -sets the priority to 3 unless overridden -this lowers the priority -->
  <!-- of any non-forked code, but does nothing for execed apps            -->
  <!-- =================================================================== -->
    <target name="cc-set-build-priority" depends="init" if="nice.task.present" >
      <property name="cc.nice.value" value="3" />
      <!-- SLO: this is disabled because in ant1.6.2. the nice class is there, but
      not the task definition -->
      <!-- <nice newPriority="${cc.nice.value}" /> -->
    </target>

  <!-- =================================================================== -->
  <!-- update code from CVS. Can overwrite this file too!                  -->
  <!-- =================================================================== -->
    <target name="cvsupdate" depends="cc-init"
      description="update CVS; needs cvs on the command line">
      <exec executable="cvs" failonerror="true">
        <arg line="-r -z7 update -dP" />
      </exec>
    </target>

  <!-- =================================================================== -->
  <!-- incremental Cruise Control build                                    -->
  <!-- =================================================================== -->
       <target name="cc-incremental"
        depends="cvsupdate,dist,tasks"/>

    <!-- =================================================================== -->
    <!-- Cruise control test suite                                    -->
    <!-- =================================================================== -->
    <target name="cc-test"
        depends="test-main,test-testharness,test-ant"/>

  <!-- =================================================================== -->
  <!-- full clean Cruise Control build                                     -->
  <!-- =================================================================== -->
    <target name="cc-full"
        depends="cvsupdate,clean,cc-incremental,cc-test, mavenReport" 
        description="cruise control full build, with checkout"/>

  <!-- =================================================================== -->
  <!-- Start cruise control from inside ant  -->
  <!-- Currently we fork and use whichever version of ant is in CC, not -->
  <!-- the version of Ant that is currently running. This is ugly, but -->
  <!-- guarantees equivalence with the command line. -->
  <!-- Override any of the properties to change location of cruise control -->
  <!-- =================================================================== -->
  <target name="cruise" depends="cc-init" description="run cruise control">
    <condition property="cc.found">
      <and>
        <available file="${cruise.lib.dir}" type="dir"/>
        <available file="${cruise.dist.dir}/cruisecontrol.jar" />
      </and>
    </condition>
    <fail unless="cc.found" >
      Cruise Control was not found in ${cruise.main.project}
    </fail>
    <java fork="true" classname="CruiseControl" failonerror="true">
      <classpath>
        <fileset dir="${cruise.lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${cruise.dist.dir}" includes="*.jar"/>
      </classpath>
      <arg value="-configfile"/>
      <arg file="${cruise.config.file}"/>
      <arg value="-port"/>
      <arg value="${cruise.control.port}"/>
      <arg value="-rmiport"/>
      <arg value="${cruise.control.rmiport}"/>
    </java>
   </target>

<!-- =================================================================== -->
<!--  Maven site:generate-->
<!-- =================================================================== -->
  <target name="mavenReport" depends="cvsupdate" 
    description="run 'maven site:generate'" if="maven.present">
        <exec executable="maven" dir="${cruise.base.dir}">
            <arg line="site:generate" />
        </exec>
    </target>



<!-- =================================================================== -->
<!-- Gump target for distribution -->
<!-- =================================================================== -->
  <target name="gump-dist" depends="dist" />

<!-- =================================================================== -->
<!-- Gump best practises say unit tests only -->
<!-- =================================================================== -->
  <target name="gump-test" depends="test" />


</project>
