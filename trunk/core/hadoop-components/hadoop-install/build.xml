<?xml version="1.0" encoding="utf-8"?>
<project name="hadoop-install" default="default">

    <description>
        This build file exists to build and test the SmartFrog installer

        It generates
        * installer-${installer.version}.jar, containing the binaries of installer and the default
        * SF description files.

        These artifacts can be published locally, or written to the
        ${antbuild.dir}/repository/internal repository, where
        ${antbuild.dir} defaults to ../antbuild
    </description>

  <!-- override point -->
  <property file="build.properties"/>
  <property name="root.dir" location="../../"/>
  <property name="ivy.enabled" value="true"/>
  <property name="groovy.enabled" value="true"/>
  <property name="system.tests" value="true"/>
  <property name="is.component" value="true"/>

  <!-- Import common stuff -->
  <import file="${root.dir}/common.xml"/>


  <echo message="==================================================================="/>
  <echo message="= ${ant.project.name}"/>


  <target name="ready-to-hadoop"
      depends="declare-extended-smartfrog-tasks, init-deploy-properties">
    <presetdef name="hdeploy" >
      <sf-deploy classpathref="run.classpath"
          logStackTraces="true"
          host="${deploy.host}"
          timeout="${deploy.timeout}"
          >
        <!--<codebase url="${codebase}"/>-->
        <jvmarg line="${daemon.jvmargs}" />
        <propertyfile file="${runtime.properties}" optional="true"/>
        <syspropertyset refid="proxy.settings"/>
        <syspropertyset refid="daemon-properties"/>
      </sf-deploy>
    </presetdef>

    <presetdef name="hstop">
      <sf-undeploy classpathref="run.classpath"
        host="${deploy.host}"
        >
        <jvmarg line="${daemon.jvmargs}"/>
        <propertyfile file="${runtime.properties}" optional="true"/>
        <syspropertyset refid="proxy.settings"/>
        <syspropertyset refid="daemon-properties"/>
      </sf-undeploy>
    </presetdef>

    <property name="repository.dir" location="." />
    <property name="components.dir" location="components"/>
    <property name="hadoop.sf" value="components/hadoop/hadoop.sf" />
  </target>
  
  <target name="worker" depends="ready-to-hadoop">
    <hdeploy>
      <application name="worker" >
        #include "${hadoop.sf}"
        sfConfig extends HadoopWorker {
          componentsDir "${components.dir}";
        }
      </application>
    </hdeploy>  
  </target>

  <target name="stop-worker" depends="ready-to-hadoop">
    <hstop application="worker"/>
  </target>

  <target name="master" depends="ready-to-hadoop">
    <hdeploy>
      <application name="master">
        #include "${hadoop.sf}"

        HadoopOptions:namenodeHost "wildhaus";
        
        sfConfig extends HadoopMaster {
          componentsDir "${components.dir}";
        }
      </application>
    </hdeploy>
  </target>

  <target name="stop-master" depends="ready-to-hadoop">
    <hstop application="master"/>
  </target>

</project>