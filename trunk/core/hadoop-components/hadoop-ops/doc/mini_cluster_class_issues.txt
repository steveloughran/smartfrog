

-classes should be marked as final as they start threads in their ctor, and subclasses will break

-hard coded locations for data, files

-leakage. Having a way to verify they are stopped would prevent this.

MiniDFSCluster
==============
Field nameNode should be marked as volatile as the shutdown operation can be in a different thread than startup. Best of all, ops to set
the field, get the field and shutdown should be synchronized.

-fetches the test data dir from System Properties.
     base_dir = new File(System.getProperty("test.build.data", "build/test/data"), "dfs/");
    data_dir = new File(base_dir, "data");

Improvement: have a test property in the conf file, and only read the system property if this is unset. This will enable
 >1 MiniDFSCluster to come up in the same JVM, and handle shutdown/startup race conditions better, and avoid the
 "java.io.IOException: Cannot lock storage build/test/data/dfs/name1. The directory is already locked." messages

 This change would need to be hooked up to the formatDataNodeDirs() method as well as corruptBlockOnDataNode() and  MiniDFSCluster/10
 as there's duplicate code there today.



waitClusterUp operation should log to LOG.info and not System.err. Enables containers to catch and stream better, include more diagnostics, etc
Similarly, other methods log to System.out instead of a Log instance

-could benefit from a method to return the FS URI, rather than just the FS. This currently has to be done with some tricks involving a cached configuration


-waitActive could get confused if localhost maps to an IPv6 address. Better to ask for 127.0.0.1 as the hostname, not localhost; Junit
needs to be set up to force in IPv4 too.

- injectBlocks has a spelling error in the IOException, "SumulatedFSDataset" is the correct spelling