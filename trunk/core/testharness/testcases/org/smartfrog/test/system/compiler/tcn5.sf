/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

// Parser extensions
#include "org/smartfrog/functions.sf"

// Counter component
#include "org/smartfrog/examples/counter/components.sf"

//Running without Prim and Compound schemas.
#include "org/smartfrog/components.sf"

sfSchema false;

/*
Error tested:
 - FAILED when trying DEPLOY of 'TCN5',  [org/smartfrog/test/system/compiler/tcn5.sf],  deployReference: HERE sfconfig,  host:localhost
   Error:
    SmartFrogDeploymentException: HOST guijarro-j-3.hpl.hp.com:rootProcess:example1JBuilider failed to deploy 'TCN5' component. Wrong class when resolving 'HERE sfClass': '' (org.smartfrog.sfcore.common.SFNull)
    cause: java.lang.ClassCastException
    reference: HERE sfClass
    deployedContext: included
    data: defaul
*/

value1 43;
value2 56;

string1 "value is ";
string2 "\n";

Base extends concat {
    a  ATTRIB string1;
    b extends sum {
       first ATTRIB value1;
       second ATTRIB value2;
    }
    c ATTRIB string2;
}

innerVector extends vector {
    a ATTRIB string1;
    b extends sum {
       first ATTRIB value1;
       second ATTRIB value2;
    }
}


outerVector extends vector{
    -- ["elementA","elementB"];
   -- "Message from outerVector";
   -- extends innerVector;
}

sfConfig extends Prim {  // -> To Fail
sfClass ;
//sfConfig extends Counter {
   message extends concat {
       hello "hello - here is a constructed message\n";
       base extends Base;
       bye "goodbye\n";
      newVector extends outerVector;
      -- ATTRIB string2;
   }
  limit 5;
}
