/** (C) Copyright 1998-2004 Hewlett-Packard Development Company, LP

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For more information: www.smartfrog.org

*/

/**
 * example 4 creates two pairs of generator and printer components that are
 * detached from each other
 */


#include "/org/smartfrog/components.sf"
#include "/org/smartfrog/sfcore/workflow/combinators/detachingcompound.sf"
#include "/org/smartfrog/sfcore/workflow/combinators/timeout.sf"
#include "/org/smartfrog/services/assertions/components.sf"

Child extends Compound {
  message "child component";
}

DetachingCompoundInstance extends DetachingCompound {

  // set to true if you want the compound to detach itself on start
  detachUpwards true;
  // set to true if you want the compound to terminate at the end of the start phase
  autoDestruct true;
  sfShouldTerminate true;

  timeoutChild extends Timeout {
      //give it a new name, so it can be discovered after detachment.
      sfProcessComponentName "testDetachingCompoundTimeoutChild";

      //the child doesn't terminate, so the timeout kicks in
      action extends Compound;

      //so, after 30 seconds, this component terminates itself
      timeout (30*1000);

      name "timeoutChild";
  }
}



testDetachingCompound extends ExpectDeploy {

  action extends Compound {

  }

  tests extends Sequence {
    tdci DetachingCompoundInstance;

    checkLink extends AssertWorkflow {
      reference LAZY ROOT:testDetachingCompoundTimeoutChild;
      attribute "name";
      attributeEquals "timeoutChild";
    }
  }

}